<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>1/f随机过程</title>
    <url>/2023/10/31/1%E6%AF%94f%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h2><p>在看《Backscattering Properties of MultiScale Rough Surfaces》这篇文章的时候，发现自己对 $ 1/f $ 随机信号一无所知，然后找到了《一种 1/f 噪声模型的分析方法》这篇文章。</p>
<h2 id="1-1-f-模型"><a href="#1-1-f-模型" class="headerlink" title="1. $ 1/f $ 模型"></a>1. $ 1/f $ 模型</h2><h4 id="1-1-1-f-模型定义"><a href="#1-1-1-f-模型定义" class="headerlink" title="1.1 $ 1/f $ 模型定义"></a>1.1 $ 1/f $ 模型定义</h4><p>1/f 过程是指其功率谱密度满足如下关系的随机过程：</p>
<script type="math/tex; mode=display">
s_x(\omega) \sim \frac{\sigma_x^2}{\vert \omega \vert^\gamma}</script><p>其中 $\omega_x^2$ 为谱常量, $\gamma$ 为频率指数或谱常数，范围为0到2。</p>
<p>准确定义：广义上平稳零均值的随机过程 $x(t)$ ，如果出现了上下限频率 ，并被理想带通滤波器滤波后,其输出信号满足</p>
<script type="math/tex; mode=display">
\frac{\sigma_L^2}{\vert \omega \vert^\gamma} \leq s_x(\omega) \leq \frac{\sigma_U^2}{\vert \omega \vert^\gamma}</script><p>因此自然界的 $1/f$ 过程只能在一定频率范围存在。</p>
<h4 id="1-2-1-f-过程性质"><a href="#1-2-1-f-过程性质" class="headerlink" title="1.2 $ 1/f $ 过程性质"></a>1.2 $ 1/f $ 过程性质</h4><ol>
<li>$ 1/f $过程的均值为0</li>
<li>$ 1/f $过程具有统计自相似性(即对于 $a&gt;0$ 存在常数 $H$ 使 $x(t)=a^{-H}x(at)$, $H$ 表示自相似程度)</li>
</ol>
<h4 id="1-3"><a href="#1-3" class="headerlink" title="1.3"></a>1.3</h4>]]></content>
      <tags>
        <tag>科研项目系列</tag>
      </tags>
  </entry>
  <entry>
    <title>Effective C++学习</title>
    <url>/2023/08/05/Effective-C-%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>CMOD5模型的matlab实现</title>
    <url>/2022/11/01/CMOD5%E6%A8%A1%E5%9E%8B%E7%9A%84matlab%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%% 数据准备</span></span><br><span class="line">clear</span><br><span class="line">clc</span><br><span class="line"><span class="comment">%% 模型系数准备</span></span><br><span class="line"><span class="keyword">global</span> c</span><br><span class="line">c=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">28</span>);</span><br><span class="line">c(<span class="number">1</span>:<span class="number">13</span>)=[<span class="number">-0.318004</span>,<span class="number">-1.416264</span>,<span class="number">0.006174</span>,<span class="number">-0.058233</span>,<span class="number">0.001851</span>,<span class="number">0.023727</span>,<span class="number">0.071528</span>,<span class="number">0.016858</span>,<span class="number">4.889050</span>,<span class="number">-0.541012</span>,<span class="number">-1.762694</span>,<span class="number">0.487292</span>,<span class="number">-0.058692</span>];</span><br><span class="line">c(<span class="number">14</span>:<span class="number">18</span>)=[<span class="number">0.128558</span>,<span class="number">0.010419</span>,<span class="number">0.08296</span>,<span class="number">0.032500</span>,<span class="number">16.730787</span>];</span><br><span class="line">c(<span class="number">19</span>:<span class="number">28</span>)=[<span class="number">1.466281</span>,<span class="number">7.358231</span>,<span class="number">13.328972</span>,<span class="number">-9.012029</span>,<span class="number">0.999416</span>,<span class="number">2.52457</span>,<span class="number">-0.524396</span>,<span class="number">0.407859</span>,<span class="number">2.227098</span>,<span class="number">-0.306554</span>];</span><br><span class="line">v=<span class="number">0</span>:<span class="number">0.1</span>:<span class="number">20</span>;</span><br><span class="line">theta=<span class="number">30</span>;psai=<span class="number">0</span>;p=<span class="number">1.6</span>;</span><br><span class="line">sigma0=<span class="built_in">zeros</span>(<span class="number">2</span>,<span class="built_in">length</span>(v));</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">length</span>(v)</span><br><span class="line">    sigma0(<span class="number">1</span>,<span class="built_in">i</span>)=sigma0_hh(v(<span class="built_in">i</span>),psai,theta,p);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">c(<span class="number">1</span>:<span class="number">13</span>)=[<span class="number">-0.688</span>,<span class="number">-0.793</span>,<span class="number">0.338</span>,<span class="number">-0.173</span>,<span class="number">0</span>,<span class="number">0.004</span>,<span class="number">0.111</span>,<span class="number">0.0162</span>,<span class="number">6.34</span>,<span class="number">2.57</span>,<span class="number">-2.18</span>,<span class="number">0.4</span>,<span class="number">-0.6</span>];</span><br><span class="line">c(<span class="number">14</span>:<span class="number">18</span>)=[<span class="number">0.045</span>,<span class="number">0.007</span>,<span class="number">0.33</span>,<span class="number">0.012</span>,<span class="number">22</span>];</span><br><span class="line">c(<span class="number">19</span>:<span class="number">28</span>)=[<span class="number">1.95</span>,<span class="number">3</span>,<span class="number">8.39</span>,<span class="number">-3.44</span>,<span class="number">1.36</span>,<span class="number">5.35</span>,<span class="number">1.99</span>,<span class="number">0.29</span>,<span class="number">3.8</span>,<span class="number">1.53</span>];</span><br><span class="line"><span class="comment">%网站上Fortran程序的参数</span></span><br><span class="line"><span class="comment">%cmod5n(5.0,0.0,45.0) =   0.00872497 这是程序给出的一个参考结果</span></span><br><span class="line"><span class="comment">%c=[-0.6878, -0.7957,  0.3380, -0.1728, 0.0000,  0.0040, 0.1103, 0.0159,  6.7329,  2.7713, -2.2885, 0.4971, -0.7250, 0.0450, 0.0066,  0.3222,  0.0120, 22.7000, 2.0813,  3.0000, 8.3659, -3.3428,  1.3236,  6.2437,  2.3893, 0.3249,  4.1590, 1.6930];</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">length</span>(v)</span><br><span class="line">    sigma0(<span class="number">2</span>,<span class="built_in">i</span>)=sigma0_vv(v(<span class="built_in">i</span>),psai,theta,p);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">res=sigma0_vv(<span class="number">5</span>,<span class="number">0</span>,<span class="number">45</span>,p);</span><br><span class="line"><span class="comment">%% 修饰区</span></span><br><span class="line"><span class="built_in">plot</span>(v,sigma0(<span class="number">1</span>,:),<span class="string">&#x27;b&#x27;</span>,v,sigma0(<span class="number">2</span>,:),<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">1.5</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;wind speed(m/s)&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;\sigma_0&#x27;</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;CMOD5-HH&#x27;</span>,<span class="string">&#x27;CMOD5-VV&#x27;</span>)</span><br><span class="line"><span class="built_in">figure</span></span><br><span class="line"><span class="built_in">plot</span>(v,std2dB(sigma0(<span class="number">1</span>,:)),<span class="string">&#x27;b&#x27;</span>,v,std2dB(sigma0(<span class="number">2</span>,:)),<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">1.5</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;wind speed(m/s)&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;\sigma_0(dB)&#x27;</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;CMOD5-HH&#x27;</span>,<span class="string">&#x27;CMOD5-VV&#x27;</span>)</span><br><span class="line"><span class="built_in">figure</span></span><br><span class="line"><span class="built_in">plot</span>(v,std2dB(sigma0(<span class="number">2</span>,:)./sigma0(<span class="number">1</span>,:)),<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">1.5</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;wind speed(m/s)&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;PR(dB)&#x27;</span>);</span><br><span class="line"><span class="comment">%% 核心函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">sigma0_vv</span><span class="params">(v,psai,theta,p)</span></span></span><br><span class="line">res=B0(v,theta)*(<span class="number">1</span>+B1(v,theta)*<span class="built_in">cosd</span>(psai)+B2(v,theta)*<span class="built_in">cosd</span>(<span class="number">2</span>*psai))^p;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">sigma0_hh</span><span class="params">(v,psai,theta,p)</span></span></span><br><span class="line">res=(B0(v,theta)*(<span class="number">1</span>+B1(v,theta)*<span class="built_in">cosd</span>(psai)+B2(v,theta)*<span class="built_in">cosd</span>(<span class="number">2</span>*psai)))^p;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">std2dB</span><span class="params">(sigma0)</span></span></span><br><span class="line">res=<span class="number">10</span>*<span class="built_in">log10</span>(sigma0);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%% B0函数群</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">B0</span><span class="params">(v,theta)</span></span></span><br><span class="line">x=(theta<span class="number">-40</span>)/<span class="number">25</span>;</span><br><span class="line">res=(<span class="number">10</span>^(a0(x)+a1(x)*v))*(f(v,theta)^<span class="built_in">gamma</span>(x));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">f</span><span class="params">(v,theta)</span></span></span><br><span class="line">x=(theta<span class="number">-40</span>)/<span class="number">25</span>;</span><br><span class="line">s=a2(x)*v;</span><br><span class="line">s_0=s0(x);</span><br><span class="line"><span class="keyword">if</span> s&lt;s_0</span><br><span class="line">    res=((s/s_0)^alpha(s_0))*g(s_0);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    res=g(s);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">g</span><span class="params">(s)</span></span></span><br><span class="line">res=<span class="number">1</span>/(<span class="number">1</span>+<span class="built_in">exp</span>(-s));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">alpha</span><span class="params">(s0)</span></span></span><br><span class="line">res=s0*(<span class="number">1</span>-g(s0));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 只和x有关的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">a0</span><span class="params">(x)</span></span></span><br><span class="line"><span class="keyword">global</span> c</span><br><span class="line">temp1=c(<span class="number">1</span>:<span class="number">4</span>);</span><br><span class="line">temp2=<span class="built_in">ones</span>(<span class="number">4</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:<span class="number">4</span></span><br><span class="line">    temp2(<span class="built_in">i</span>)=temp2(<span class="built_in">i</span><span class="number">-1</span>)*x;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">res=temp1*temp2;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">a1</span><span class="params">(x)</span></span></span><br><span class="line"><span class="keyword">global</span> c</span><br><span class="line">res=c(<span class="number">5</span>)+c(<span class="number">6</span>)*x;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">a2</span><span class="params">(x)</span></span></span><br><span class="line"><span class="keyword">global</span> c</span><br><span class="line">res=c(<span class="number">7</span>)+c(<span class="number">8</span>)*x;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">gamma</span><span class="params">(x)</span></span></span><br><span class="line"><span class="keyword">global</span> c</span><br><span class="line">temp1=c(<span class="number">9</span>:<span class="number">11</span>);temp2=<span class="built_in">ones</span>(<span class="number">3</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:<span class="number">3</span></span><br><span class="line">    temp2(<span class="built_in">i</span>)=temp2(<span class="built_in">i</span><span class="number">-1</span>)*x;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">res=temp1*temp2;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">s0</span><span class="params">(x)</span></span></span><br><span class="line"><span class="keyword">global</span> c</span><br><span class="line">res=c(<span class="number">12</span>)+c(<span class="number">13</span>)*x;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">v0</span><span class="params">(x)</span></span></span><br><span class="line"><span class="keyword">global</span> c</span><br><span class="line">temp1=c(<span class="number">21</span>:<span class="number">23</span>);temp2=<span class="built_in">ones</span>(<span class="number">3</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:<span class="number">3</span></span><br><span class="line">    temp2(<span class="built_in">i</span>)=temp2(<span class="built_in">i</span><span class="number">-1</span>)*x;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">res=temp1*temp2;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">d1</span><span class="params">(x)</span></span></span><br><span class="line"><span class="keyword">global</span> c</span><br><span class="line">temp1=c(<span class="number">24</span>:<span class="number">26</span>);temp2=<span class="built_in">ones</span>(<span class="number">3</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:<span class="number">3</span></span><br><span class="line">    temp2(<span class="built_in">i</span>)=temp2(<span class="built_in">i</span><span class="number">-1</span>)*x;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">res=temp1*temp2;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">d2</span><span class="params">(x)</span></span></span><br><span class="line"><span class="keyword">global</span> c</span><br><span class="line">res=c(<span class="number">27</span>)+c(<span class="number">28</span>)*x;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%% B1</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">B1</span><span class="params">(v,theta)</span></span></span><br><span class="line"><span class="keyword">global</span> c</span><br><span class="line">x=(theta<span class="number">-40</span>)/<span class="number">25</span>;</span><br><span class="line">temp1=c(<span class="number">14</span>)*(<span class="number">1</span>+x)-c(<span class="number">15</span>)*v*(<span class="number">0.5</span>+x-<span class="built_in">tanh</span>(<span class="number">4</span>*(x+c(<span class="number">16</span>)+c(<span class="number">17</span>)*v)));</span><br><span class="line">temp2=<span class="number">1</span>+<span class="built_in">exp</span>(<span class="number">0.34</span>*(v-c(<span class="number">18</span>)));</span><br><span class="line">res=temp1/temp2;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">B2</span><span class="params">(v,theta)</span></span></span><br><span class="line">x=(theta<span class="number">-40</span>)/<span class="number">25</span>;</span><br><span class="line">res=(-d1(x)+d2(x)*v2(v,theta))*<span class="built_in">exp</span>(-v2(v,theta));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">v2</span><span class="params">(v,theta)</span></span></span><br><span class="line"><span class="keyword">global</span> c</span><br><span class="line">x=(theta<span class="number">-40</span>)/<span class="number">25</span>;</span><br><span class="line">y=(v+v0(x))/v0(x);</span><br><span class="line">y0=c(<span class="number">19</span>);n=c(<span class="number">20</span>);</span><br><span class="line">a=y0-(y0<span class="number">-1</span>)/n;</span><br><span class="line">b=<span class="number">1</span>/(n*((y0<span class="number">-1</span>)^(n<span class="number">-1</span>)));</span><br><span class="line"><span class="keyword">if</span> y&lt;y0</span><br><span class="line">    res=a+b*((y<span class="number">-1</span>)^n);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    res=y;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>科研项目系列</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab中的随机数生成函数</title>
    <url>/2022/04/17/Matlab%E4%B8%AD%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>　　Matlab 统计工具箱中有 27 种概率分布，工具箱对每一种分布都提供 5 类函数，其命令的字符是：<br>pdf 概率密度； cdf 分布函数； inv 分布函数的反函数；stat 均值与方差； rnd 随机数生成<br>　　这里主要介绍常用的rnd类函数</p>
<h2 id="rand-函数"><a href="#rand-函数" class="headerlink" title="rand 函数"></a>rand 函数</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rand</span>(n) <span class="comment">%返回一个 n×n 在区间 (0,1) 内均匀分布的随机数矩阵</span></span><br><span class="line"><span class="built_in">rand</span>(m,n) <span class="comment">%返回一个 m×n 在区间 (0,1) 内均匀分布的随机数矩阵</span></span><br></pre></td></tr></table></figure>
<h2 id="unifrnd-函数"><a href="#unifrnd-函数" class="headerlink" title="unifrnd 函数"></a>unifrnd 函数</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">unifrnd(a,b,m,n) <span class="comment">%返回一个 m×n 在区间 (a,b) 内均匀分布的随机数矩阵</span></span><br></pre></td></tr></table></figure>
<h2 id="randn-函数"><a href="#randn-函数" class="headerlink" title="randn 函数"></a>randn 函数</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">randn</span>(n) <span class="comment">%返回一个 n×n 标准正态分布的随机数矩阵</span></span><br><span class="line"><span class="built_in">randn</span>(m,n) <span class="comment">%返回一个 m×n 标准正态分布的随机数矩阵</span></span><br></pre></td></tr></table></figure>
<h2 id="exprnd-函数"><a href="#exprnd-函数" class="headerlink" title="exprnd 函数"></a>exprnd 函数</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">exprnd(lambda,m,n) <span class="comment">%返回一个均值为lambda的 m×n 的指数分布随机数矩阵</span></span><br></pre></td></tr></table></figure>
<h2 id="normrnd-函数"><a href="#normrnd-函数" class="headerlink" title="normrnd 函数"></a>normrnd 函数</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">normrnd(mu,sigma,m,n) <span class="comment">%返回一个满足N(mu,sigma)的 m×n 的正态分布随机数矩阵</span></span><br></pre></td></tr></table></figure>
<h2 id="poissrnd-函数"><a href="#poissrnd-函数" class="headerlink" title="poissrnd 函数"></a>poissrnd 函数</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">poissrnd(lambda,m,n) <span class="comment">%返回一个参数为lambda的 m×n 的泊松分布随机数矩阵</span></span><br></pre></td></tr></table></figure>
<h2 id="binornd-函数"><a href="#binornd-函数" class="headerlink" title="binornd 函数"></a>binornd 函数</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">binornd(n,p,m,n) <span class="comment">%返回一个满足B(n,p)的 m×n 的二项分布随机数矩阵</span></span><br></pre></td></tr></table></figure>
<h2 id="randperm-函数"><a href="#randperm-函数" class="headerlink" title="randperm 函数"></a>randperm 函数</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">randperm(n) <span class="comment">%返回行向量，其中包含从 1 到 n 没有重复元素的整数随机排列</span></span><br><span class="line">randperm(n,k) <span class="comment">%返回行向量，其中包含在 1 到 n 之间随机选择的 k 个唯一整数(1-n随机选择k个互不相同的整数)</span></span><br></pre></td></tr></table></figure>
<h2 id="perms-函数"><a href="#perms-函数" class="headerlink" title="perms 函数"></a>perms 函数</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">perms</span>(n) <span class="comment">%返回的矩阵包含了向量 v 中元素按字典序反序的所有排列。  </span></span><br><span class="line"><span class="comment">% P 的每一行包含 v 中 n 个元素的一个不同排列。矩阵 P 具有与 v 相同的数据类型，包含 n! 行和 n 列。</span></span><br></pre></td></tr></table></figure>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>　　以下介绍几种绘制数据分布图的方法，建议配合以上的随机数生成函数学习：  </p>
<h3 id="hist-函数"><a href="#hist-函数" class="headerlink" title="hist 函数"></a>hist 函数</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">[N,X] = hist(Y,M); </span><br><span class="line"><span class="comment">%得到数组（行、列均可）Y 的频数表。</span></span><br><span class="line"><span class="comment">%它将区间[min(Y),max(Y)]等分为 M 份（缺省时M 设定为 10）。</span></span><br><span class="line"><span class="comment">%N 返回 M 个小区间的频数，X 返回 M 个小区间的中点。</span></span><br></pre></td></tr></table></figure>
<h3 id="cdfplot-函数"><a href="#cdfplot-函数" class="headerlink" title="cdfplot 函数"></a>cdfplot 函数</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">cdfplot(X) <span class="comment">%作样本X（向量）的经验累积分布(也就是F(X))函数图形</span></span><br><span class="line"><span class="comment">%如果表头(title)出现矩形则是中文显示异常，可以通过设置字体解决</span></span><br><span class="line"><span class="comment">%set(0,&#x27;defaultAxesFontName&#x27;, &#x27;Microsft YaHei UI&#x27;);实测有效，就是每次启动都要设置</span></span><br></pre></td></tr></table></figure>
<h2 id="参考文献以及资料"><a href="#参考文献以及资料" class="headerlink" title="参考文献以及资料"></a>参考文献以及资料</h2><p>1、司守奎数学建模算法课件（2版含源程序）  </p>
<p>2、<a href="https://max.book118.com/html/2017/0702/119736142.shtm">https://max.book118.com/html/2017/0702/119736142.shtm</a></p>
<p>3、南信大的数学建模课件（Monte-Carlo 方法介绍及其建模应用）</p>
]]></content>
      <tags>
        <tag>数学建模</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab Cody——CUP Challenge 题解</title>
    <url>/2023/07/29/Matlab-Cody%E2%80%94%E2%80%94CUP-Challenge-%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="1-Problem-1974-Length-of-a-short-side"><a href="#1-Problem-1974-Length-of-a-short-side" class="headerlink" title="1. Problem 1974. Length of a short side"></a>1. Problem 1974. Length of a short side</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span> = <span class="title">calculate_short_side</span><span class="params">(b, c)</span></span></span><br><span class="line">  a = <span class="built_in">sqrt</span>(c.^<span class="number">2</span>-b.^<span class="number">2</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="2-Problem-2024-Triangle-sequence"><a href="#2-Problem-2024-Triangle-sequence" class="headerlink" title="2. Problem 2024. Triangle sequence"></a>2. Problem 2024. Triangle sequence</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">area</span> = <span class="title">triangle_sequence</span><span class="params">(n)</span></span></span><br><span class="line">  a = [<span class="number">0</span> <span class="number">1</span>;<span class="number">1</span> <span class="number">1</span>]^n;</span><br><span class="line">  x = [<span class="number">9</span>;<span class="number">16</span>];</span><br><span class="line">  res = a*x;</span><br><span class="line">  area = res(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="3-Problem-2022-Find-a-Pythagorean-triple"><a href="#3-Problem-2022-Find-a-Pythagorean-triple" class="headerlink" title="3. Problem 2022. Find a Pythagorean triple"></a>3. Problem 2022. Find a Pythagorean triple</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">flag</span> = <span class="title">isTherePythagoreanTriple</span><span class="params">(a, b, c, d)</span></span></span><br><span class="line">tol = <span class="number">1e-5</span>;</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">abs</span>(a^<span class="number">2</span>+b^<span class="number">2</span> - c^<span class="number">2</span>) &lt;= tol</span><br><span class="line">      flag = <span class="built_in">true</span>;</span><br><span class="line">  <span class="keyword">elseif</span> <span class="built_in">abs</span>(a^<span class="number">2</span>+b^<span class="number">2</span> - d^<span class="number">2</span>) &lt;= tol</span><br><span class="line">      flag = <span class="built_in">true</span>;</span><br><span class="line">  <span class="keyword">elseif</span> <span class="built_in">abs</span>(a^<span class="number">2</span>+c^<span class="number">2</span> - d^<span class="number">2</span>) &lt;= tol</span><br><span class="line">      flag = <span class="built_in">true</span>;</span><br><span class="line">  <span class="keyword">elseif</span> <span class="built_in">abs</span>(b^<span class="number">2</span>+c^<span class="number">2</span> - d^<span class="number">2</span>) &lt;= tol</span><br><span class="line">      flag = <span class="built_in">true</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">      flag = <span class="built_in">false</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="4-Problem-2023-Is-this-triangle-right-angled"><a href="#4-Problem-2023-Is-this-triangle-right-angled" class="headerlink" title="4. Problem 2023. Is this triangle right-angled?"></a>4. Problem 2023. Is this triangle right-angled?</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">flag</span> = <span class="title">isRightAngled</span><span class="params">(a,b,c)</span></span></span><br><span class="line">  temp = [a,b,c];</span><br><span class="line">  temp = <span class="built_in">sort</span>(temp,<span class="number">2</span>,<span class="string">&#x27;ascend&#x27;</span>);</span><br><span class="line">  tol = <span class="number">1e-5</span>;</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">abs</span>(temp(<span class="number">1</span>)^<span class="number">2</span>+temp(<span class="number">2</span>)^<span class="number">2</span>-temp(<span class="number">3</span>)^<span class="number">2</span>)&lt;=tol</span><br><span class="line">    flag = <span class="built_in">true</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    flag = <span class="built_in">false</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="5-Problem-2021-Is-this-triangle-right-angled"><a href="#5-Problem-2021-Is-this-triangle-right-angled" class="headerlink" title="5. Problem 2021. Is this triangle right-angled?"></a>5. Problem 2021. Is this triangle right-angled?</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">flag</span> = <span class="title">isRightAngled</span><span class="params">(a, b, c)</span></span></span><br><span class="line">  tol = <span class="number">1e-5</span>;</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">abs</span>(a^<span class="number">2</span>+b^<span class="number">2</span>-c^<span class="number">2</span>)&lt;tol</span><br><span class="line">      flag = <span class="built_in">true</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">      flag = <span class="built_in">false</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="6-Problem-2020-Area-of-an-Isoceles-Triangle"><a href="#6-Problem-2020-Area-of-an-Isoceles-Triangle" class="headerlink" title="6. Problem 2020. Area of an Isoceles Triangle"></a>6. Problem 2020. Area of an Isoceles Triangle</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">A</span> = <span class="title">isocelesArea</span><span class="params">(x,y)</span></span></span><br><span class="line">  w = y/<span class="number">2</span>;</span><br><span class="line">  h = <span class="built_in">sqrt</span>(x^<span class="number">2</span>-w^<span class="number">2</span>);</span><br><span class="line">  A = w*h;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="7-Problem-2018-Side-of-a-rhombus"><a href="#7-Problem-2018-Side-of-a-rhombus" class="headerlink" title="7. Problem 2018. Side of a rhombus"></a>7. Problem 2018. Side of a rhombus</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">rhombus_side</span><span class="params">(x)</span></span></span><br><span class="line">  y = <span class="built_in">sqrt</span>(x.^<span class="number">2</span> + (x+<span class="number">1</span>).^<span class="number">2</span>)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>代码打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>latex 测试</title>
    <url>/2023/02/19/latex-%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>高斯粗糙面的均方根斜率<script type="math/tex">\sigma_{s}</script>可以表示为均方根高度<script type="math/tex">\sigma</script>和相关长度<script type="math/tex">l</script>的函数：</p>
<script type="math/tex; mode=display">\sigma_{s} = \sqrt{2}\sigma/l</script>]]></content>
  </entry>
  <entry>
    <title>matlab编码规范学习</title>
    <url>/2022/12/16/matlab%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="命名约定"><a href="#命名约定" class="headerlink" title="命名约定"></a>命名约定</h1><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>变量名应该记录它们的含义或用途。<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">wage = hourlyRate * nHours</span><br></pre></td></tr></table></figure></p>
<h4 id="从小写开始用混合大小写命名变量名"><a href="#从小写开始用混合大小写命名变量名" class="headerlink" title="从小写开始用混合大小写命名变量名"></a>从小写开始用混合大小写命名变量名</h4><p>以大写开头的名称通常是为类型或者结构体保留的。</p>
<p>很短的变量名可以是大写的，如果它们在常规用法中是大写的，并且不太可能成为复合变量名的一部分。</p>
<p>例如在特定领域，杨氏模量的E，可能会被误导为e。</p>
<p>有些程序员喜欢用下划线来分隔复合变量名的各个部分。</p>
<p>这种方式虽然易于阅读，但在其他语言中并不常用来命名变量。</p>
<p>在图形标题、标签和图例的变量名中使用下划线的另一个考虑因素是，MATLAB中的Tex解释器将把下划线转换为下标来读取，因此需要为每个文本字符串应用参数/值对进行设置，即‘Interpreter’,’none’。</p>
<h4 id="具有大作用域的变量应该具有有意义的命名，作用域小的变量可以有简短的命名"><a href="#具有大作用域的变量应该具有有意义的命名，作用域小的变量可以有简短的命名" class="headerlink" title="具有大作用域的变量应该具有有意义的命名，作用域小的变量可以有简短的命名"></a>具有大作用域的变量应该具有有意义的命名，作用域小的变量可以有简短的命名</h4><p>在实践中，大多数变量都应该具有有意义的名字。</p>
<p>在某些条件下，应保留使用简短的命名，以澄清陈述的结构或与预期的通用性相一致。</p>
]]></content>
      <tags>
        <tag>小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>pdf test</title>
    <url>/2023/02/19/pdf-test/</url>
    <content><![CDATA[

	<div class="row">
    <embed src="/pdf/ocean_wave_spectrum.pdf" width="100%" height="550" type="application/pdf">
	</div>



]]></content>
  </entry>
  <entry>
    <title>python语言规范学习</title>
    <url>/2022/12/14/python%E8%AF%AD%E8%A8%80%E8%A7%84%E8%8C%83%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h1><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><p>仅对包和模块使用导入,而不单独导入函数或者类。’typing’模块例外。</p>
<p>导入时不要使用相对名称. 即使模块在同一个包中, 也要使用完整包名. </p>
<p>这能帮助你避免无意间导入一个包两次.</p>
<h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>命名空间管理约定十分简单. 每个标识符的源都用一种一致的方式指示. </p>
<p>x.Obj表示Obj对象定义在模块x中.</p>
<h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>模块名仍可能冲突. 有些模块名太长, 不太方便.</p>
<h3 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.使用 import x 来导入包和模块.</span></span><br><span class="line"><span class="comment"># python自带的包一般使用这种方式</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.使用 from x import y </span></span><br><span class="line"><span class="comment"># 其中x是包前缀, y是不带前缀的模块名.</span></span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.basemap <span class="keyword">import</span> Basemap</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.使用 from x import y as z</span></span><br><span class="line"><span class="comment"># 如果两个要导入的模块都叫做y或者y太长了.</span></span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># 其实plt用第二种方式导入更多</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.仅当缩写 z 是通用缩写时才可使用 import y as z.</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure>
<h1 id="包"><a href="#包" class="headerlink" title="包"></a>包</h1><h3 id="规则-1"><a href="#规则-1" class="headerlink" title="规则"></a>规则</h3><p>使用模块的全路径名来导入每个模块</p>
<p>所有的新代码都应该用完整包名来导入每个模块.</p>
<h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><p>避免模块名冲突或是因非预期的模块搜索路径导致导入错误. 查找包更容易.</p>
<h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><p>部署代码变难, 因为你必须复制包层次.</p>
<h3 id="实现样例"><a href="#实现样例" class="headerlink" title="实现样例"></a>实现样例</h3><p>正确样例1：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在代码中引用完整名称 absl.flags (详细情况).</span></span><br><span class="line"><span class="keyword">import</span> absl.flags</span><br><span class="line"><span class="keyword">from</span> doctor.who <span class="keyword">import</span> jodie</span><br><span class="line"></span><br><span class="line">FLAGS = absl.flags.FLAGS</span><br></pre></td></tr></table></figure></p>
<p>正确样例2：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在代码中仅引用模块名 flags (常见情况).</span></span><br><span class="line"><span class="keyword">from</span> absl <span class="keyword">import</span> flags</span><br><span class="line"><span class="keyword">from</span> doctor.who <span class="keyword">import</span> jodie</span><br><span class="line"></span><br><span class="line">FLAGS = flags.FLAGS</span><br></pre></td></tr></table></figure></p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 没能清晰指示出作者想要导入的模块和最终被导入的模块.</span></span><br><span class="line"><span class="comment"># 实际导入的模块将取决于 sys.path.</span></span><br><span class="line"><span class="keyword">import</span> jodie</span><br></pre></td></tr></table></figure><br>不应假定主入口脚本所在的目录就在 sys.path 中，虽然这种情况是存在的。</p>
<p>当主入口脚本所在目录不在 sys.path 中时，代码将假设 import jodie 是</p>
<p>导入的一个第三方库或者是一个名为 jodie 的顶层包，而不是本地的 jodie.py</p>
<h1 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h1><h3 id="规则-2"><a href="#规则-2" class="headerlink" title="规则"></a>规则</h3><p>异常是一种跳出代码块的正常控制流来处理错误或者其它异常条件的方式.</p>
<p>允许使用异常, 但必须小心</p>
]]></content>
  </entry>
  <entry>
    <title>to-do-list</title>
    <url>/2022/04/18/to-do-list/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>　　本文存在大量画大饼现象（但是为了防止自己变得更颓，饼还是要画的）。  </p>
<h2 id="编程语言方面"><a href="#编程语言方面" class="headerlink" title="编程语言方面"></a>编程语言方面</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、python</span><br><span class="line">2、R</span><br><span class="line">3、Matlab</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>python风格规范学习</title>
    <url>/2022/12/14/python%E9%A3%8E%E6%A0%BC%E8%A7%84%E8%8C%83%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h1><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><p>不要在行尾加分号, 也不要用分号将两条命令放在同一行.</p>
<h1 id="行长度"><a href="#行长度" class="headerlink" title="行长度"></a>行长度</h1><h3 id="规则-1"><a href="#规则-1" class="headerlink" title="规则"></a>规则</h3><p>每行不超过80个字符，但有几个例外：</p>
<p>1.长的导入模块语句</p>
<p>2.注释里的URL,路径以及其他的一些长标记</p>
<p>3.不便于换行，不包含空格的模块级字符串常量，比如url或者路径</p>
<p>除非是在 with 语句需要三个以上的上下文管理器的情况下，否则不要使用反斜杠连接行.</p>
<p>Python会将 圆括号, 中括号和花括号中的行隐式的连接起来 , 你可以利用这个特点. </p>
<p>如果需要, 你可以在表达式外围增加一对额外的圆括号.<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (width == <span class="number">0</span> <span class="keyword">and</span> height == <span class="number">0</span> <span class="keyword">and</span></span><br><span class="line">         color == <span class="string">&#x27;red&#x27;</span> <span class="keyword">and</span> emphasis == <span class="string">&#x27;strong&#x27;</span>):</span><br></pre></td></tr></table></figure></p>
<p>如果一个文本字符串在一行放不下, 可以使用圆括号来实现隐式行连接:<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = (<span class="string">&#x27;This will build a very long long &#x27;</span></span><br><span class="line">     <span class="string">&#x27;long long long long long long string&#x27;</span>)    </span><br></pre></td></tr></table></figure></p>
<p>在注释中，如果必要，将长的URL放在一行上。<br>正确样例：(可以Ctrl+鼠标左键打开网址)<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># See details at</span></span><br><span class="line"><span class="comment"># http://www.example.com/us/developer/documentation/api/content/v2.0/csv_file_name_extension_full_specification.html</span></span><br></pre></td></tr></table></figure></p>
<p>错误样例：(网址不连续直接打不开)<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># See details at</span></span><br><span class="line"><span class="comment"># http://www.example.com/us/developer/documentation/api/content/\</span></span><br><span class="line"><span class="comment"># v2.0/csv_file_name_extension_full_specification.html</span></span><br></pre></td></tr></table></figure></p>
<p>当 with 表达式需要使用三个及其以上的上下文管理器时，可以使用反斜杠换行.</p>
<p>若只需要两个，请使用嵌套的with.<br>正确样例1：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 注意三个上下文管理器都要采取相同缩进</span></span><br><span class="line"><span class="comment"># place_order比with多一个缩进(不和前几行对齐)</span></span><br><span class="line"><span class="keyword">with</span> very_long_first_expression_function() <span class="keyword">as</span> spam, \</span><br><span class="line">     very_long_second_expression_function() <span class="keyword">as</span> beans, \</span><br><span class="line">     third_thing() <span class="keyword">as</span> eggs:</span><br><span class="line">    place_order(eggs, beans, spam, beans)</span><br></pre></td></tr></table></figure></p>
<p>正确样例2：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 每个嵌套多一个缩进</span></span><br><span class="line"><span class="keyword">with</span> very_long_first_expression_function() <span class="keyword">as</span> spam:</span><br><span class="line">    <span class="keyword">with</span> very_long_second_expression_function() <span class="keyword">as</span> beans:</span><br><span class="line">        place_order(beans, spam)</span><br></pre></td></tr></table></figure></p>
<p>错误样例2：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> VeryLongFirstExpressionFunction() <span class="keyword">as</span> spam, \</span><br><span class="line">     VeryLongSecondExpressionFunction() <span class="keyword">as</span> beans:</span><br><span class="line">    PlaceOrder(eggs, beans, spam, beans) </span><br></pre></td></tr></table></figure></p>
<h1 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h1><h3 id="规则-2"><a href="#规则-2" class="headerlink" title="规则"></a>规则</h3><p>宁缺毋滥的使用括号</p>
<p>除非是用于实现行连接, 否则不要在返回语句或条件语句中使用括号. </p>
<p>不过在元组两边使用括号是可以的.</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> foo:</span><br><span class="line">    bar()</span><br><span class="line"><span class="keyword">while</span> x:</span><br><span class="line">    x = bar()</span><br><span class="line"><span class="keyword">if</span> x <span class="keyword">and</span> y:</span><br><span class="line">    bar()</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> x:</span><br><span class="line">    bar()</span><br><span class="line"><span class="comment"># 对一个单元素元组可以(x,)的形式强调它的元组属性</span></span><br><span class="line">onesie=(foo,)</span><br><span class="line"><span class="keyword">return</span> foo</span><br><span class="line"><span class="keyword">return</span> spam,beans</span><br><span class="line"><span class="keyword">return</span> (spam,beans) <span class="comment"># 注意这边返回的是元组，所以用括号</span></span><br><span class="line"><span class="keyword">for</span> (x,y) <span class="keyword">in</span> <span class="built_in">dict</span>.items():</span><br><span class="line">    bar()</span><br></pre></td></tr></table></figure></p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 容易误以为是函数</span></span><br><span class="line"><span class="keyword">if</span> (x):</span><br><span class="line">    bar()</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span>(x):</span><br><span class="line">    bar()</span><br><span class="line"><span class="keyword">return</span> (foo)</span><br></pre></td></tr></table></figure></p>
<p>但我个人认为在做数值计算的时候，如果必须要使用比较长的表达式时，</p>
<p>可以适当增加括号防止运算顺序出问题。</p>
<h1 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h1><h3 id="规则-3"><a href="#规则-3" class="headerlink" title="规则"></a>规则</h3><p>用4个空格来缩进代码</p>
<p>绝对不要用tab, 也不要tab和空格混用. </p>
<p>对于行连接的情况, 你应该要么垂直对齐换行的元素(见 行长度 部分的示例), </p>
<p>或者使用4空格的悬挂式缩进(这时第一行不应该有参数):</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用分隔符对齐</span></span><br><span class="line">foo = long_function_name(var1, var2,</span><br><span class="line">                         var3, var4)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在字典中使用分隔符对齐</span></span><br><span class="line">foo = &#123;</span><br><span class="line">    long_dictionary_key: value1 +</span><br><span class="line">                         value2,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 四空格悬挂式缩进</span></span><br><span class="line">foo = long_function_name(</span><br><span class="line">    var1,var2,var3,</span><br><span class="line">    var4)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字典中的四空格悬挂式缩进</span></span><br><span class="line">foo = &#123;</span><br><span class="line">    long_dictionary_key:</span><br><span class="line">        long_dictionary_value,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 不对齐</span></span><br><span class="line">foo = long_function_name(var1, var2,</span><br><span class="line">    var3, var4)</span><br><span class="line"><span class="comment"># 两格的缩进</span></span><br><span class="line">foo = long_function_name(</span><br><span class="line">  var1, var2, var3,</span><br><span class="line">  var4</span><br><span class="line">)</span><br><span class="line"><span class="comment"># 字典中不使用悬挂式缩进</span></span><br><span class="line">foo = &#123;long_dictionary_key:</span><br><span class="line">           long_dictionary_value,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="序列元素尾部逗号"><a href="#序列元素尾部逗号" class="headerlink" title="序列元素尾部逗号"></a>序列元素尾部逗号</h1><h3 id="规则-4"><a href="#规则-4" class="headerlink" title="规则"></a>规则</h3><p>仅当 ], ), } 和末位元素不在同一行时，推荐使用序列元素尾部逗号</p>
<p>正确示例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">golomb3 = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>]</span><br><span class="line">golomb4 = [</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">1</span>,</span><br><span class="line">    <span class="number">4</span>,</span><br><span class="line">    <span class="number">6</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<h1 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h1><h3 id="规则-5"><a href="#规则-5" class="headerlink" title="规则"></a>规则</h3><p>顶级定义之间空两行, 比如函数或者类定义. 方法定义, 类定义与第一个方法之间, 都应该空一行.</p>
<p>函数或方法中, 某些地方要是你觉得合适, 就空一行.</p>
<h1 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h1><h3 id="规则-6"><a href="#规则-6" class="headerlink" title="规则"></a>规则</h3><p>括号内不要有空格.</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">spam(ham[<span class="number">1</span>], &#123;eggs: <span class="number">2</span>&#125;, [])</span><br></pre></td></tr></table></figure></p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">spam( ham[ <span class="number">1</span> ], &#123; eggs: <span class="number">2</span> &#125;, [ ] )</span><br></pre></td></tr></table></figure></p>
<p>不要在逗号, 分号, 冒号前面加空格, 但应该在它们后面加(除了在行尾).</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> x == <span class="number">4</span>:</span><br><span class="line">    <span class="built_in">print</span>(x, y)</span><br><span class="line">x, y = y, x</span><br></pre></td></tr></table></figure></p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> x == <span class="number">4</span> :</span><br><span class="line">    <span class="built_in">print</span>(x , y)</span><br><span class="line">x , y = y , x</span><br></pre></td></tr></table></figure></p>
<p>参数列表, 索引或切片的左括号前不应加空格.</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">spam(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">dict</span>[<span class="string">&#x27;key&#x27;</span>] = <span class="built_in">list</span>[index]</span><br></pre></td></tr></table></figure></p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">spam (<span class="number">1</span>)</span><br><span class="line"><span class="built_in">dict</span> [<span class="string">&#x27;key&#x27;</span>] = <span class="built_in">list</span> [index]</span><br></pre></td></tr></table></figure></p>
<p>在二元操作符两边都加上一个空格, 比如赋值(=), 比较(==, &lt;, &gt;, !=, &lt;&gt;, &lt;=, &gt;=, in, not in, is, is not), 布尔(and, or, not).</p>
<p>至于算术操作符两边的空格该如何使用, 需要你自己好好判断. </p>
<p>不过两侧务必要保持一致.</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x == <span class="number">1</span></span><br><span class="line">x = x + <span class="number">1</span></span><br><span class="line">x = x+<span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x&lt;<span class="number">1</span></span><br><span class="line">x =x +<span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<p>当 = 用于指示关键字参数或默认参数值时, 不要在其两侧使用空格.</p>
<p>但若存在类型注释的时候,需要在 = 周围使用空格.</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">complex</span>(<span class="params">real, imag=<span class="number">0.0</span></span>):</span><br><span class="line">    <span class="keyword">return</span> magic(r=real,i=imag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">complex</span>(<span class="params">real, imag: <span class="built_in">float</span> = <span class="number">0.0</span></span>):</span><br><span class="line">    <span class="keyword">return</span> magic(r=real,i=imag)</span><br></pre></td></tr></table></figure></p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">complex</span>(<span class="params">real, imag = <span class="number">0.0</span></span>): </span><br><span class="line">    <span class="keyword">return</span> magic(r = real, i = imag)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">complex</span>(<span class="params">real, imag: <span class="built_in">float</span>=<span class="number">0.0</span></span>): </span><br><span class="line">    <span class="keyword">return</span> Magic(r = real, i = imag)</span><br></pre></td></tr></table></figure></p>
<p>不要用空格来垂直对齐多行间的标记, 因为这会成为维护的负担(适用于:, #, =等):</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">foo = <span class="number">1000</span>  <span class="comment"># comment</span></span><br><span class="line">long_name = <span class="number">2</span>  <span class="comment"># comment that should not be aligned</span></span><br><span class="line"></span><br><span class="line">dictionary = &#123;</span><br><span class="line">    <span class="string">&quot;foo&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;long_name&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">foo       = <span class="number">1000</span>  <span class="comment"># comment</span></span><br><span class="line">long_name = <span class="number">2</span>     <span class="comment"># comment that should not be aligned</span></span><br><span class="line"></span><br><span class="line">dictionary = &#123;</span><br><span class="line">    <span class="string">&quot;foo&quot;</span>      : <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;long_name&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Shebang"><a href="#Shebang" class="headerlink" title="Shebang"></a>Shebang</h1><h3 id="规则-7"><a href="#规则-7" class="headerlink" title="规则"></a>规则</h3><h1 id="先用于帮助内核找到Python解释器-但是在导入模块时-将会被忽略"><a href="#先用于帮助内核找到Python解释器-但是在导入模块时-将会被忽略" class="headerlink" title="! 先用于帮助内核找到Python解释器, 但是在导入模块时, 将会被忽略."></a>! 先用于帮助内核找到Python解释器, 但是在导入模块时, 将会被忽略.</h1><p>因此只有被直接执行的文件中才有必要加入 #! .</p>
<h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><h3 id="文档字符串"><a href="#文档字符串" class="headerlink" title="文档字符串"></a>文档字符串</h3><p>Python有一种独一无二的的注释方式: 使用文档字符串.</p>
<p>文档字符串是包、模块、类或函数里的第一个语句.</p>
<p>这些字符串可以通过对象的 <strong>doc</strong> 成员被自动提取, 并且被pydoc所用.</p>
<p>我们对文档字符串的惯例是使用三重双引号”””( PEP-257 ). </p>
<p>一个文档字符串应该这样组织: 首先是一行以句号, 问号或惊叹号结尾的概述(或者该文档字符串单纯只有一行). </p>
<p>接着是一个空行. 再接着是文档字符串剩下的部分, 它应该与文档字符串的第一行的第一个引号对齐. </p>
<h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><p>每个文件应该包含一个许可样板. </p>
<p>根据项目使用的许可(例如, Apache 2.0, BSD, LGPL, GPL), 选择合适的样板. </p>
<p>其开头应是对模块内容和用法的描述.</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;A one line summary of the module or program, terminated by a period.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Leave one blank line.  The rest of this docstring should contain an</span></span><br><span class="line"><span class="string">overall description of the module or program.  Optionally, it may also</span></span><br><span class="line"><span class="string">contain a brief description of exported classes and functions and/or usage</span></span><br><span class="line"><span class="string">examples.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Typical usage example:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">foo = ClassFoo()</span></span><br><span class="line"><span class="string">bar = foo.FunctionBar()</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="函数和方法"><a href="#函数和方法" class="headerlink" title="函数和方法"></a>函数和方法</h3><p>下文所指的函数,包括函数, 方法, 以及生成器.</p>
<p>一个函数必须要有文档字符串, 除非它满足以下条件:</p>
<p>1.外部不可见;2.非常短小;3.简单明了;</p>
<p>文档字符串应该包含函数做什么, 以及输入和输出的详细描述. 通常, 不应该描述”怎么做”, 除非是一些复杂的算法. 文档字符串应该提供足够的信息, 当别人编写代码调用该函数时, 他不需要看一行代码, 只要看文档字符串就可以了. 对于复杂的代码, 在代码旁边加注释会比使用文档字符串更有意义. 覆盖基类的子类方法应有一个类似 See base class 的简单注释来指引读者到基类方法的文档注释.若重载的子类方法和基类方法有很大不同,那么注释中应该指明这些信息.</p>
<p>关于函数的几个方面应该在特定的小节中进行描述记录，这几个方面如下文所述. </p>
<p>每节应该以一个标题行开始. 标题行以冒号结尾. </p>
<p>除标题行外, 节的其他内容应被缩进2个空格.</p>
<h4 id="Args"><a href="#Args" class="headerlink" title="Args:"></a>Args:</h4><pre><code>列出每个参数的名字, 并在名字后使用一个冒号和一个空格, 分隔对该参数的描述.
如果描述太长超过了单行80字符,使用2或者4个空格的悬挂缩进(与文件其他部分保持一致). 
描述应该包括所需的类型和含义. 如果一个函数接受*foo(可变长度参数列表)或者**bar (任意关键字参数), 应该详细列出*foo和**bar.
</code></pre><h4 id="Returns-或者-Yields-用于生成器"><a href="#Returns-或者-Yields-用于生成器" class="headerlink" title="Returns: (或者 Yields: 用于生成器):"></a>Returns: (或者 Yields: 用于生成器):</h4><pre><code>描述返回值的类型和语义. 如果函数返回None, 这一部分可以省略.
</code></pre><h4 id="Raises"><a href="#Raises" class="headerlink" title="Raises:"></a>Raises:</h4><pre><code>列出与接口有关的所有异常.
</code></pre><p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fetch_smalltable_rows</span>(<span class="params">table_handle: smalltable.Table,</span></span><br><span class="line"><span class="params">                        keys: <span class="type">Sequence</span>[<span class="type">Union</span>[<span class="built_in">bytes</span>, <span class="built_in">str</span>]],</span></span><br><span class="line"><span class="params">                        require_all_keys: <span class="built_in">bool</span> = <span class="literal">False</span>,</span></span><br><span class="line"><span class="params"></span>) -&gt; Mapping[<span class="built_in">bytes</span>, <span class="type">Tuple</span>[<span class="built_in">str</span>]]:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Fetches rows from a Smalltable.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Retrieves rows pertaining to the given keys from the Table instance</span></span><br><span class="line"><span class="string">    represented by table_handle.  String keys will be UTF-8 encoded.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        table_handle: An open smalltable.Table instance.</span></span><br><span class="line"><span class="string">        keys: A sequence of strings representing the key of each table</span></span><br><span class="line"><span class="string">        row to fetch.  String keys will be UTF-8 encoded.</span></span><br><span class="line"><span class="string">        require_all_keys: Optional; If require_all_keys is True only</span></span><br><span class="line"><span class="string">        rows with values set for all keys will be returned.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        A dict mapping keys to the corresponding table row data</span></span><br><span class="line"><span class="string">        fetched. Each row is represented as a tuple of strings. For</span></span><br><span class="line"><span class="string">        example:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#123;b&#x27;Serak&#x27;: (&#x27;Rigel VII&#x27;, &#x27;Preparer&#x27;),</span></span><br><span class="line"><span class="string">        b&#x27;Zim&#x27;: (&#x27;Irk&#x27;, &#x27;Invader&#x27;),</span></span><br><span class="line"><span class="string">        b&#x27;Lrrr&#x27;: (&#x27;Omicron Persei 8&#x27;, &#x27;Emperor&#x27;)&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returned keys are always bytes.  If a key from the keys argument is</span></span><br><span class="line"><span class="string">        missing from the dictionary, then that row was not found in the</span></span><br><span class="line"><span class="string">        table (and require_all_keys must have been False).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Raises:</span></span><br><span class="line"><span class="string">        IOError: An error occurred accessing the smalltable.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><br>在 Args: 上进行换行也是可以的:</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fetch_smalltable_rows</span>(<span class="params">table_handle: smalltable.Table,</span></span><br><span class="line"><span class="params">                        keys: <span class="type">Sequence</span>[<span class="type">Union</span>[<span class="built_in">bytes</span>, <span class="built_in">str</span>]],</span></span><br><span class="line"><span class="params">                        require_all_keys: <span class="built_in">bool</span> = <span class="literal">False</span>,</span></span><br><span class="line"><span class="params"></span>) -&gt; Mapping[<span class="built_in">bytes</span>, <span class="type">Tuple</span>[<span class="built_in">str</span>]]:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Fetches rows from a Smalltable.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Retrieves rows pertaining to the given keys from the Table instance</span></span><br><span class="line"><span class="string">    represented by table_handle.  String keys will be UTF-8 encoded.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">    table_handle:</span></span><br><span class="line"><span class="string">        An open smalltable.Table instance.</span></span><br><span class="line"><span class="string">    keys:</span></span><br><span class="line"><span class="string">        A sequence of strings representing the key of each table row to</span></span><br><span class="line"><span class="string">        fetch.  String keys will be UTF-8 encoded.</span></span><br><span class="line"><span class="string">    require_all_keys:</span></span><br><span class="line"><span class="string">        Optional; If require_all_keys is True only rows with values set</span></span><br><span class="line"><span class="string">        for all keys will be returned.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">    A dict mapping keys to the corresponding table row data</span></span><br><span class="line"><span class="string">    fetched. Each row is represented as a tuple of strings. For</span></span><br><span class="line"><span class="string">    example:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &#123;b&#x27;Serak&#x27;: (&#x27;Rigel VII&#x27;, &#x27;Preparer&#x27;),</span></span><br><span class="line"><span class="string">    b&#x27;Zim&#x27;: (&#x27;Irk&#x27;, &#x27;Invader&#x27;),</span></span><br><span class="line"><span class="string">    b&#x27;Lrrr&#x27;: (&#x27;Omicron Persei 8&#x27;, &#x27;Emperor&#x27;)&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returned keys are always bytes.  If a key from the keys argument is</span></span><br><span class="line"><span class="string">    missing from the dictionary, then that row was not found in the</span></span><br><span class="line"><span class="string">    table (and require_all_keys must have been False).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Raises:</span></span><br><span class="line"><span class="string">    IOError: An error occurred accessing the smalltable.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="类的注释"><a href="#类的注释" class="headerlink" title="类的注释"></a>类的注释</h3><p>类应该在其定义下有一个用于描述该类的文档字符串. </p>
<p>如果你的类有公共属性(Attributes), 那么文档中应该有一个属性(Attributes)段. </p>
<p>并且应该遵守和函数参数相同的格式.</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SampleClass</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Summary of class here.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Longer class information....</span></span><br><span class="line"><span class="string">    Longer class information....</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Attributes:</span></span><br><span class="line"><span class="string">        likes_spam: A boolean indicating if we like SPAM or not.</span></span><br><span class="line"><span class="string">        eggs: An integer count of the eggs we have laid.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, likes_spam=<span class="literal">False</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Inits SampleClass with blah.&quot;&quot;&quot;</span></span><br><span class="line">        self.likes_spam = likes_spam</span><br><span class="line">        self.eggs = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">public_method</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Performs operation blah.&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="块注释和行注释"><a href="#块注释和行注释" class="headerlink" title="块注释和行注释"></a>块注释和行注释</h3><p>最需要写注释的是代码中那些技巧性的部分. </p>
<p>如果你在下次 代码审查 的时候必须解释一下, 那么你应该现在就给它写注释.</p>
<p>对于复杂的操作, 应该在其操作开始前写上若干行注释. </p>
<p>对于不是一目了然的代码, 应在其行尾添加注释.</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># We use a weighted dictionary search to find out where i is in</span></span><br><span class="line"><span class="comment"># the array.  We extrapolate position based on the largest num</span></span><br><span class="line"><span class="comment"># in the array and the array size and then do binary search to</span></span><br><span class="line"><span class="comment"># get the exact number.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> i &amp; (i-<span class="number">1</span>) == <span class="number">0</span>:        <span class="comment"># True if i is 0 or a power of 2.</span></span><br></pre></td></tr></table></figure></p>
<p>为了提高可读性, 注释应该至少离开代码2个空格.</p>
<p>另一方面, 绝不要描述代码. 假设阅读代码的人比你更懂Python, 他只是不知道你的代码要做什么.</p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># BAD COMMENT: Now go through the b array and make sure whenever i occurs</span></span><br><span class="line"><span class="comment"># the next element is i+1</span></span><br></pre></td></tr></table></figure></p>
<h1 id="标点符号-拼写和语法"><a href="#标点符号-拼写和语法" class="headerlink" title="标点符号,拼写和语法"></a>标点符号,拼写和语法</h1><h3 id="规则-8"><a href="#规则-8" class="headerlink" title="规则"></a>规则</h3><p>注意标点符号,拼写和语法</p>
<p>注释应有适当的大写和标点,句子应该尽量完整.对于诸如在行尾上的较短注释,可以不那么正式,但是也应该尽量保持风格一致.</p>
<h1 id="类"><a href="#类" class="headerlink" title="类"></a>类</h1><h3 id="规则-9"><a href="#规则-9" class="headerlink" title="规则"></a>规则</h3><p>如果一个类不继承自其它类, 就显式的从object继承. 嵌套类也一样.(除非是为了和 python2 兼容)</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SampleClass</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OuterClass</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">InnerClass</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ChildClass</span>(<span class="title class_ inherited__">ParentClass</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;已从另一个类显式继承。&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SampleClass</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OuterClass</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">InnerClass</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p>
<p>继承自 object 是为了使属性(properties)正常工作, 并且这样可以保护你的代码, 使其不受 PEP-3000 的一个特殊的潜在不兼容性影响. </p>
<h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><h3 id="规则-10"><a href="#规则-10" class="headerlink" title="规则"></a>规则</h3><p>即使参数都是字符串, 使用%操作符或者格式化方法格式化字符串.</p>
<p>不过也不能一概而论, 你需要在+和%之间好好判定.</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = a + b</span><br><span class="line">x = <span class="string">&#x27;%s, %s!&#x27;</span> % (imperative, expletive)</span><br><span class="line">x = <span class="string">&#x27;&#123;&#125;,&#123;&#125;!&#x27;</span>.<span class="built_in">format</span>(name, n)</span><br><span class="line">x = <span class="string">&#x27;name: %s; score: %d&#x27;</span> % (name, n)</span><br><span class="line">x = <span class="string">&#x27;name: &#123;&#125;; score: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(name, n)</span><br></pre></td></tr></table></figure></p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="string">&#x27;%s%s&#x27;</span> % (a, b)  <span class="comment"># use + in this case</span></span><br><span class="line">x = <span class="string">&#x27;&#123;&#125;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(a, b)  <span class="comment"># use + in this case</span></span><br><span class="line">x = imperative + <span class="string">&#x27;, &#x27;</span> + expletive + <span class="string">&#x27;!&#x27;</span></span><br><span class="line">x = <span class="string">&#x27;name: &#x27;</span> + name + <span class="string">&#x27;; score: &#x27;</span> + <span class="built_in">str</span>(n)</span><br></pre></td></tr></table></figure></p>
<p>避免在循环中用+和+=操作符来累加字符串. 由于字符串是不可变的, 这样做会创建不必要的临时对象, 并且导致二次方而不是线性的运行时间. </p>
<p>作为替代方案, 你可以将每个子串加入列表, 然后在循环结束后用 .join 连接列表. (也可以将每个子串写入一个 cStringIO.StringIO 缓存中.)</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">items = [<span class="string">&#x27;&lt;table&gt;&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> last_name, first_name <span class="keyword">in</span> employee_list:</span><br><span class="line">    item.append(<span class="string">&#x27;&lt;tr&gt;&lt;td&gt;%s, %s&lt;td&gt;&lt;/tr&gt;&#x27;</span> % (last_name, first_name))</span><br><span class="line">item.append(<span class="string">&#x27;&lt;/table&gt;&#x27;</span>)</span><br><span class="line">employee_table = <span class="string">&#x27;&#x27;</span>.join(items)</span><br></pre></td></tr></table></figure></p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">employee_table = <span class="string">&#x27;&lt;table&gt;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> last_name, first_name <span class="keyword">in</span> employee_list:</span><br><span class="line">    employee_table += <span class="string">&#x27;&lt;tr&gt;&lt;td&gt;%s, %s&lt;/td&gt;&lt;/tr&gt;&#x27;</span> % (last_name, first_name)</span><br><span class="line">employee_table += <span class="string">&#x27;&lt;/table&gt;&#x27;</span></span><br></pre></td></tr></table></figure></p>
<p>在同一个文件中, 保持使用字符串引号的一致性.</p>
<p>使用单引号’或者双引号”之一用以引用字符串, 并在同一文件中沿用. </p>
<p>在字符串内可以使用另外一种引号, 以避免在字符串中使用.</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Python(<span class="string">&#x27;Why are you hiding your eyes?&#x27;</span>)</span><br><span class="line">Gollum(<span class="string">&quot;I&#x27;m scared of lint errors.&quot;</span>)</span><br><span class="line">Narrator(<span class="string">&#x27;&quot;Good!&quot; thought a happy Python reviewer.&#x27;</span>)</span><br></pre></td></tr></table></figure></p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Python(<span class="string">&quot;Why are you hiding your eyes?&quot;</span>)</span><br><span class="line">Gollum(<span class="string">&#x27;The lint. It burns. It burns us.&#x27;</span>)</span><br><span class="line">Gollum(<span class="string">&quot;Always the great lint. Watching. Watching.&quot;</span>)</span><br></pre></td></tr></table></figure></p>
<p>为多行字符串使用三重双引号”””而非三重单引号’’’. </p>
<p>当且仅当项目中使用单引号’来引用字符串时, 才可能会使用三重’’’为非文档字符串的多行字符串来标识引用. 文档字符串必须使用三重双引号”””. </p>
<p>多行字符串不应随着代码其他部分缩进的调整而发生位置移动.</p>
<p>如果需要避免在字符串中嵌入额外的空间,可以使用串联的单行字符串或者使用 textwrap.dedent() 来删除每行多余的空间.</p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">long_string = <span class="string">&quot;&quot;&quot;This is pretty ugly.</span></span><br><span class="line"><span class="string">Don&#x27;t do this.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></p>
<p>正确样例1：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">long_string = <span class="string">&quot;&quot;&quot;This is fine if your use case can accept</span></span><br><span class="line"><span class="string">  extraneous leading spaces.&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">long_string = (<span class="string">&quot;And this is fine if you cannot accept\n&quot;</span> +</span><br><span class="line">       <span class="string">&quot;extraneous leading spaces.&quot;</span>)</span><br><span class="line"></span><br><span class="line">long_string = (<span class="string">&quot;And this too is fine if you cannot accept\n&quot;</span></span><br><span class="line">       <span class="string">&quot;extraneous leading spaces.&quot;</span>)</span><br></pre></td></tr></table></figure></p>
<p>正确样例2：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> textwrap</span><br><span class="line"></span><br><span class="line">long_string = textwrap.dedent(<span class="string">&quot;&quot;&quot;\</span></span><br><span class="line"><span class="string">  This is also fine, because textwrap.dedent()</span></span><br><span class="line"><span class="string">  will collapse common leading spaces in each line.&quot;&quot;&quot;</span>)</span><br></pre></td></tr></table></figure></p>
<h1 id="文件和sockets"><a href="#文件和sockets" class="headerlink" title="文件和sockets"></a>文件和sockets</h1><h3 id="规则-11"><a href="#规则-11" class="headerlink" title="规则"></a>规则</h3><p>在文件和sockets结束时, 显式的关闭它.</p>
<p>除文件外, sockets或其他类似文件的对象在没有必要的情况下打开, 会有许多副作用</p>
<p>推荐使用 “with”语句 以管理文件:</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;hello.txt&#x27;</span>) <span class="keyword">as</span> hello_file:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> hello_file:</span><br><span class="line">        <span class="built_in">print</span>(line)</span><br></pre></td></tr></table></figure></p>
<p>对于不支持使用”with”语句的类似文件的对象,使用 contextlib.closing():<br>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> contextlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> contextlib.closing(urllib.urlopen(<span class="string">&quot;http://www.python.org/&quot;</span>)) <span class="keyword">as</span> front_page:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> front_page:</span><br><span class="line">        <span class="built_in">print</span>(line)</span><br></pre></td></tr></table></figure></p>
<h1 id="TODO注释"><a href="#TODO注释" class="headerlink" title="TODO注释"></a>TODO注释</h1><h3 id="规则-12"><a href="#规则-12" class="headerlink" title="规则"></a>规则</h3><p>为临时代码使用TODO注释, 它是一种短期解决方案.</p>
<p>TODO注释应该在所有开头处包含”TODO”字符串, 紧跟着是用括号括起来的你的名字, email地址或其它标识符.</p>
<p>然后是一个可选的冒号. 接着必须有一行注释, 解释要做什么. </p>
<p>主要目的是为了有一个统一的TODO格式, 这样添加注释的人就可以搜索到(并可以按需提供更多细节). </p>
<p>写了TODO注释并不保证写的人会亲自解决问题. </p>
<p>当你写了一个TODO, 请注上你的名字.</p>
<p>如果你的TODO是”将来做某事”的形式, 那么请确保你包含了一个指定的日期(“2009年11月解决”)或者一个特定的事件(“等到所有的客户都可以处理XML请求就移除这些代码”).</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># TODO(kl@gmail.com): Use a &quot;*&quot; here for string repetition.</span></span><br><span class="line"><span class="comment"># TODO(Zeke) Change this to use relations.</span></span><br></pre></td></tr></table></figure>
<h1 id="导入格式"><a href="#导入格式" class="headerlink" title="导入格式"></a>导入格式</h1><p>每个导入应该独占一行, typing 的导入除外</p>
<p>导入总应该放在文件顶部, 位于模块注释和文档字符串之后, 模块全局变量和常量之前. 导入应该按照从最通用到最不通用的顺序分组:</p>
<h3 id="future导入"><a href="#future导入" class="headerlink" title="future导入"></a><strong>future</strong>导入</h3><p>“<strong>future</strong>“目的是把下一个版本的特性导入到当前版本</p>
<p>future语句必须在靠近模块开头的位置出现。只有以下内容可以放在future语句之前。</p>
<p>1、模块的文档字符串</p>
<p>2、注释</p>
<p>3、空行</p>
<p>4、其他future语句</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> absolute_import</span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br></pre></td></tr></table></figure>
<h3 id="标准库导入"><a href="#标准库导入" class="headerlink" title="标准库导入"></a>标准库导入</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br></pre></td></tr></table></figure>
<h3 id="第三方库导入"><a href="#第三方库导入" class="headerlink" title="第三方库导入"></a>第三方库导入</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br></pre></td></tr></table></figure>
<h3 id="本地代码子包导入"><a href="#本地代码子包导入" class="headerlink" title="本地代码子包导入"></a>本地代码子包导入</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> otherproject.ai <span class="keyword">import</span> mind</span><br></pre></td></tr></table></figure>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>每种分组中, 应该根据每个模块的完整包路径按字典序排序, 忽略大小写.<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># __future__导入</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> absolute_import</span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标准库</span></span><br><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三方库</span></span><br><span class="line"><span class="keyword">from</span> absl <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> absl <span class="keyword">import</span> flags</span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"><span class="keyword">import</span> cryptography</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地代码子包导入</span></span><br><span class="line"><span class="keyword">from</span> book.genres <span class="keyword">import</span> scifi</span><br><span class="line"><span class="keyword">from</span> myproject.backend <span class="keyword">import</span> huxley</span><br><span class="line"><span class="keyword">from</span> myproject.backend.hgwells <span class="keyword">import</span> time_machine</span><br><span class="line"><span class="keyword">from</span> myproject.backend.state_machine <span class="keyword">import</span> main_loop</span><br><span class="line"><span class="keyword">from</span> otherproject.ai <span class="keyword">import</span> body</span><br><span class="line"><span class="keyword">from</span> otherproject.ai <span class="keyword">import</span> mind</span><br><span class="line"><span class="keyword">from</span> otherproject.ai <span class="keyword">import</span> soul</span><br><span class="line"></span><br><span class="line"><span class="comment"># Older style code may have these imports down here instead:</span></span><br><span class="line"><span class="comment">#from myproject.backend.hgwells import time_machine</span></span><br><span class="line"><span class="comment">#from myproject.backend.state_machine import main_loop</span></span><br></pre></td></tr></table></figure></p>
<h1 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h1><h3 id="规则-13"><a href="#规则-13" class="headerlink" title="规则"></a>规则</h3><p>通常每个语句应该独占一行.不过, 如果测试结果与测试语句在一行放得下, 你也可以将它们放在同一行.</p>
<p>如果是if语句, 只有在没有else时才能这样做. </p>
<p>特别地, 绝不要对 try/except 这样做, 因为try和except不能放在同一行.</p>
<p>正确样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> foo: bar(foo)</span><br></pre></td></tr></table></figure></p>
<p>错误样例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> foo: bar(foo)</span><br><span class="line"><span class="keyword">else</span>:   baz(foo)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:               bar(foo)</span><br><span class="line"><span class="keyword">except</span> ValueError: baz(foo)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    bar(foo)</span><br><span class="line"><span class="keyword">except</span> ValueError: baz(foo)</span><br></pre></td></tr></table></figure></p>
<h1 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h1><h3 id="规则-14"><a href="#规则-14" class="headerlink" title="规则"></a>规则</h3><p>在Python中, 对于琐碎又不太重要的访问函数, 你应该直接使用公有变量来取代它们, 这样可以避免额外的函数调用开销. </p>
<p>当添加更多功能时, 你可以用属性(property)来保持语法的一致性.</p>
<p>另一方面, 如果访问更复杂, 或者变量的访问开销很显著, 那么你应该使用像 get_foo() 和 set_foo() 这样的函数调用. </p>
<p>如果之前的代码行为允许通过属性(property)访问, 那么就不要将新的访问函数与属性绑定. </p>
<p>这样, 任何试图通过老方法访问变量的代码就没法运行, 使用者也就会意识到复杂性发生了变化.</p>
<h1 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h1><h3 id="规则-15"><a href="#规则-15" class="headerlink" title="规则"></a>规则</h3><p>模块名写法: module_name ;包名写法: package_name ;类名: ClassName ;方法名: method_name ;异常名: ExceptionName ;函数名: function_name ;全局常量名: GLOBAL_CONSTANT_NAME ;全局变量名: global_var_name ;实例名: instance_var_name ;函数参数名: function_parameter_name ;局部变量名: local_var_name . </p>
<p>函数名,变量名和文件名应该是描述性的,尽量避免缩写,特别要避免使用非项目人员不清楚难以理解的缩写,不要通过删除单词中的字母来进行缩写. </p>
<p>始终使用 .py 作为文件后缀名,不要用破折号.</p>
<h3 id="应该避免的名称"><a href="#应该避免的名称" class="headerlink" title="应该避免的名称"></a>应该避免的名称</h3><p>1.单字符名称, 除了计数器和迭代器,作为 try/except 中异常声明的 e,作为 with 语句中文件句柄的 f.</p>
<p>2.包/模块名中的连字符(-)</p>
<p>3.双下划线开头并结尾的名称(Python保留, 例如<strong>init</strong>)</p>
<h3 id="命名约定"><a href="#命名约定" class="headerlink" title="命名约定"></a>命名约定</h3><p>1.所谓”内部(Internal)”表示仅模块内可用, 或者, 在类内是保护或私有的.</p>
<p>2.用单下划线(_)开头表示模块变量或函数是protected的(使用from module import *时不会包含).</p>
<p>3.用双下划线(__)开头的实例变量或方法表示类内私有.</p>
<p>4.将相关的类和顶级函数放在同一个模块里. 不像Java, 没必要限制一个类一个模块.</p>
<p>5.对类名使用大写字母开头的单词(如CapWords, 即Pascal风格), 但是模块名应该用小写加下划线的方式(如lower_with_under.py).</p>
<p>尽管已经有很多现存的模块使用类似于CapWords.py这样的命名, 但现在已经不鼓励这样做, 因为如果模块名碰巧和类名一致, 这会让人困扰.</p>
<h3 id="文件名"><a href="#文件名" class="headerlink" title="文件名"></a>文件名</h3><p>所有python脚本文件都应该以 .py 为后缀名且不包含 -.若是需要一个无后缀名的可执行文件,可以使用软联接或者包含 exec “$0.py” “$@” 的bash脚本.</p>
<h3 id="Python之父Guido推荐的规范"><a href="#Python之父Guido推荐的规范" class="headerlink" title="Python之父Guido推荐的规范"></a>Python之父Guido推荐的规范</h3><p>详见<a href="https://zh-google-styleguide.readthedocs.io/en/stable/google-python-styleguide/python_style_rules/#section-1">https://zh-google-styleguide.readthedocs.io/en/stable/google-python-styleguide/python_style_rules/#section-1</a></p>
<h1 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h1><h3 id="规则-16"><a href="#规则-16" class="headerlink" title="规则"></a>规则</h3><p>即使是一个打算被用作脚本的文件, 也应该是可导入的. 并且简单的导入不应该导致这个脚本的主功能(main functionality)被执行, 这是一种副作用. 主功能应该放在一个main()函数中.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在Python中, pydoc以及单元测试要求模块必须是可导入的. </span><br><span class="line">你的代码应该在执行主程序前总是检查 if __name__ == &#x27;__main__&#x27; , 这样当模块被导入时主程序就不会被执行.</span><br></pre></td></tr></table></figure>
<p>若使用 absl, 请使用 app.run :<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> absl <span class="keyword">import</span> app</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">argv</span>):</span><br><span class="line">    <span class="comment"># process non-flag arguments</span></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(main)</span><br></pre></td></tr></table></figure></p>
<p>否则使用：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></p>
<h1 id="函数长度"><a href="#函数长度" class="headerlink" title="函数长度"></a>函数长度</h1><h3 id="规则-17"><a href="#规则-17" class="headerlink" title="规则"></a>规则</h3><p>推荐函数功能尽量集中,简单,小巧</p>
<p>不对函数长度做硬性限制.但是若一个函数超过了40行,推荐考虑一下是否可以在不损害程序结构的情况下对其进行分解. </p>
<p>因为即使现在长函数运行良好,但几个月后可能会有人修改它并添加一些新的行为,这容易产生难以发现的bug.保持函数的简练,使其更加容易阅读和修改.</p>
<p>当遇到一些很长的函数时,若发现调试比较困难或是想在其他地方使用函数的一部分功能,不妨考虑将这个长函数进行拆分.</p>
<h1 id="类型注释"><a href="#类型注释" class="headerlink" title="类型注释"></a>类型注释</h1><h3 id="通用规则"><a href="#通用规则" class="headerlink" title="通用规则"></a>通用规则</h3><p>1.请先熟悉下 ‘PEP-484 <a href="https://www.python.org/dev/peps/pep-0484/">https://www.python.org/dev/peps/pep-0484/</a>’</p>
<p>2.对于方法，仅在必要时才对 self 或 cls 注释</p>
<p>3.若对类型没有任何显示，请使用 Any</p>
<p>4.无需注释模块中的所有函数</p>
]]></content>
      <tags>
        <tag>小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>tldr镜像源替换</title>
    <url>/2023/12/12/tldr%E9%95%9C%E5%83%8F%E6%BA%90%E6%9B%BF%E6%8D%A2/</url>
    <content><![CDATA[<h2 id="1-缘起"><a href="#1-缘起" class="headerlink" title="1. 缘起"></a>1. 缘起</h2><p>发现自己不会替换shell中命令的镜像源，于是记录一下</p>
]]></content>
  </entry>
  <entry>
    <title>个人简介</title>
    <url>/2022/04/13/%E4%B8%AA%E4%BA%BA%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h2 id="个人背景"><a href="#个人背景" class="headerlink" title="个人背景"></a>个人背景</h2><p>　　某普通一本海洋专业大二学生，前蓝桥杯选手，数理和计算机基础基本没有的蒟蒻。  </p>
<h2 id="开通博客的目的"><a href="#开通博客的目的" class="headerlink" title="开通博客的目的"></a>开通博客的目的</h2><p>　　主要还是因为自己平时实在太颓了，想利用这个博客记录自己的一些学习日常以及整理一些知识（顺便学习前端，防止自己变得更颓）。  </p>
<p>　　这个博客主要分享一些基础的算法（太难的我也不会奥），难度大概在洛谷提高以下；以及一些数学建模的常见模型和习题解答；还有一些前端的知识；以及杂文若干。(ps:本人刚刚学习如何维护博客，做的不好的地方请见谅)</p>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2022/05/26/%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE/</url>
    <content><![CDATA[<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">varargout</span> = <span class="title">fig2</span><span class="params">(varargin)</span></span></span><br><span class="line"><span class="comment">% FIG2 MATLAB code for fig2.fig</span></span><br><span class="line"><span class="comment">%      FIG2, by itself, creates a new FIG2 or raises the existing</span></span><br><span class="line"><span class="comment">%      singleton*.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%      H = FIG2 returns the handle to a new FIG2 or the handle to</span></span><br><span class="line"><span class="comment">%      the existing singleton*.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%      FIG2(&#x27;CALLBACK&#x27;,hObject,eventData,handles,...) calls the local</span></span><br><span class="line"><span class="comment">%      function named CALLBACK in FIG2.M with the given input arguments.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%      FIG2(&#x27;Property&#x27;,&#x27;Value&#x27;,...) creates a new FIG2 or raises the</span></span><br><span class="line"><span class="comment">%      existing singleton*.  Starting from the left, property value pairs are</span></span><br><span class="line"><span class="comment">%      applied to the GUI before fig2_OpeningFcn gets called.  An</span></span><br><span class="line"><span class="comment">%      unrecognized property name or invalid value makes property application</span></span><br><span class="line"><span class="comment">%      stop.  All inputs are passed to fig2_OpeningFcn via varargin.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%      *See GUI Options on GUIDE&#x27;s Tools menu.  Choose &quot;GUI allows only one</span></span><br><span class="line"><span class="comment">%      instance to run (singleton)&quot;.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% See also: GUIDE, GUIDATA, GUIHANDLES</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Edit the above text to modify the response to help fig2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Last Modified by GUIDE v2.5 20-May-2022 19:49:20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Begin initialization code - DO NOT EDIT</span></span><br><span class="line">gui_Singleton = <span class="number">1</span>;</span><br><span class="line">gui_State = struct(<span class="string">&#x27;gui_Name&#x27;</span>,       mfilename, ...</span><br><span class="line">                   <span class="string">&#x27;gui_Singleton&#x27;</span>,  gui_Singleton, ...</span><br><span class="line">                   <span class="string">&#x27;gui_OpeningFcn&#x27;</span>, @fig2_OpeningFcn, ...</span><br><span class="line">                   <span class="string">&#x27;gui_OutputFcn&#x27;</span>,  @fig2_OutputFcn, ...</span><br><span class="line">                   <span class="string">&#x27;gui_LayoutFcn&#x27;</span>,  [] , ...</span><br><span class="line">                   <span class="string">&#x27;gui_Callback&#x27;</span>,   []);</span><br><span class="line"><span class="keyword">if</span> nargin &amp;&amp; ischar(varargin&#123;<span class="number">1</span>&#125;)</span><br><span class="line">    gui_State.gui_Callback = str2func(varargin&#123;<span class="number">1</span>&#125;);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> nargout</span><br><span class="line">    [varargout&#123;<span class="number">1</span>:nargout&#125;] = gui_mainfcn(gui_State, varargin&#123;:&#125;);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    gui_mainfcn(gui_State, varargin&#123;:&#125;);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">% End initialization code - DO NOT EDIT</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% --- Executes just before fig2 is made visible.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fig2_OpeningFcn</span><span class="params">(hObject, eventdata, handles, varargin)</span></span></span><br><span class="line"><span class="comment">% This function has no output args, see OutputFcn.</span></span><br><span class="line"><span class="comment">% hObject    handle to figure</span></span><br><span class="line"><span class="comment">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="comment">% handles    structure with handles and user data (see GUIDATA)</span></span><br><span class="line"><span class="comment">% varargin   command line arguments to fig2 (see VARARGIN)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Choose default command line output for fig2</span></span><br><span class="line">handles.output = hObject;</span><br><span class="line"><span class="keyword">global</span> DS1102U</span><br><span class="line">DS1102U = visa(<span class="string">&#x27;NI&#x27;</span>, <span class="string">&#x27;USB0::0x1AB1::0x0588::DS1EV193800455::INSTR&#x27;</span>); </span><br><span class="line">fopen(DS1102U); <span class="comment">%打开已创建的 VISA 对象 [此处为相关功能语句] </span></span><br><span class="line"><span class="comment">% Update handles structure</span></span><br><span class="line">guidata(hObject, handles);</span><br><span class="line"></span><br><span class="line"><span class="comment">% UIWAIT makes fig2 wait for user response (see UIRESUME)</span></span><br><span class="line"><span class="comment">% uiwait(handles.figure1);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% --- Outputs from this function are returned to the command line.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">varargout</span> = <span class="title">fig2_OutputFcn</span><span class="params">(hObject, eventdata, handles)</span> </span></span><br><span class="line"><span class="comment">% varargout  cell array for returning output args (see VARARGOUT);</span></span><br><span class="line"><span class="comment">% hObject    handle to figure</span></span><br><span class="line"><span class="comment">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="comment">% handles    structure with handles and user data (see GUIDATA)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Get default command line output from handles structure</span></span><br><span class="line">varargout&#123;<span class="number">1</span>&#125; = handles.output;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% --- Executes on button press in pb1.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pb1_Callback</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line"><span class="comment">% hObject    handle to pb1 (see GCBO)</span></span><br><span class="line"><span class="comment">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="comment">% handles    structure with handles and user data (see GUIDATA)</span></span><br><span class="line"><span class="keyword">global</span> DS1102U</span><br><span class="line">fprintf(DS1102U,<span class="string">&#x27;:RUN&#x27;</span>);</span><br><span class="line">fprintf(DS1102U,<span class="string">&#x27;*IDN?&#x27;</span>);<span class="comment">%设置命令 </span></span><br><span class="line">IDN=fscanf(DS1102U);</span><br><span class="line">set(handles.ed1,<span class="string">&#x27;String&#x27;</span>,IDN);</span><br><span class="line"></span><br><span class="line"><span class="comment">% --- Executes on button press in pb2.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pb2_Callback</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line"><span class="comment">% hObject    handle to pb2 (see GCBO)</span></span><br><span class="line"><span class="comment">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="comment">% handles    structure with handles and user data (see GUIDATA)</span></span><br><span class="line"><span class="keyword">global</span> DS1102U</span><br><span class="line">fprintf(DS1102U,<span class="string">&#x27;:STOP&#x27;</span>); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% --- Executes on button press in pb3.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pb3_Callback</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line"><span class="comment">% hObject    handle to pb3 (see GCBO)</span></span><br><span class="line"><span class="comment">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="comment">% handles    structure with handles and user data (see GUIDATA)</span></span><br><span class="line"><span class="keyword">global</span> DS1102U</span><br><span class="line">fprintf(DS1102U,<span class="string">&#x27;:AUTO&#x27;</span>);</span><br><span class="line">N=DS1102U.InputBufferSize;</span><br><span class="line">fprintf(DS1102U,<span class="string">&#x27;:wav:data?&#x27;</span>);</span><br><span class="line">[data,len]=fread(DS1102U,N); </span><br><span class="line">wave=data(<span class="number">12</span>:<span class="keyword">end</span>); </span><br><span class="line"><span class="built_in">plot</span>(handles.axes1,wave);</span><br><span class="line"><span class="comment">% 获取 VPP </span></span><br><span class="line">fprintf(DS1102U,<span class="string">&#x27;:MEASure:VPP?&#x27;</span>); </span><br><span class="line">vpp=fscanf(DS1102U);</span><br><span class="line">set(handles.ed3,<span class="string">&#x27;String&#x27;</span>,vpp/<span class="number">2</span>);</span><br><span class="line"><span class="comment">% 获取采样频率 </span></span><br><span class="line">fprintf(DS1102U,<span class="string">&#x27;:MEASure:FREQuency?&#x27;</span>); </span><br><span class="line">Fs=fscanf(DS1102U);</span><br><span class="line">set(handles.ed2,<span class="string">&#x27;String&#x27;</span>,Fs);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ed1_Callback</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line"><span class="comment">% hObject    handle to ed1 (see GCBO)</span></span><br><span class="line"><span class="comment">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="comment">% handles    structure with handles and user data (see GUIDATA)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Hints: get(hObject,&#x27;String&#x27;) returns contents of ed1 as text</span></span><br><span class="line"><span class="comment">%        str2double(get(hObject,&#x27;String&#x27;)) returns contents of ed1 as a double</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% --- Executes during object creation, after setting all properties.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ed1_CreateFcn</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line"><span class="comment">% hObject    handle to ed1 (see GCBO)</span></span><br><span class="line"><span class="comment">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="comment">% handles    empty - handles not created until after all CreateFcns called</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Hint: edit controls usually have a white background on Windows.</span></span><br><span class="line"><span class="comment">%       See ISPC and COMPUTER.</span></span><br><span class="line"><span class="keyword">if</span> ispc &amp;&amp; <span class="built_in">isequal</span>(get(hObject,<span class="string">&#x27;BackgroundColor&#x27;</span>), get(<span class="number">0</span>,<span class="string">&#x27;defaultUicontrolBackgroundColor&#x27;</span>))</span><br><span class="line">    set(hObject,<span class="string">&#x27;BackgroundColor&#x27;</span>,<span class="string">&#x27;white&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ed2_Callback</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line"><span class="comment">% hObject    handle to ed2 (see GCBO)</span></span><br><span class="line"><span class="comment">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="comment">% handles    structure with handles and user data (see GUIDATA)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Hints: get(hObject,&#x27;String&#x27;) returns contents of ed2 as text</span></span><br><span class="line"><span class="comment">%        str2double(get(hObject,&#x27;String&#x27;)) returns contents of ed2 as a double</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% --- Executes during object creation, after setting all properties.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ed2_CreateFcn</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line"><span class="comment">% hObject    handle to ed2 (see GCBO)</span></span><br><span class="line"><span class="comment">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="comment">% handles    empty - handles not created until after all CreateFcns called</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Hint: edit controls usually have a white background on Windows.</span></span><br><span class="line"><span class="comment">%       See ISPC and COMPUTER.</span></span><br><span class="line"><span class="keyword">if</span> ispc &amp;&amp; <span class="built_in">isequal</span>(get(hObject,<span class="string">&#x27;BackgroundColor&#x27;</span>), get(<span class="number">0</span>,<span class="string">&#x27;defaultUicontrolBackgroundColor&#x27;</span>))</span><br><span class="line">    set(hObject,<span class="string">&#x27;BackgroundColor&#x27;</span>,<span class="string">&#x27;white&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ed3_Callback</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line"><span class="comment">% hObject    handle to ed3 (see GCBO)</span></span><br><span class="line"><span class="comment">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="comment">% handles    structure with handles and user data (see GUIDATA)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Hints: get(hObject,&#x27;String&#x27;) returns contents of ed3 as text</span></span><br><span class="line"><span class="comment">%        str2double(get(hObject,&#x27;String&#x27;)) returns contents of ed3 as a double</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% --- Executes during object creation, after setting all properties.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ed3_CreateFcn</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line"><span class="comment">% hObject    handle to ed3 (see GCBO)</span></span><br><span class="line"><span class="comment">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="comment">% handles    empty - handles not created until after all CreateFcns called</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Hint: edit controls usually have a white background on Windows.</span></span><br><span class="line"><span class="comment">%       See ISPC and COMPUTER.</span></span><br><span class="line"><span class="keyword">if</span> ispc &amp;&amp; <span class="built_in">isequal</span>(get(hObject,<span class="string">&#x27;BackgroundColor&#x27;</span>), get(<span class="number">0</span>,<span class="string">&#x27;defaultUicontrolBackgroundColor&#x27;</span>))</span><br><span class="line">    set(hObject,<span class="string">&#x27;BackgroundColor&#x27;</span>,<span class="string">&#x27;white&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% --- Executes on button press in pb4.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pb4_Callback</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line"><span class="comment">% hObject    handle to pb4 (see GCBO)</span></span><br><span class="line"><span class="comment">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="comment">% handles    structure with handles and user data (see GUIDATA)</span></span><br><span class="line"><span class="keyword">global</span> DS1102U</span><br><span class="line">fclose(DS1102U);</span><br><span class="line">delete(DS1102U);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% --- Executes during object creation, after setting all properties.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">axes1_CreateFcn</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line"><span class="comment">% hObject    handle to axes1 (see GCBO)</span></span><br><span class="line"><span class="comment">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="comment">% handles    empty - handles not created until after all CreateFcns called</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Hint: place code in OpeningFcn to populate axes1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>关于sentinel-2数据处理的若干技巧.md</title>
    <url>/2022/10/30/%E5%85%B3%E4%BA%8Esentinel-2%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%9A%84%E8%8B%A5%E5%B9%B2%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h2 id="关于sentinel-2数据处理的若干技巧"><a href="#关于sentinel-2数据处理的若干技巧" class="headerlink" title="关于sentinel-2数据处理的若干技巧"></a>关于sentinel-2数据处理的若干技巧</h2><h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><pre><code>随着九月份数学建模国赛的结束，我的竞赛生涯也算是告一段落了。
虽然最后获得了省二的成绩，但是我已经不打算参加了。
一是因为这个比赛过于纯粹，二是也确实没时间了。往后我的精力会主要放在科研上。
</code></pre><h4 id="1、数据处理的目的"><a href="#1、数据处理的目的" class="headerlink" title="1、数据处理的目的"></a>1、数据处理的目的</h4><pre><code>由于我主要是做微波遥感这块，所以对于sentinel-2的处理会较为粗糙。
我主要是想通过sentinel-2图像寻找加拿大北部海区的融池，并且将sentinel-2的数据导出为nc文件供后续处理。
数据处理使用SNAP 9.0。
</code></pre><h4 id="2、数据读取"><a href="#2、数据读取" class="headerlink" title="2、数据读取"></a>2、数据读取</h4><pre><code>可以采用两种方式：直接打开zip文件和打开xml文件。
</code></pre>]]></content>
      <tags>
        <tag>科研项目系列</tag>
      </tags>
  </entry>
  <entry>
    <title>旧作补档</title>
    <url>/2022/04/16/%E6%97%A7%E4%BD%9C%E8%A1%A5%E6%A1%A3/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>快考蓝桥杯了，发现自己dp不会，补了几题。<br>写一篇题解攒攒人品以防爆零</p>
<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>小渊和小轩希望尽可能找好心程度高的同学来帮忙传纸条，即找到来回两条传递路径，使得这两条路径上同学的好心程度之和最大。<br>第一行有 2 个用空格隔开的整数 m 和 n，表示学生矩阵有 m 行 n 列。<br>接下来的 m 行是一个 m×n 的矩阵，矩阵中第 i 行 j 列的整数表示坐在第 i 行 j 列的学生的好心程度，每行的 n 个整数之间用空格隔开。</p>
<h4 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 3</span><br><span class="line">0 3 9</span><br><span class="line">2 8 5</span><br><span class="line">5 7 0</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="算法1"><a href="#算法1" class="headerlink" title="算法1"></a>算法1</h3><h5 id="dp-O-n-2-m-2"><a href="#dp-O-n-2-m-2" class="headerlink" title="(dp)  $O(n^2 m^2)$"></a>(dp)  $O(n^2 m^2)$</h5><h4 id="C-代码"><a href="#C-代码" class="headerlink" title="C++ 代码"></a>C++ 代码</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//来回传纸条和从起点传两次到终点是等价的，建模成从起点传两次到终点更好写</span><br><span class="line">//dp[i][j][k][l]表示第一次传到(i,j)、第二次传到(k,l)时好心程度的最大值</span><br><span class="line">//显然第一次传到(i,j)的最大值可以从(i-1,j)、(i,j-1)的最大值得来</span><br><span class="line">//第二次传到(k,l)的最大值可以从(k-1,j)、(k,j-1)的最大值得来</span><br><span class="line">//所以dp[i][j][k][l]的值是max(dp[i-1][j][k-1][l],dp[i-1][j][k][l-1],dp[i][j-1][k-1][l],dp[i][j-1][k][l-1])+a[i][j]+a[k][l];(两种转移方式的组合的最大值再加上两个格子上的值)</span><br><span class="line">//需要注意的是i==k&amp;&amp;j==l时，此时两个纸条到了同一格子上，但是每个格子上的好心值只能计算一次，所以要减去重复的</span><br><span class="line">//最后结果根据dp的定义是dp[n][m][n][m]</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 51;</span><br><span class="line">int dp[N][N][N][N],a[N][N],m,n;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    cin &gt;&gt; n&gt;&gt;m;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(int j=1;j&lt;=m;j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for (int j = 1; j &lt;=m; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            for(int k=1;k&lt;=n;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                for(int l=1;l&lt;=m;l++)</span><br><span class="line">                &#123;</span><br><span class="line">                    dp[i][j][k][l]=max(dp[i-1][j][k-1][l],max(dp[i-1][j][k][l-1],max(dp[i][j-1][k-1][l],dp[i][j-1][k][l-1])))+a[i][j]+a[k][l];</span><br><span class="line">                    if(i==k&amp;&amp;j==l)</span><br><span class="line">                        dp[i][j][k][l]-=(a[i][j]+a[k][l]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; dp[n][m][n][m]&lt;&lt;endl;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯复盘</title>
    <url>/2022/05/04/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%8D%E7%9B%98/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前一直考虑复盘一下今年的蓝桥杯，但是苦于没有时间（摸鱼摸掉了）。所以拖到现在才写。<br>我参加的是C++ B组，最后省一中等偏上。<br>由于我语文不太好，行文整体偏向于流水账。</p>
<h2 id="Day0"><a href="#Day0" class="headerlink" title="Day0"></a>Day0</h2><p>敲了一些常用的数据结构，比如线段树、树状数组、ST表、倍增LCA等等。还写了一下图论最短路的模板题（dijkstra、SPFA、Floyd）。<br>晚上吃完饭突然发现不能用无线鼠标，于是去买了一个有线鼠标，手感一般（和机房的类似）。买完鼠标后晚上写了一些数论的板子（线性筛、exgcd、线性求逆元等等）。最后看了一些洛谷上一些经典的线性dp（但是没有看递推题单，结果G题推错方程当场炸掉20分）。看完发现也十二点多了，遂睡觉。<br>晚上比较紧张睡不着，三点钟看了一次手机，大概四点才睡的。</p>
<h2 id="Day1-上午"><a href="#Day1-上午" class="headerlink" title="Day1 上午"></a>Day1 上午</h2><p>早上起的比较晚，于是没吃早饭直接开打了。<br>开考后没几分钟就收到了5张黄牌，吓得我都不敢在动了。但是好在监考老师说没事。于是开始写题。以下是考试的时间线（不准确）：<br>9:05 写掉A<br>9:06 看到B和日期有关，遂不写，开始看C<br>9:14 发现C是模拟，于是切掉<br>9:15-9:20 开始看D，把玩了一些小案例。发现就是对于每个元素在2<em>(n-i)和2</em>(i-1)之间取最大值。<br>9:31 写掉D，开始看E<br>9:40 E看不懂，开始看F，一眼看出暴力前缀和可以得到70。于是直接开始写。<br>9:50 码出了F的二维前缀和，放着开始看G<br>9:55 发现G好像有点像原题，通过分析小样例可以一眼看出边界条件，于是开始重点突破递推方程。<br>10:10 感觉递推方程的f[i][j]意义不明，遂放着，开H<br>10:15 看完H感觉是搜索，但是又怕爆复杂度，想着重新优化一下降到O(nlogn)以下。开始犯困了。</p>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯考后有感.md</title>
    <url>/2022/06/19/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%80%83%E5%90%8E%E6%9C%89%E6%84%9F/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>软件测试岗入职两个月的心得体会</title>
    <url>/2023/12/23/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%B2%97%E5%85%A5%E8%81%8C%E4%B8%A4%E4%B8%AA%E6%9C%88%E7%9A%84%E5%BF%83%E5%BE%97%E4%BD%93%E4%BC%9A/</url>
    <content><![CDATA[<h2 id="1-个人基本情况"><a href="#1-个人基本情况" class="headerlink" title="1. 个人基本情况"></a>1. 个人基本情况</h2><ul>
<li>学校背景：本科JS双非、保研华五边缘学院</li>
<li>专业背景：遥感相关专业</li>
<li>绩点：3/27（面试时未提供）</li>
<li>英语成绩：CET4: 538 CET6: 504</li>
<li>获奖竞赛：蓝桥杯B组国二、数学建模省二、校奖若干</li>
<li>科研成果：SCI二区一作、若干二作三作、发明专利在投（后两者没有体现在简历上）</li>
</ul>
<h2 id="2-公司及岗位情况"><a href="#2-公司及岗位情况" class="headerlink" title="2. 公司及岗位情况"></a>2. 公司及岗位情况</h2><ul>
<li>公司情况：测绘行业龙头，但在开发领域算是中小厂，各个分公司的各种测试人员（软件、硬件、算法）总共有五十余个</li>
<li>分公司情况：一共八十几个人，搞技术的有四十几个人，但是做测试的正式工只有我上司一个</li>
<li>岗位情况：硬件测试实习生（但实际上是软件测试）</li>
<li>工资情况：一个月3000，餐补200（请假扣工资和餐补）</li>
<li>上班时间：8:30 - 18:00，中午休息从12点到1点半</li>
<li>竞争者情况：据说在确定要我之前，每天都能接到简历，而且投实习和找工作的都有</li>
</ul>
<h2 id="3-工作情况"><a href="#3-工作情况" class="headerlink" title="3. 工作情况"></a>3. 工作情况</h2><h3 id="3-1-软件测试干什么"><a href="#3-1-软件测试干什么" class="headerlink" title="3.1 软件测试干什么"></a>3.1 软件测试干什么</h3><p>我主要做的是软件测试中的功能性测试，也就是最低级的测试。主要任务也就是测试软件各种功能、各种控件是否正常，以及软件和设备配合进行测量是否正常。</p>
<h3 id="3-2-工作历程-unfinished"><a href="#3-2-工作历程-unfinished" class="headerlink" title="3.2 工作历程 (unfinished)"></a>3.2 工作历程 (unfinished)</h3><p>一般来说第一周的时间上司会让你熟悉软件、写一写软件使用说明书、完善测试环境啥的。第二周开始就正式参与软件项目的测试。我的上司看我编程还行，再加上第2 - 3周没有什么测试任务，就给了我两周时间，让我先进行自动化测试程序的开发。但由于需要做自动化测试的需求不明确，整个框架要全部自己弄，而且对桌面软件自动化测试开发技术栈也不太了解，导致最后咕咕咕了，没做出啥有效的东西。</p>
<p>从第四周开始，我就正式参与软件项目的测试。一般来说一轮软件测试需要经过以下几个流程：</p>
<h3 id="3-3-工作所需技能"><a href="#3-3-工作所需技能" class="headerlink" title="3.3 工作所需技能"></a>3.3 工作所需技能</h3><p>以下技能按重要性从高到低排序：</p>
<ol>
<li>调节同事关系的能力：由于测试的工作是在给别人挑刺，因此测试岗和其他同事之间的关系特别容易变得特别紧张，基本上是人见人嫌的状态。因此学习如何和同事相处对于测试岗非常重要。</li>
<li>与同事沟通的能力：由于测试需要频繁和软件、硬件甚至是算法对接，因此你和别人交流的能力是非常关键的。你需要学会向同事们完整的描述一个缺陷（缺陷的表现、产生缺陷的操作、引发缺陷的原因、缺陷的重要性等），以及和同事沟通争取资源（如服务器资源、设备资源等）等基本沟通操作。</li>
<li>对产品功能的了解：对产品功能的了解程度，直接决定了你发现的缺陷的数量和质量。如果对于产品功能没有自己的见解，你要么只能发现一些常见的、表面上的问题，要么你发现的问题很容易在讨论后被打成不是问题。这些都会影响你的业绩。</li>
<li>复现错误的能力：能否对错误进行复现、对产生错误的操作进行定位，决定了你发现的这个错误的可信程度，如果你发现的错误是没法复现的，软件或硬件就可以认为这是一个偶发性问题。那么你的业绩也就随之消失了。</li>
<li>在规则内多尝试：测试往往很多时候需要多次尝试才能确认问题所在，因此在规则容许的范围内（只通过软件进行操作，不修改配置文件、dll文件等）要尽可能多的进行尝试。</li>
<li>举一反三的能力：当发现一个问题的时候，多思考有没有什么类似的操作能诱发同类的问题。</li>
<li>一定的开发能力：一定的开发能力和经验能帮助你更好的理解错误日志、定位产生错误的操作。开发能力要是足够强后期转自动化测试等也比较好转。</li>
</ol>
<h2 id="4-实习能学到什么"><a href="#4-实习能学到什么" class="headerlink" title="4. 实习能学到什么"></a>4. 实习能学到什么</h2><ol>
<li>了解行业状态：工作和科研不一样。工业界一般用的都是一些“传统”的算法和框架，需要的是你能快速使用工具解决问题，而不是把慢慢把问题完善解决。</li>
<li>适应工作状态：工作以后自由时间会非常少（相比于大学时期），因此需要合理调节自己的状态。</li>
<li>学习行业内部黑话：最基本的比如需求、流程、提测、黑盒测试、白盒测试、冒烟测试等。</li>
<li>学习工作技能：（这块可能以后不干测试的话不太重要）学习编写设备测试环境、根据最小用例检查点编写最小用例、提出测试需求、提出测试计划、提交缺陷、编写测试报告等。</li>
</ol>
<h2 id="upd1-最新情况-2023-12-31"><a href="#upd1-最新情况-2023-12-31" class="headerlink" title="upd1 最新情况 (2023/12/31)"></a>upd1 最新情况 (2023/12/31)</h2><p>上司在这周五已经拿N+1离职了（感觉大概率是被优化了，不然拿不到N+1）。我也准备跑路了。</p>
]]></content>
      <tags>
        <tag>实习经历</tag>
      </tags>
  </entry>
  <entry>
    <title>随机好句摘抄</title>
    <url>/2022/05/02/%E9%9A%8F%E6%9C%BA%E5%A5%BD%E5%8F%A5%E6%91%98%E6%8A%84/</url>
    <content><![CDATA[<p>在你最冷的时候，有人不顾自己寒冷抱着你，这就是幸福。  </p>
<p>所谓辉煌的人生，不过是欲望的囚徒。  </p>
<p>我有故人抱剑去，斩尽春风未肯归。</p>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>0：GUI中的基本操作</title>
    <url>/2022/04/22/GUI%E5%85%A5%E9%97%A8%E5%AE%9E%E4%BE%8B/0%EF%BC%9AGUI%E4%B8%AD%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Matlab Cody——Basics on Vectors题解</title>
    <url>/2023/07/22/Matlab%20Cody/Matlab%20Cody%E2%80%94%E2%80%94Basics%20on%20Vectors%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="0-Matlab-Cody-简介"><a href="#0-Matlab-Cody-简介" class="headerlink" title="0. Matlab Cody 简介"></a>0. Matlab Cody 简介</h2><p>Matlab Cody是一个类似Leetcode的oj网站，网址：<a href="https://ww2.mathworks.cn/matlabcentral/cody">https://ww2.mathworks.cn/matlabcentral/cody</a></p>
<h2 id="1-Problem-3-Find-the-sum-of-all-the-numbers-of-the-input-vector"><a href="#1-Problem-3-Find-the-sum-of-all-the-numbers-of-the-input-vector" class="headerlink" title="1. Problem 3. Find the sum of all the numbers of the input vector"></a>1. Problem 3. Find the sum of all the numbers of the input vector</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">vecsum</span><span class="params">(x)</span></span></span><br><span class="line">   y = sum(x,<span class="string">&#x27;all&#x27;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="2-Problem-6-Select-every-other-element-of-a-vector"><a href="#2-Problem-6-Select-every-other-element-of-a-vector" class="headerlink" title="2. Problem 6. Select every other element of a vector"></a>2. Problem 6. Select every other element of a vector</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">everyOther</span><span class="params">(x)</span></span></span><br><span class="line">  y = x(<span class="number">1</span>:<span class="number">2</span>:<span class="keyword">end</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="3-Problem-247-Arrange-Vector-in-descending-order"><a href="#3-Problem-247-Arrange-Vector-in-descending-order" class="headerlink" title="3. Problem 247. Arrange Vector in descending order"></a>3. Problem 247. Arrange Vector in descending order</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">desSort</span><span class="params">(x)</span></span></span><br><span class="line">  y = <span class="built_in">sort</span>(x,<span class="string">&#x27;descend&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="4-Problem-135-Inner-product-of-two-vectors"><a href="#4-Problem-135-Inner-product-of-two-vectors" class="headerlink" title="4. Problem 135. Inner product of two vectors"></a>4. Problem 135. Inner product of two vectors</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">z</span> = <span class="title">your_fcn_name</span><span class="params">(x,y)</span></span></span><br><span class="line">  z = <span class="built_in">dot</span>(x,y);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="5-Problem-624-Get-the-length-of-a-given-vector"><a href="#5-Problem-624-Get-the-length-of-a-given-vector" class="headerlink" title="5. Problem 624. Get the length of a given vector"></a>5. Problem 624. Get the length of a given vector</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">VectorLength</span><span class="params">(x)</span></span></span><br><span class="line">  y = <span class="built_in">length</span>(x);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="6-Problem-1107-Find-max"><a href="#6-Problem-1107-Find-max" class="headerlink" title="6. Problem 1107. Find max"></a>6. Problem 1107. Find max</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">your_fcn_name</span><span class="params">(x)</span></span></span><br><span class="line">  y = <span class="built_in">max</span>(x,[],<span class="string">&#x27;all&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="7-Problem-605-Whether-the-input-is-vector"><a href="#7-Problem-605-Whether-the-input-is-vector" class="headerlink" title="7. Problem 605. Whether the input is vector?"></a>7. Problem 605. Whether the input is vector?</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">checkvector</span><span class="params">(x)</span></span></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">isvector</span>(x)</span><br><span class="line">      y = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">      y = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="8-Problem-2631-Flip-the-vector-from-right-to-left"><a href="#8-Problem-2631-Flip-the-vector-from-right-to-left" class="headerlink" title="8. Problem 2631. Flip the vector from right to left"></a>8. Problem 2631. Flip the vector from right to left</h2><p>题目要求不能直接使用函数，所以自己写<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">flip_vector</span><span class="params">(x)</span></span></span><br><span class="line">  y = x(<span class="keyword">end</span>:<span class="number">-1</span>:<span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<h2 id="9-Problem-3076-Create-a-vector"><a href="#9-Problem-3076-Create-a-vector" class="headerlink" title="9. Problem 3076. Create a vector"></a>9. Problem 3076. Create a vector</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">zeroToNby2</span><span class="params">(n)</span></span></span><br><span class="line">  y = <span class="number">0</span>:<span class="number">2</span>:n;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="10-Problem-1024-Doubling-elements-in-a-vector"><a href="#10-Problem-1024-Doubling-elements-in-a-vector" class="headerlink" title="10. Problem 1024. Doubling elements in a vector"></a>10. Problem 1024. Doubling elements in a vector</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">B</span> = <span class="title">your_fcn_name</span><span class="params">(A)</span></span></span><br><span class="line">  B = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">2</span>*<span class="built_in">length</span>(A));</span><br><span class="line">  B(<span class="number">1</span>:<span class="number">2</span>:<span class="keyword">end</span><span class="number">-1</span>) = A;</span><br><span class="line">  B(<span class="number">2</span>:<span class="number">2</span>:<span class="keyword">end</span>) = A;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="11-Problem-42651-Vector-creation"><a href="#11-Problem-42651-Vector-creation" class="headerlink" title="11. Problem 42651. Vector creation"></a>11. Problem 42651. Vector creation</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">vector</span><span class="params">(x)</span></span></span><br><span class="line">  y = <span class="number">1</span>:x;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>代码打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab Cody——Basics Rounding 题解</title>
    <url>/2023/07/22/Matlab%20Cody/Matlab-Cody%E2%80%94%E2%80%94Basics%20Rounding%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="1-Problem-42641-MATLAB-Basic-rounding"><a href="#1-Problem-42641-MATLAB-Basic-rounding" class="headerlink" title="1. Problem 42641. MATLAB Basic: rounding"></a>1. Problem 42641. MATLAB Basic: rounding</h2><p>错误写法：<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">round_zero</span><span class="params">(x)</span></span></span><br><span class="line">  y = <span class="built_in">round</span>(x,TieBreaker=<span class="string">&quot;tozero&quot;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<p>正确写法：<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">round_zero</span><span class="params">(x)</span></span></span><br><span class="line">  y = <span class="built_in">fix</span>(x);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<h2 id="2-Problem-42642-MATLAB-Basic-rounding-II"><a href="#2-Problem-42642-MATLAB-Basic-rounding-II" class="headerlink" title="2. Problem 42642. MATLAB Basic: rounding II"></a>2. Problem 42642. MATLAB Basic: rounding II</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">round_x</span><span class="params">(x)</span></span></span><br><span class="line">  y = <span class="built_in">round</span>(x);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="3-Problem-42643-MATLAB-Basic-rounding-III"><a href="#3-Problem-42643-MATLAB-Basic-rounding-III" class="headerlink" title="3. Problem 42643. MATLAB Basic: rounding III"></a>3. Problem 42643. MATLAB Basic: rounding III</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">round_x</span><span class="params">(x)</span></span></span><br><span class="line">  y = <span class="built_in">floor</span>(x);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="4-Problem-42644-MATLAB-Basic-rounding-IV"><a href="#4-Problem-42644-MATLAB-Basic-rounding-IV" class="headerlink" title="4. Problem 42644. MATLAB Basic: rounding IV"></a>4. Problem 42644. MATLAB Basic: rounding IV</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">round_x</span><span class="params">(x)</span></span></span><br><span class="line">  y = <span class="built_in">ceil</span>(x);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="5-Problem-2559-Check-that-number-is-whole-number"><a href="#5-Problem-2559-Check-that-number-is-whole-number" class="headerlink" title="5. Problem 2559. Check that number is whole number"></a>5. Problem 2559. Check that number is whole number</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">your_fcn_name</span><span class="params">(x)</span></span></span><br><span class="line">  y = (x==<span class="built_in">round</span>(x));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="6-Problem-2866-Matlab-Basics-Rounding-II"><a href="#6-Problem-2866-Matlab-Basics-Rounding-II" class="headerlink" title="6. Problem 2866. Matlab Basics - Rounding II"></a>6. Problem 2866. Matlab Basics - Rounding II</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">round_3_d_p</span><span class="params">(x)</span></span></span><br><span class="line">  y = <span class="built_in">round</span>(x,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="7-Problem-2867-Matlab-Basics-Rounding-III"><a href="#7-Problem-2867-Matlab-Basics-Rounding-III" class="headerlink" title="7. Problem 2867. Matlab Basics - Rounding III"></a>7. Problem 2867. Matlab Basics - Rounding III</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">round_ten_thou</span><span class="params">(x)</span></span></span><br><span class="line">  y = <span class="built_in">round</span>(x,<span class="number">-4</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="8-Problem-2120-Rounding-off-numbers-to-n-decimals"><a href="#8-Problem-2120-Rounding-off-numbers-to-n-decimals" class="headerlink" title="8. Problem 2120. Rounding off numbers to n decimals"></a>8. Problem 2120. Rounding off numbers to n decimals</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">myround</span><span class="params">(x,n)</span></span></span><br><span class="line">  y = <span class="built_in">round</span>(x,n);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="9-Problem-43278-Make-roundn-function"><a href="#9-Problem-43278-Make-roundn-function" class="headerlink" title="9. Problem 43278. Make roundn function"></a>9. Problem 43278. Make roundn function</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">myroundn</span><span class="params">(x,n)</span></span></span><br><span class="line">   y = <span class="built_in">round</span>(x,n<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="10-Problem-713-Find-the-maximum-number-of-decimal-places-in-a-set-of-numbers"><a href="#10-Problem-713-Find-the-maximum-number-of-decimal-places-in-a-set-of-numbers" class="headerlink" title="10. Problem 713. Find the maximum number of decimal places in a set of numbers"></a>10. Problem 713. Find the maximum number of decimal places in a set of numbers</h2><p>题目意思：给定一个向量或值矩阵，计算输入中的最大小数位数。尾随零不算有效。没有有效数字将导致答案为 0。<br>题解：没有找到一个优雅的写法，所有先放空。<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>代码打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>第0节 Linux下MySQL环境配置</title>
    <url>/2024/06/09/MySQL%E5%AD%A6%E4%B9%A0/%E7%AC%AC0%E8%8A%82-Linux%E4%B8%8BMySQL%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h2><p>作者采用的Linux为Ubuntu 24.04版。</p>
<h2 id="1-Linux下MySQL安装"><a href="#1-Linux下MySQL安装" class="headerlink" title="1. Linux下MySQL安装"></a>1. Linux下MySQL安装</h2><p>可以先用rpm命令检查是否已经安装MySQL:<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep mysql</span><br></pre></td></tr></table></figure></p>
<p>如果没有安装的话可以采用apt安装:<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt install mysql-server</span><br></pre></td></tr></table></figure></p>
<p>安装完成后可以用以下命令验证是否安装成功<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mysql --version </span><br><span class="line"><span class="comment"># mysql  Ver 8.0.36-2ubuntu3 for Linux on x86_64 ((Ubuntu))</span></span><br></pre></td></tr></table></figure></p>
<p>启动MySQL并查看MySQL状态:<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">systemctl start mysql</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb  <span class="comment"># 设置开机启动</span></span><br><span class="line">systemctl status mysql</span><br></pre></td></tr></table></figure></p>
<h2 id="2-配置MySQL"><a href="#2-配置MySQL" class="headerlink" title="2. 配置MySQL"></a>2. 配置MySQL</h2><p>mysql8.0，root 用户默认通过 auth_socket 插件授权，而 auth_socket 插件通过 Unix socket 文件来验证所有连接到 localhost 的用户。</p>
<p>这意味着身份验证是基于操作系统用户的，而不是基于用户密码的，你不能以用户–密码的方式，登录root账户。</p>
<p>通过指令以root身份登录：<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo mysql</span><br></pre></td></tr></table></figure></p>
<p>修改MySQL数据库底下的user表，配置密码方式以root身份登录:<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">use mysql; <span class="comment">-- 使用mysql数据库</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>, host, plugin <span class="keyword">from</span> <span class="keyword">user</span>; <span class="comment">-- 从user中选择user、host、plugin 这三列</span></span><br></pre></td></tr></table></figure></p>
<p>正常的输出结果为:<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">user</span>             <span class="operator">|</span> host      <span class="operator">|</span> plugin                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> debian<span class="operator">-</span>sys<span class="operator">-</span>maint <span class="operator">|</span> localhost <span class="operator">|</span> caching_sha2_password <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql.infoschema <span class="operator">|</span> localhost <span class="operator">|</span> caching_sha2_password <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql.session    <span class="operator">|</span> localhost <span class="operator">|</span> caching_sha2_password <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql.sys        <span class="operator">|</span> localhost <span class="operator">|</span> caching_sha2_password <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> root             <span class="operator">|</span> localhost <span class="operator">|</span> auth_socket           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------+-----------------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><br>其中 <code>user</code> 列代表用户名、 <code>host</code> 列代表用户可以从哪些主机连接到数据库服务器、 <code>plugin</code> 代表用于该用户认证的插件</p>
<p>将 <code>root</code> 对应的plugin由 <code>auth_socket</code> 改为 <code>mysql_native_password</code><br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">with</span> mysql_native_password <span class="keyword">by</span> <span class="string">&#x27;密码&#x27;</span>;</span><br><span class="line">flush privileges; <span class="comment">-- 重新加载权限表</span></span><br></pre></td></tr></table></figure></p>
<p>再次从user中选择user、host、plugin 这三列，发现最后一行plugin变成 <code>mysql_native_password</code> 就成功了:<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">user</span>             <span class="operator">|</span> host      <span class="operator">|</span> plugin                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> debian<span class="operator">-</span>sys<span class="operator">-</span>maint <span class="operator">|</span> localhost <span class="operator">|</span> caching_sha2_password <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql.infoschema <span class="operator">|</span> localhost <span class="operator">|</span> caching_sha2_password <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql.session    <span class="operator">|</span> localhost <span class="operator">|</span> caching_sha2_password <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql.sys        <span class="operator">|</span> localhost <span class="operator">|</span> caching_sha2_password <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> root             <span class="operator">|</span> localhost <span class="operator">|</span> mysql_native_password <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------+-----------------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></p>
<p>退出后可以通过密码的方式登录数据库:<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">exit; <span class="comment">-- 退出</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p <span class="comment"># 以root身份用密码登录mysql</span></span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://blog.csdn.net/LogosTR_/article/details/125602116">https://blog.csdn.net/LogosTR_/article/details/125602116</a></li>
<li><a href="https://www.runoob.com/mysql/mysql-install.html">https://www.runoob.com/mysql/mysql-install.html</a></li>
</ol>
]]></content>
      <tags>
        <tag>MySQL学习</tag>
      </tags>
  </entry>
  <entry>
    <title>第1节 Linux下MySQL Workbench环境配置</title>
    <url>/2024/06/09/MySQL%E5%AD%A6%E4%B9%A0/%E7%AC%AC1%E8%8A%82-Linux%E4%B8%8BMySQL-Workbench%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="0-前置内容"><a href="#0-前置内容" class="headerlink" title="0. 前置内容"></a>0. 前置内容</h2><ol>
<li>上一节文章地址: <a href="https://marine-rubbish.github.io/2024/06/09/MySQL%E5%AD%A6%E4%B9%A0/%E7%AC%AC0%E8%8A%82-Linux%E4%B8%8BMySQL%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/">https://marine-rubbish.github.io/2024/06/09/MySQL%E5%AD%A6%E4%B9%A0/%E7%AC%AC0%E8%8A%82-Linux%E4%B8%8BMySQL%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</a></li>
<li>本来想配置 MySQL Administrator 和 MySQL Query Browser 的。但是据说过时了，于是配 Workbench 。</li>
</ol>
<h2 id="1-安装-Unfinished"><a href="#1-安装-Unfinished" class="headerlink" title="1. 安装 (Unfinished)"></a>1. 安装 (Unfinished)</h2><p>访问安装包下载地址: <a href="https://dev.mysql.com/downloads/workbench/">https://dev.mysql.com/downloads/workbench/</a></p>
<p>这里选择下载Ubuntu 23.10版本的:<br><img src="./img1_1.jpg" alt="Workbench 官网" title="Workbench 官网"></p>
<p>通过 <code>dpkg</code> 命令下载 <code>.deb</code> 安装包:<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i ~/下载/mysql-workbench-community_8.0.36-1ubuntu23.10_amd64.deb</span><br></pre></td></tr></table></figure></p>
<p>如果中间有依赖报错，可以用以下命令安装依赖:<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt -f install <span class="comment"># -f 参数代表 --fix-broken，尝试修复依赖导致的问题</span></span><br></pre></td></tr></table></figure></p>
<p>因为Ubuntu版本太新了，没有对应24.04版本的workbench，只能咕咕咕了。</p>
<h2 id="2-使用-Unfinished"><a href="#2-使用-Unfinished" class="headerlink" title="2. 使用 (Unfinished)"></a>2. 使用 (Unfinished)</h2>]]></content>
      <tags>
        <tag>MySQL学习</tag>
      </tags>
  </entry>
  <entry>
    <title>第2节 数据库操作</title>
    <url>/2024/06/09/MySQL%E5%AD%A6%E4%B9%A0/%E7%AC%AC2%E8%8A%82-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="0-SQL通用语法分类"><a href="#0-SQL通用语法分类" class="headerlink" title="0. SQL通用语法分类"></a>0. SQL通用语法分类</h2><ul>
<li>DDL: 数据定义语言，用来定义数据库对象（数据库、表、字段）</li>
<li>DML: 数据操作语言，用来对数据库表中的数据进行增删改</li>
<li>DQL: 数据查询语言，用来查询数据库中表的记录</li>
<li>DCL: 数据控制语言，用来创建数据库用户、控制数据库的控制权限</li>
</ul>
<h2 id="1-查询所有数据库"><a href="#1-查询所有数据库" class="headerlink" title="1. 查询所有数据库"></a>1. 查询所有数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> DATABASES;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sys                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br></pre></td></tr></table></figure>
<h2 id="2-创建数据库"><a href="#2-创建数据库" class="headerlink" title="2. 创建数据库"></a>2. 创建数据库</h2><p>如果 <code>mydb</code> 数据库不存在，就创建一个名为 <code>mydb</code> 的数据库。</p>
<p>字符集指定为 <code>utf8mb4</code>，排序方式指定为 <code>utf8mb4_general_ci</code>。<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> mydb <span class="keyword">DEFAULT</span> CHARSET utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.07</span> sec)</span><br></pre></td></tr></table></figure>
<p>通过 <code>SHOW COLLATION;</code> 命令可以查询MySQL支持的所有排序规则<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+----------+-----+---------+----------+---------+---------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Collation</span>                   <span class="operator">|</span> Charset  <span class="operator">|</span> Id  <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Compiled <span class="operator">|</span> Sortlen <span class="operator">|</span> Pad_attribute <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+----------+-----+---------+----------+---------+---------------+</span></span><br><span class="line"><span class="operator">|</span> armscii8_bin                <span class="operator">|</span> armscii8 <span class="operator">|</span>  <span class="number">64</span> <span class="operator">|</span>         <span class="operator">|</span> Yes      <span class="operator">|</span>       <span class="number">1</span> <span class="operator">|</span> PAD SPACE     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> armscii8_general_ci         <span class="operator">|</span> armscii8 <span class="operator">|</span>  <span class="number">32</span> <span class="operator">|</span> Yes     <span class="operator">|</span> Yes      <span class="operator">|</span>       <span class="number">1</span> <span class="operator">|</span> PAD SPACE     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ascii_bin                   <span class="operator">|</span> ascii    <span class="operator">|</span>  <span class="number">65</span> <span class="operator">|</span>         <span class="operator">|</span> Yes      <span class="operator">|</span>       <span class="number">1</span> <span class="operator">|</span> PAD SPACE     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ascii_general_ci            <span class="operator">|</span> ascii    <span class="operator">|</span>  <span class="number">11</span> <span class="operator">|</span> Yes     <span class="operator">|</span> Yes      <span class="operator">|</span>       <span class="number">1</span> <span class="operator">|</span> PAD SPACE     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> big5_bin                    <span class="operator">|</span> big5     <span class="operator">|</span>  <span class="number">84</span> <span class="operator">|</span>         <span class="operator">|</span> Yes      <span class="operator">|</span>       <span class="number">1</span> <span class="operator">|</span> PAD SPACE     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>                                             ...                                             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> utf8mb4_zh_0900_as_cs       <span class="operator">|</span> utf8mb4  <span class="operator">|</span> <span class="number">308</span> <span class="operator">|</span>         <span class="operator">|</span> Yes      <span class="operator">|</span>       <span class="number">0</span> <span class="operator">|</span> <span class="keyword">NO</span> PAD        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+----------+-----+---------+----------+---------+---------------+</span></span><br><span class="line"><span class="number">286</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br></pre></td></tr></table></figure></p>
<h2 id="3-使用数据库"><a href="#3-使用数据库" class="headerlink" title="3. 使用数据库"></a>3. 使用数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">USE mydb;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Database changed</span><br></pre></td></tr></table></figure>
<h2 id="4-查询当前数据库"><a href="#4-查询当前数据库" class="headerlink" title="4. 查询当前数据库"></a>4. 查询当前数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DATABASE();</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="operator">|</span> DATABASE() <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="operator">|</span> mydb       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<h2 id="5-删除数据库"><a href="#5-删除数据库" class="headerlink" title="5. 删除数据库"></a>5. 删除数据库</h2><p>删除之前执行 <code>SHOW DATABASES</code> 命令的结果:<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mydb               <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sys                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure><br>删除命令<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE IF <span class="keyword">EXISTS</span> mydb;</span><br></pre></td></tr></table></figure></p>
<p>删除后的结果:<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.07</span> sec)</span><br></pre></td></tr></table></figure></p>
<p>删除后再执行 <code>SHOW DATABASES</code> 命令的结果:<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sys                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://jimhackking.github.io/%E8%BF%90%E7%BB%B4/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#%E8%BF%9B%E9%98%B6%E7%AF%87">MySQL学习笔记</a></li>
<li><a href="https://www.bilibili.com/video/BV1Kr4y1i7ru?p=6&amp;vd_source=88e862f4fe008fafb276ee0f35a385e7">黑马程序员 MySQL数据库入门到精通</a></li>
</ol>
]]></content>
      <tags>
        <tag>MySQL学习</tag>
      </tags>
  </entry>
  <entry>
    <title>第3节-表的创建和查询</title>
    <url>/2024/06/10/MySQL%E5%AD%A6%E4%B9%A0/%E7%AC%AC3%E8%8A%82-%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h2 id="1-查询表"><a href="#1-查询表" class="headerlink" title="1. 查询表"></a>1. 查询表</h2><p>查询 <code>sys</code> 数据库里的表:<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">USE sys;</span><br><span class="line"><span class="keyword">SHOW</span> TABLES;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_sys                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> host_summary                                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> host_summary_by_file_io                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> host_summary_by_file_io_type                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> host_summary_by_stages                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> host_summary_by_statement_latency             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>                    ...                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> x$waits_global_by_latency                     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+</span></span><br><span class="line"><span class="number">101</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure>
<h2 id="2-创建表"><a href="#2-创建表" class="headerlink" title="2. 创建表"></a>2. 创建表</h2><p>创建一个名为 <code>user_db</code> 的数据库，并且使用:<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> user_db;</span><br><span class="line">USE user_db;</span><br></pre></td></tr></table></figure></p>
<p>在 <code>user_db</code> 里创建一个表：</p>
<p>标准形式<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">    字段<span class="number">1</span> 字段<span class="number">1</span>类型 [COMMENT 字段<span class="number">1</span>注释],</span><br><span class="line">    字段<span class="number">2</span> 字段<span class="number">2</span>类型 [COMMENT 字段<span class="number">2</span>注释],</span><br><span class="line">    字段<span class="number">3</span> 字段<span class="number">3</span>类型 [COMMENT 字段<span class="number">3</span>注释],</span><br><span class="line">    ...</span><br><span class="line">    字段n 字段n类型 [COMMENT 字段n注释]</span><br><span class="line">)[ COMMENT 表注释 ];</span><br></pre></td></tr></table></figure></p>
<p>实际语句<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table1(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> id <span class="type">int</span> COMMENT &quot;编号&quot;,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> name <span class="type">varchar</span>(<span class="number">50</span>) COMMENT &quot;姓名&quot;,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> age <span class="type">int</span> COMMENT &quot;年龄&quot;,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> gender <span class="type">varchar</span>(<span class="number">1</span>) COMMENT &quot;性别&quot;</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> )COMMENT &quot;用户表&quot;;</span><br></pre></td></tr></table></figure></p>
<p>正常结果<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.07</span> sec)</span><br></pre></td></tr></table></figure></p>
<h2 id="3-查询表结构"><a href="#3-查询表结构" class="headerlink" title="3. 查询表结构"></a>3. 查询表结构</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DESC</span> table1;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field  <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> id     <span class="operator">|</span> <span class="type">int</span>         <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name   <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">50</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> age    <span class="operator">|</span> <span class="type">int</span>         <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> gender <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">1</span>)  <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>
<h2 id="4-查询创建表的语句"><a href="#4-查询创建表的语句" class="headerlink" title="4. 查询创建表的语句"></a>4. 查询创建表的语句</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table1;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Table</span>  <span class="operator">|</span> <span class="keyword">Create</span> <span class="keyword">Table</span>                                                                                                                                                                                                                                                                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> table1 <span class="operator">|</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `table1` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">  `age` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">  `gender` <span class="type">varchar</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;性别&#x27;</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci COMMENT<span class="operator">=</span><span class="string">&#x27;用户表&#x27;</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://jimhackking.github.io/%E8%BF%90%E7%BB%B4/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#%E8%BF%9B%E9%98%B6%E7%AF%87">MySQL学习笔记</a></li>
<li><a href="https://www.bilibili.com/video/BV1Kr4y1i7ru?p=6&amp;vd_source=88e862f4fe008fafb276ee0f35a385e7">黑马程序员 MySQL数据库入门到精通</a></li>
</ol>
]]></content>
      <tags>
        <tag>MySQL学习</tag>
      </tags>
  </entry>
  <entry>
    <title>The Missing Semester-Chap1</title>
    <url>/2023/12/12/The%20Missing%20Semester/Chap1/</url>
    <content><![CDATA[<h2 id="1-shell命令的实质"><a href="#1-shell命令的实质" class="headerlink" title="1. shell命令的实质"></a>1. shell命令的实质</h2><p>当你在 shell 中执行命令时，本质是在执行一段 shell 可以解释执行的简短代码。<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打印当前的日期和时间</span></span><br><span class="line"><span class="built_in">date</span></span><br><span class="line"><span class="comment"># 2023年 12月 12日 星期二 08:30:09 CST</span></span><br></pre></td></tr></table></figure><br>可以向程序传递参数。<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 把hello传给echo，打印到终端</span></span><br><span class="line"><span class="built_in">echo</span> hello</span><br><span class="line"><span class="comment"># hello</span></span><br></pre></td></tr></table></figure><br>如果你要求 shell 执行某个指令，但是该指令并不是 shell 所了解的编程关键字，<br>那么它会在 环境变量 $PATH 中查找该指令对应的程序。<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line"><span class="comment"># /usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/home/cpy/.local/bin:/home/cpy/bin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找echo位置</span></span><br><span class="line"><span class="built_in">which</span> <span class="built_in">echo</span></span><br><span class="line"><span class="comment"># /usr/bin/echo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 与echo $PATH等价</span></span><br><span class="line">/bin/echo <span class="variable">$PATH</span></span><br><span class="line"><span class="comment"># /usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/home/cpy/.local/bin:/home/cpy/bin</span></span><br></pre></td></tr></table></figure></p>
<h2 id="2-shell-中的路径"><a href="#2-shell-中的路径" class="headerlink" title="2. shell 中的路径"></a>2. shell 中的路径</h2><p>shell 中的路径是一组被分割的目录，在 Linux 和 macOS 上使用 / 分割，<br>而在Windows上是 \。路径 / 代表的是系统的根目录，所有的文件夹都包括在这个路径之下。</p>
<p>如果某个路径以 / 开头，那么它是一个绝对路径，其他的都是相对路径。</p>
<p>相对路径是指相对于当前工作目录的路径，当前工作目录可以使用 pwd 命令来获取。</p>
<p>此外，切换目录需要使用 cd 命令。在路径中，. 表示的是当前目录，而 .. 表示上级目录：<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br><span class="line"><span class="comment"># /home/cpy</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"><span class="comment"># /</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ./home</span><br><span class="line">/../bin/echo hello</span><br><span class="line"><span class="comment"># hello</span></span><br></pre></td></tr></table></figure></p>
<h2 id="3-一些常用的命令及常用用法"><a href="#3-一些常用的命令及常用用法" class="headerlink" title="3. 一些常用的命令及常用用法"></a>3. 一些常用的命令及常用用法</h2><h3 id="3-1-cd"><a href="#3-1-cd" class="headerlink" title="3.1 cd"></a>3.1 cd</h3><p>cd：改变当前工作目录到指定路径<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切换到home</span></span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到当且目录下的cpy子目录</span></span><br><span class="line"><span class="built_in">cd</span> ./cpy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到父目录</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切切换至用户家目录</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到上一次的工作目录</span></span><br><span class="line"><span class="built_in">cd</span> -</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"><span class="comment"># /</span></span><br></pre></td></tr></table></figure></p>
<h3 id="3-2-ls"><a href="#3-2-ls" class="headerlink" title="3.2 ls"></a>3.2 ls</h3><p>ls：显示指定工作目录下之内容<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="comment"># 打印当前目录下的内容</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="comment"># code               missing_semi  模板  图片  下载  桌面</span></span><br><span class="line"><span class="comment"># last-modified.txt  公共          视频  文档  音乐</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示指定工作目录下之内容</span></span><br><span class="line"><span class="built_in">ls</span> /</span><br><span class="line"><span class="comment"># bin   dev  home  lib64  mnt  proc  run   srv  tmp  var</span></span><br><span class="line"><span class="comment"># boot  etc  lib   media  opt  root  sbin  sys  usr  文档</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有文件信息，包括权限，所有者，大小和修改日期：</span></span><br><span class="line"><span class="built_in">ls</span> -l</span><br><span class="line"><span class="comment"># 总用量 4</span></span><br><span class="line"><span class="comment"># drwxr-xr-x. 4 cpy cpy 36 11月 12 23:45 code</span></span><br><span class="line"><span class="comment"># -rw-rw-r--. 1 cpy cpy 37 12月 12 00:21 last-modified.txt</span></span><br><span class="line"><span class="comment"># drwxrwxr-x. 2 cpy cpy 41 12月 11 22:15 missing_semi</span></span><br><span class="line"><span class="comment"># drwxr-xr-x. 2 cpy cpy  6 9月  20 2022 公共</span></span><br><span class="line"><span class="comment"># drwxr-xr-x. 2 cpy cpy  6 9月  20 2022 模板</span></span><br><span class="line"><span class="comment"># drwxr-xr-x. 2 cpy cpy  6 9月  20 2022 视频</span></span><br><span class="line"><span class="comment"># drwxr-xr-x. 2 cpy cpy  6 9月  20 2022 图片</span></span><br><span class="line"><span class="comment"># drwxr-xr-x. 2 cpy cpy  6 10月  4 2022 文档</span></span><br><span class="line"><span class="comment"># drwxr-xr-x. 2 cpy cpy  6 9月  20 2022 下载</span></span><br><span class="line"><span class="comment"># drwxr-xr-x. 2 cpy cpy  6 9月  20 2022 音乐</span></span><br><span class="line"><span class="comment"># drwxr-xr-x. 2 cpy cpy  6 9月  20 2022 桌面</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有隐藏文件信息</span></span><br><span class="line"><span class="built_in">ls</span> -a</span><br><span class="line"><span class="comment"># .              .bashrc  .esd_auth          .mozilla         公共  下载</span></span><br><span class="line"><span class="comment"># ..             .cache   .ICEauthority      .pki             模板  音乐</span></span><br><span class="line"><span class="comment"># .bash_history  code     last-modified.txt  .python_history  视频  桌面</span></span><br><span class="line"><span class="comment"># .bash_logout   .config  .local             .viminfo         图片</span></span><br><span class="line"><span class="comment"># .bash_profile  .dbus    missing_semi       .vscode          文档</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数组合</span></span><br><span class="line"><span class="built_in">ls</span> -la</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过管道符( | )配合tail命令获取最后一行的信息</span></span><br><span class="line"><span class="built_in">ls</span> -l | <span class="built_in">tail</span> -n1</span><br><span class="line"><span class="comment"># drwxr-xr-x.  2 cpy  cpy     6 9月  20 2022 桌面</span></span><br></pre></td></tr></table></figure><br>ls -l 命令显示的每行的前10个字符表示文件权限。<br>第一个字符如果是”d”表示是文件夹，如果是”-“表示是文件。</p>
<p>接下来的九个字符，每三个字符构成一组（rwx）。<br>它们分别代表了文件所有者（missing），用户组（users）以及其他所有人具有的权限。<br>“-“代表没有某种权限。</p>
<p>对文件来说，”r”代表可以读取文件，”w”代表可以向文件中写入，”x”表示这个文件可以被执行。</p>
<p>对文件夹来说，”r”代表可以查看文件夹中的内容，”w”代表可以在文件夹中创建、删除、重命名文件和文件夹，<br>“x”表示可以访问文件夹中的内容或进入该文件夹.</p>
<p>通过 cd 命令进入某文件夹，需要它和它各级父目录的”x”权限。</p>
<h3 id="3-3-mv"><a href="#3-3-mv" class="headerlink" title="3.3 mv"></a>3.3 mv</h3><p>mv：移动文件到任意位置<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 移动文件到任意位置（如果文件夹名称相同则和重命名效果一样）</span></span><br><span class="line"><span class="built_in">mv</span> 路径/到/来源 路径/到/目标</span><br></pre></td></tr></table></figure></p>
<h3 id="3-4-cp"><a href="#3-4-cp" class="headerlink" title="3.4 cp"></a>3.4 cp</h3><p>cp：复制文件到任意位置<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 复制一个文件到另外一个地方：</span></span><br><span class="line"><span class="built_in">cp</span> 文件的原始路径 文件的目标路径</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制一个文件到另外一个目录, 保持文件名不变：</span></span><br><span class="line"><span class="built_in">cp</span> 文件的原始路径 目标目录路径</span><br><span class="line"></span><br><span class="line"><span class="comment"># 递归的复制一个目录内的内容到另外一个地方（如果目标目录存在，目录被复制到目标目标内部）：</span></span><br><span class="line"><span class="built_in">cp</span> -r 目录的原始路径 目标目录路径</span><br></pre></td></tr></table></figure></p>
<h3 id="3-5-mkdir"><a href="#3-5-mkdir" class="headerlink" title="3.5 mkdir"></a>3.5 mkdir</h3><p>mkdir：创建一个空文件夹<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> ./test</span><br></pre></td></tr></table></figure></p>
<h3 id="3-6-rmdir"><a href="#3-6-rmdir" class="headerlink" title="3.6 rmdir"></a>3.6 rmdir</h3><p>rmdir：删除空文件夹<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除指定文件夹</span></span><br><span class="line"><span class="built_in">rmdir</span> ./test </span><br></pre></td></tr></table></figure></p>
<h3 id="3-7-rm"><a href="#3-7-rm" class="headerlink" title="3.7 rm"></a>3.7 rm</h3><p>rm：删除指定文件<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除指定文件</span></span><br><span class="line"><span class="built_in">rm</span> last-modified.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 递归删除某文件夹里的文件</span></span><br><span class="line"><span class="built_in">rm</span> -r ./missing_semi</span><br></pre></td></tr></table></figure></p>
<h2 id="4-在程序间创建连接"><a href="#4-在程序间创建连接" class="headerlink" title="4. 在程序间创建连接"></a>4. 在程序间创建连接</h2><p>在 shell 中，程序有两个主要的“流”：它们的输入流和输出流。 </p>
<p>当程序尝试读取信息时，它们会从输入流中进行读取，当程序打印信息时，它们会将信息输出到输出流中。</p>
<p>通常，一个程序的输入输出流都是您的终端。也就是，您的键盘作为输入，显示器作为输出。但是，我们也可以重定向这些流！</p>
<p>最简单的重定向是 &lt; file 和 &gt; file。这两个命令可以将程序的输入输出流分别重定向到文件：<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 把hello输出到hello.txt</span></span><br><span class="line"><span class="built_in">echo</span> hello &gt; hello.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从hello.txt读取数据输出到hello2.txt</span></span><br><span class="line"><span class="built_in">cat</span> &lt; hello.txt &gt; hello2.txt</span><br></pre></td></tr></table></figure></p>
<p>使用 &gt;&gt; 来向一个文件追加内容。<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt; hello.txt &gt;&gt; hello2.txt</span><br><span class="line"><span class="built_in">cat</span> hello2.txt</span><br><span class="line"><span class="comment"># hello</span></span><br><span class="line"><span class="comment"># hello</span></span><br></pre></td></tr></table></figure></p>
<p>使用管道（pipes），我们能够更好的利用文件重定向。| 操作符允许我们将一个程序的输出和另外一个程序的输入连接起来：<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 把ls的输出和tail的输入链接起来</span></span><br><span class="line"><span class="built_in">ls</span> -l / | <span class="built_in">tail</span> -n1</span><br></pre></td></tr></table></figure></p>
<h2 id="5-作业答案"><a href="#5-作业答案" class="headerlink" title="5. 作业答案"></a>5. 作业答案</h2><p>Q1: 本课程需要使用类Unix shell，例如 Bash 或 ZSH。如果您在 Linux 或者 MacOS 上面完成本课程的练习，则不需要做任何特殊的操作。<br>如果您使用的是 Windows，则您不应该使用 cmd 或是 Powershell；您可以使用Windows Subsystem for Linux或者是 Linux 虚拟机。<br>使用echo $SHELL命令可以查看您的 shell 是否满足要求。如果打印结果为/bin/bash或/usr/bin/zsh则是可以的。</p>
<p>按要求输入echo $SHELL命令即可。</p>
<p>Q2: 在 /tmp 下新建一个名为 missing 的文件夹。<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /tmp/missing</span><br></pre></td></tr></table></figure></p>
<p>Q3：用 man 查看程序 touch 的使用手册。<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">man <span class="built_in">touch</span></span><br></pre></td></tr></table></figure></p>
<p>Q4：用 touch 在 missing 文件夹中新建一个叫 semester 的文件。<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp/missing</span><br><span class="line"><span class="built_in">touch</span> semester</span><br></pre></td></tr></table></figure></p>
<p>Q5：将以下内容一行一行地写入 semester 文件：<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">curl --<span class="built_in">head</span> --silent https://missing.csail.mit.edu</span><br></pre></td></tr></table></figure><br>第一行可能有点棘手，# 在Bash中表示注释，而 ! 即使被双引号（”）包裹也具有特殊的含义。<br>单引号（’）则不一样，此处利用这一点解决输入问题。更多信息请参考 Bash quoting 手册</p>
<p>因为访问不上这个网址，于是我改成了访问百度。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 注意字符串需要用单引号包裹</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;#!/bin/sh&#x27;</span> &gt; semester</span><br><span class="line"><span class="comment"># 注意追加是用&gt;&gt;号在文件最后添加语句</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;curl --head --silent www.baidu.com&#x27;</span> &gt;&gt; semester</span><br></pre></td></tr></table></figure>
<p>Q6：尝试执行这个文件。例如，将该脚本的路径（./semester）输入到您的shell中并回车。如果程序无法执行，请使用 ls 命令来获取信息并理解其不能执行的原因。</p>
<p>输入ls -l查看文件权限发现，semester没有执行（x）权限<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l</span><br><span class="line"><span class="comment"># -rw-rw-r--. 1 cpy cpy 49 12月 12 00:04 semester</span></span><br></pre></td></tr></table></figure></p>
<p>Q7：查看 chmod 的手册(例如，使用 man chmod 命令)</p>
<p>输入man chmod 命令即可</p>
<p>Q8：使用 chmod 命令改变权限，使 ./semester 能够成功执行，不要使用 sh semester 来执行该程序。<br>您的 shell 是如何知晓这个文件需要使用 sh 来解析呢？更多信息请参考：shebang<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 给所有用户都增加执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x ./semester</span><br><span class="line"><span class="comment"># 执行代码</span></span><br><span class="line">./semester</span><br></pre></td></tr></table></figure></p>
<p>Q9：使用 | 和 &gt; ，将 semester 文件输出的最后更改日期信息，写入主目录下的 last-modified.txt 的文件中<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建文件</span></span><br><span class="line"><span class="built_in">touch</span> ~/last-modified.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从 semester 文件输出筛选最后更改日期信息</span></span><br><span class="line"><span class="comment"># 重定向输出流到last-modified.txt</span></span><br><span class="line">./semester | grep -i <span class="string">&quot;Date&quot;</span> &gt; /home/last-modified.txt</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>The Missing Semester</tag>
      </tags>
  </entry>
  <entry>
    <title>Chap2</title>
    <url>/2024/03/24/The%20Missing%20Semester/Chap2/</url>
    <content><![CDATA[<h2 id="1-作业答案"><a href="#1-作业答案" class="headerlink" title="1. 作业答案"></a>1. 作业答案</h2><p>Q1: 阅读 man ls ，然后使用ls 命令进行如下操作：</p>
<ul>
<li>列出所有文件信息：-l</li>
<li>所有文件（包括隐藏文件） ：-a</li>
<li>文件打印以人类可以理解的格式输出 (例如，使用454M 而不是 454279954) : -h</li>
<li>文件以最近访问顺序排序：-t</li>
<li>以彩色文本显示输出结果：—color=auto</li>
</ul>
<p>典型输出如下：<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">-rw-r--r--   1 user group 1.1M Jan 14 09:53 baz</span><br><span class="line">drwxr-xr-x   5 user group  160 Jan 14 09:53 .</span><br><span class="line">-rw-r--r--   1 user group  514 Jan 14 06:42 bar</span><br><span class="line">-rw-r--r--   1 user group 106M Jan 13 12:12 foo</span><br><span class="line">drwx------+ 47 user group 1.5K Jan 12 18:08 ..</span><br></pre></td></tr></table></figure></p>
<p>A:<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -lhat --color=auto</span><br></pre></td></tr></table></figure></p>
<p>Q2: 编写两个bash函数 marco 和 polo 执行下面的操作。每当你执行 marco 时，当前的工作目录应当以某种形式保存，当执行 polo 时，无论现在处在什么目录下，都应当 cd 回到当时执行 marco 的目录。为了方便debug，你可以把代码写在单独的文件 marco.sh 中，并通过 source marco.sh命令，（重新）加载函数。</p>
<p>A:</p>
]]></content>
      <tags>
        <tag>The Missing Semester</tag>
      </tags>
  </entry>
  <entry>
    <title>matlab第四次作业</title>
    <url>/2022/05/04/matlab%E4%BD%9C%E4%B8%9A/matlab%E7%AC%AC%E5%9B%9B%E6%AC%A1%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<h2 id="第一题代码"><a href="#第一题代码" class="headerlink" title="第一题代码"></a>第一题代码</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">a=input(<span class="string">&#x27;输入三角形的一条边 &#x27;</span>);</span><br><span class="line">b=input(<span class="string">&#x27;输入三角形的一条边 &#x27;</span>);</span><br><span class="line">c=input(<span class="string">&#x27;输入三角形的一条边 &#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(a&gt;<span class="number">0</span>&amp;&amp;b&gt;<span class="number">0</span>&amp;&amp;c&gt;<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span>((a+b&gt;c)&amp;&amp;(a+c&gt;b)&amp;&amp;(b+c&gt;a))</span><br><span class="line">        p=(a+b+c)/<span class="number">2</span>;</span><br><span class="line">        s=<span class="built_in">sqrt</span>(p*(p-a)*(p-b)*(p-c));</span><br><span class="line">        fprintf(<span class="string">&#x27;三角形面积为%f\n&#x27;</span>,s);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        fprintf(<span class="string">&#x27;不能构成一个三角形\n&#x27;</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    fprintf(<span class="string">&#x27;不能构成一个三角形\n&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="第二题代码"><a href="#第二题代码" class="headerlink" title="第二题代码"></a>第二题代码</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">n=input(<span class="string">&#x27;输入一个数n &#x27;</span>);</span><br><span class="line">sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> ii=<span class="number">1</span>:n</span><br><span class="line">    sum=sum+ii;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">sum</span><br></pre></td></tr></table></figure>
<h2 id="第三题代码"><a href="#第三题代码" class="headerlink" title="第三题代码"></a>第三题代码</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res</span>=<span class="title">myfactorial</span><span class="params">(n)</span></span></span><br><span class="line">res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> n==<span class="number">1</span></span><br><span class="line">    res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    res=myfactorial(n<span class="number">-1</span>)*n;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="第四题代码"><a href="#第四题代码" class="headerlink" title="第四题代码"></a>第四题代码</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a=input(<span class="string">&#x27;输入一个数a &#x27;</span>);</span><br><span class="line">b=input(<span class="string">&#x27;输入一个数b &#x27;</span>);</span><br><span class="line">t=a;</span><br><span class="line">a=b;</span><br><span class="line">b=t;</span><br><span class="line">fprintf(<span class="string">&#x27;a=%d\n&#x27;</span>,a);</span><br><span class="line">fprintf(<span class="string">&#x27;b=%d\n&#x27;</span>,b);</span><br></pre></td></tr></table></figure>
<h2 id="第五题代码"><a href="#第五题代码" class="headerlink" title="第五题代码"></a>第五题代码</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">a=input(<span class="string">&#x27;输入二次项系数a &#x27;</span>);</span><br><span class="line">b=input(<span class="string">&#x27;输入一次项系数b &#x27;</span>);</span><br><span class="line">c=input(<span class="string">&#x27;输入常数c &#x27;</span>);</span><br><span class="line">r=roots([a b c]);</span><br><span class="line"><span class="built_in">disp</span>(r);</span><br></pre></td></tr></table></figure>
<h2 id="第六题代码"><a href="#第六题代码" class="headerlink" title="第六题代码"></a>第六题代码</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[r,theta]</span>=<span class="title">Coord_Trans</span><span class="params">(x,y)</span></span></span><br><span class="line">r=<span class="built_in">sqrt</span>(x*x+y*y);</span><br><span class="line">theta=<span class="built_in">atan</span>(y/x);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="第七题代码"><a href="#第七题代码" class="headerlink" title="第七题代码"></a>第七题代码</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">n=input(<span class="string">&#x27;学生成绩: &#x27;</span>);</span><br><span class="line"><span class="keyword">switch</span> <span class="built_in">floor</span>(n/<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">case</span> &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line">        <span class="built_in">disp</span>(<span class="string">&#x27;不及格&#x27;</span>);</span><br><span class="line">    <span class="keyword">case</span> &#123;<span class="number">6</span>,<span class="number">7</span>&#125;</span><br><span class="line">        <span class="built_in">disp</span>(<span class="string">&#x27;及格&#x27;</span>);</span><br><span class="line">    <span class="keyword">case</span> &#123;<span class="number">8</span>&#125;</span><br><span class="line">        <span class="built_in">disp</span>(<span class="string">&#x27;良好&#x27;</span>);</span><br><span class="line">    <span class="keyword">case</span> &#123;<span class="number">9</span>,<span class="number">10</span>&#125;</span><br><span class="line">        <span class="built_in">disp</span>(<span class="string">&#x27;优秀&#x27;</span>);</span><br><span class="line">    <span class="keyword">otherwise</span></span><br><span class="line">        <span class="built_in">disp</span>(<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="第八题代码"><a href="#第八题代码" class="headerlink" title="第八题代码"></a>第八题代码</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">a=<span class="number">1</span>;b=<span class="number">1</span>;c=<span class="number">2</span>;n=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">while</span> c&lt;=<span class="number">500</span></span><br><span class="line">    c=a+b;</span><br><span class="line">    <span class="comment">%fprintf(&#x27;%d %d\n&#x27;,a,b);</span></span><br><span class="line">    a=b;</span><br><span class="line">    b=c;</span><br><span class="line">    n=n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&quot;%d %d\n&quot;</span>,c,n);</span><br></pre></td></tr></table></figure>
<h2 id="第九题代码"><a href="#第九题代码" class="headerlink" title="第九题代码"></a>第九题代码</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">n=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span>];</span><br><span class="line">buf=n;</span><br><span class="line"><span class="keyword">for</span> ii=<span class="number">1</span>:<span class="number">5</span></span><br><span class="line">    cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> (cnt~=<span class="number">0</span>&amp;&amp;n(ii)==<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">mod</span>(n(ii),<span class="number">2</span>)==<span class="number">0</span></span><br><span class="line">                n(ii)=n(ii)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                n(ii)=n(ii)*<span class="number">3</span>+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            cnt=cnt+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    fprintf(<span class="string">&#x27;%d经过%d步变为1\n&#x27;</span>,buf(ii),cnt);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>matlab作业</tag>
      </tags>
  </entry>
  <entry>
    <title>242. 一个简单的整数问题</title>
    <url>/2022/04/18/%E4%BB%A3%E7%A0%81%E6%89%93%E5%8D%A1/242-%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%95%B4%E6%95%B0%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn=<span class="number">1e5</span>+<span class="number">1</span>; </span><br><span class="line">ll a[maxn],tree[maxn],n,m,l,r,k;</span><br><span class="line"><span class="type">char</span> op[<span class="number">2</span>];</span><br><span class="line"><span class="function">ll <span class="title">lowbit</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;-x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(ll x,ll k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[x]+=k;</span><br><span class="line">        x+=<span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">getsum</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)</span><br><span class="line">    &#123;</span><br><span class="line">        res+=tree[x];</span><br><span class="line">        x-=<span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,a+i);</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,op);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(op,<span class="string">&quot;Q&quot;</span>)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;l);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,a[l]+<span class="built_in">getsum</span>(l));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(op,<span class="string">&quot;C&quot;</span>)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>,&amp;l,&amp;r,&amp;k);</span><br><span class="line">            <span class="built_in">add</span>(l,k);<span class="built_in">add</span>(r+<span class="number">1</span>,-k);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>代码打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>243. 一个简单的整数问题2</title>
    <url>/2022/04/18/%E4%BB%A3%E7%A0%81%E6%89%93%E5%8D%A1/243-%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%95%B4%E6%95%B0%E9%97%AE%E9%A2%982/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn =<span class="number">1e5</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line">ll d[<span class="number">4</span>*maxn],b[<span class="number">4</span>*maxn],a[maxn],n,m,l,r,k;</span><br><span class="line">string op;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(ll s,ll t,ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll mid=(t+s)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(s==t)</span><br><span class="line">    &#123;</span><br><span class="line">        d[p]=a[s];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(s,mid,p*<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">build</span>(mid+<span class="number">1</span>,t,p*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">    d[p]=d[p*<span class="number">2</span>]+d[p*<span class="number">2</span>+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(ll s,ll t,ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll m=(s+t)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(b[p])</span><br><span class="line">    &#123;</span><br><span class="line">        d[p*<span class="number">2</span>]+=(m-s+<span class="number">1</span>)*b[p];</span><br><span class="line">        d[p*<span class="number">2</span>+<span class="number">1</span>]+=(t-m)*b[p];</span><br><span class="line">        b[p*<span class="number">2</span>+<span class="number">1</span>]+=b[p];b[p*<span class="number">2</span>]+=b[p];</span><br><span class="line">        b[p]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(ll l,ll r,ll c,ll s,ll t,ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll mid=(s+t)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=s&amp;&amp;t&lt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        d[p]+=(t-s+<span class="number">1</span>)*c;</span><br><span class="line">        b[p]+=c;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(s,t,p);</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=mid)</span><br><span class="line">        <span class="built_in">add</span>(l,r,c,s,mid,p*<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(r&gt;mid)</span><br><span class="line">        <span class="built_in">add</span>(l,r,c,mid+<span class="number">1</span>,t,p*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">    d[p]=d[p*<span class="number">2</span>]+d[p*<span class="number">2</span>+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">getsum</span><span class="params">(ll l,ll r,ll s,ll t,ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=s&amp;&amp;t&lt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> d[p];</span><br><span class="line">    &#125;</span><br><span class="line">    ll mid=(s+t)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">pushdown</span>(s,t,p);</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=mid)</span><br><span class="line">        res+=<span class="built_in">getsum</span>(l,r,s,mid,p*<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(r&gt;mid)</span><br><span class="line">        res+=<span class="built_in">getsum</span>(l,r,mid+<span class="number">1</span>,t,p*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span> (m -- )</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;op;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="string">&quot;Q&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;l,&amp;r);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">getsum</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>,&amp;l,&amp;r,&amp;k);</span><br><span class="line">            <span class="built_in">add</span>(l,r,k,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>代码打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>AcWing 89. a^b</title>
    <url>/2022/04/16/%E4%BB%A3%E7%A0%81%E6%89%93%E5%8D%A1/89.%20a%5Eb/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line">ll a,b,p;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a,ll b,ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">            res=(res*a)%p;</span><br><span class="line">        a=(a*a)%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b&gt;&gt;p;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">qpow</span>(a,b,p)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>代码打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>90. 64位整数乘法</title>
    <url>/2022/04/16/%E4%BB%A3%E7%A0%81%E6%89%93%E5%8D%A1/90-64%E4%BD%8D%E6%95%B4%E6%95%B0%E4%B9%98%E6%B3%95/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line">ll a,b,p;</span><br><span class="line"><span class="function">ll <span class="title">qmul</span><span class="params">(ll a,ll b,ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">            res=(res+a)%p;</span><br><span class="line">        a=(a*<span class="number">2</span>)%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; a&gt;&gt;b&gt;&gt;p;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">qmul</span>(a,b,p)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>代码打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>91. 最短Hamilton路径</title>
    <url>/2022/04/16/%E4%BB%A3%E7%A0%81%E6%89%93%E5%8D%A1/91-%E6%9C%80%E7%9F%ADHamilton%E8%B7%AF%E5%BE%84/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> w[N][N];</span><br><span class="line"><span class="type">int</span> f[<span class="number">1</span>&lt;&lt;N][N],n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;w[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="built_in">sizeof</span>(f));</span><br><span class="line">    f[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; (<span class="number">1</span>&lt;&lt;n); i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i&gt;&gt;j&amp;<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(i-(<span class="number">1</span>&lt;&lt;j)&gt;&gt;k&amp;<span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        f[i][j]=<span class="built_in">min</span>(f[i-(<span class="number">1</span>&lt;&lt;j)][k]+w[k][j],f[i][j]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;f[(<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>][n<span class="number">-1</span>]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>代码打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>92. 递归实现指数型枚举</title>
    <url>/2022/04/17/%E4%BB%A3%E7%A0%81%E6%89%93%E5%8D%A1/92-%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E6%8C%87%E6%95%B0%E5%9E%8B%E6%9E%9A%E4%B8%BE/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[<span class="number">16</span>],vis[<span class="number">16</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">        a[i]=i+<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> state;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(state=<span class="number">1</span>;state&lt;(<span class="number">1</span>&lt;&lt;n);state++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;n; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((state&gt;&gt;j)&amp;<span class="number">1</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>代码打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>93. 递归实现组合型枚举</title>
    <url>/2022/04/17/%E4%BB%A3%E7%A0%81%E6%89%93%E5%8D%A1/93-%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E7%BB%84%E5%90%88%E5%9E%8B%E6%9E%9A%E4%B8%BE/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> ans[<span class="number">50</span>],vis[<span class="number">50</span>];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> cnt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ans[cnt]=u;</span><br><span class="line">    vis[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(cnt==m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ans[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        vis[u]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=u+<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">            <span class="built_in">dfs</span>(i,cnt+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    vis[u]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        <span class="built_in">dfs</span>(i,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>代码打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>94. 递归实现排列型枚举</title>
    <url>/2022/04/17/%E4%BB%A3%E7%A0%81%E6%89%93%E5%8D%A1/94-%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E6%8E%92%E5%88%97%E5%9E%8B%E6%9E%9A%E4%B8%BE/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,a[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        a[i]=i;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">while</span>(<span class="built_in">next_permutation</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>代码打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>95. 费解的开关</title>
    <url>/2022/04/17/%E4%BB%A3%E7%A0%81%E6%89%93%E5%8D%A1/95-%E8%B4%B9%E8%A7%A3%E7%9A%84%E5%BC%80%E5%85%B3/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">char</span> g[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> n,t;</span><br><span class="line"><span class="type">int</span> dx[]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">turn</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> xx=x+dx[i];</span><br><span class="line">        <span class="type">int</span> yy=y+dy[i];</span><br><span class="line">        <span class="keyword">if</span>(xx&gt;=<span class="number">0</span>&amp;&amp;xx&lt;<span class="number">5</span>&amp;&amp;yy&gt;=<span class="number">0</span>&amp;&amp;yy&lt;<span class="number">5</span>)</span><br><span class="line">            g[xx][yy]^=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        cout &lt;&lt; g[i]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">work</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;(<span class="number">1</span>&lt;&lt;<span class="number">5</span>);k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> buf[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line">        <span class="built_in">memcpy</span>(buf,g,<span class="built_in">sizeof</span>(g));</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((k&gt;&gt;i)&amp;<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                res++;</span><br><span class="line">                <span class="built_in">turn</span>(<span class="number">0</span>,i);</span><br><span class="line">                <span class="comment">// print();</span></span><br><span class="line">                <span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(g[i][j]==<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    res++;</span><br><span class="line">                    <span class="built_in">turn</span>(i+<span class="number">1</span>,j);</span><br><span class="line">                    <span class="comment">// print();</span></span><br><span class="line">                    <span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">bool</span> ok=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(g[<span class="number">4</span>][i]==<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ok=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;res&lt;&lt;&quot; 01 &quot;&lt;&lt;ok&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">//print();</span></span><br><span class="line">        <span class="keyword">if</span>(ok)</span><br><span class="line">            ans=<span class="built_in">min</span>(ans,res);</span><br><span class="line">        <span class="built_in">memcpy</span>(g,buf,<span class="built_in">sizeof</span>(g));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; ans&lt;&lt;&quot; &quot;&lt;&lt;res&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span>(ans&gt;<span class="number">6</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">            cin&gt;&gt;g[i];</span><br><span class="line">        <span class="comment">// print();</span></span><br><span class="line">        <span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">        cout &lt;&lt; <span class="built_in">work</span>()&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>代码打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>96. 奇怪的汉诺塔</title>
    <url>/2022/04/17/%E4%BB%A3%E7%A0%81%E6%89%93%E5%8D%A1/96-%E5%A5%87%E6%80%AA%E7%9A%84%E6%B1%89%E8%AF%BA%E5%A1%94/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> d[<span class="number">15</span>],f[<span class="number">15</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    d[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">12</span>;i++)</span><br><span class="line">        d[i]=d[i<span class="number">-1</span>]*<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="built_in">sizeof</span>(f));</span><br><span class="line">    f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">12</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i]=<span class="built_in">min</span>(f[i],f[j]*<span class="number">2</span>+d[i-j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">12</span>; i ++ )</span><br><span class="line">        cout &lt;&lt; f[i]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>代码打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>97. 约数之和</title>
    <url>/2022/04/20/%E4%BB%A3%E7%A0%81%E6%89%93%E5%8D%A1/97.%20%E7%BA%A6%E6%95%B0%E4%B9%8B%E5%92%8C/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod =<span class="number">9901</span>; </span><br><span class="line">ll a,b,ans;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,ll k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    x%=mod;</span><br><span class="line">    <span class="keyword">while</span>(k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">            res=(res*x)%mod;</span><br><span class="line">        x=(x*x)%mod;</span><br><span class="line">        k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">sum</span><span class="params">(ll p,ll k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(k%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> (p%mod*<span class="built_in">sum</span>(p,k<span class="number">-1</span>)+<span class="number">1</span>)%mod;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">return</span> (<span class="number">1</span>+<span class="built_in">qpow</span>(p,k/<span class="number">2</span>+<span class="number">1</span>))*<span class="built_in">sum</span>(p,k/<span class="number">2</span>)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt;b;</span><br><span class="line">    ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=a;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(a%i==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            a/=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cnt)</span><br><span class="line">            ans=ans*<span class="built_in">sum</span>(i,cnt*b)%mod;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;a&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!a)</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>代码打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown笔记1</title>
    <url>/2022/04/14/%E5%B0%8F%E6%8A%80%E5%B7%A7/Markdown%E7%AC%94%E8%AE%B01/</url>
    <content><![CDATA[<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><pre><code>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。
类 Setext形式使用 = 和 - 标记一级和二级标题；类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶。
</code></pre><h2 id="类-Setext形式示例"><a href="#类-Setext形式示例" class="headerlink" title="类 Setext形式示例"></a>类 Setext形式示例</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一级标题</span><br><span class="line">=================</span><br><span class="line"></span><br><span class="line">二级标题</span><br><span class="line">-----------------</span><br></pre></td></tr></table></figure>
<p>效果如下所示：  </p>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h2 id="类-Atx-形式示例"><a href="#类-Atx-形式示例" class="headerlink" title="类 Atx 形式示例"></a>类 Atx 形式示例</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># h1</span><br><span class="line">## h2</span><br><span class="line">### h3</span><br><span class="line">#### h4</span><br><span class="line">##### h5</span><br><span class="line">###### h6</span><br></pre></td></tr></table></figure>
<p>效果如下所示：</p>
<h1 id="h1"><a href="#h1" class="headerlink" title="h1"></a>h1</h1><h2 id="h2"><a href="#h2" class="headerlink" title="h2"></a>h2</h2><h3 id="h3"><a href="#h3" class="headerlink" title="h3"></a>h3</h3><h4 id="h4"><a href="#h4" class="headerlink" title="h4"></a>h4</h4><h5 id="h5"><a href="#h5" class="headerlink" title="h5"></a>h5</h5><h6 id="h6"><a href="#h6" class="headerlink" title="h6"></a>h6</h6><h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><pre><code>VSCode 可以用Ctrl+Shift+V快捷键来对md文件进行预览
不同的 Markdown 应用程序处理 # 和标题之间的空格方式并不一致。为了兼容考虑，请用一个空格在 # 和标题之间进行分隔。
</code></pre><h2 id="参考资料与文献"><a href="#参考资料与文献" class="headerlink" title="参考资料与文献"></a>参考资料与文献</h2><p>1、<a href="https://www.w3cschool.cn/markdownyfsm/ysu1e1.html">https://www.w3cschool.cn/markdownyfsm/ysu1e1.html</a>  </p>
<p>2、<a href="https://www.runoob.com/markdown/md-paragraph.html">https://www.runoob.com/markdown/md-paragraph.html</a>  </p>
<p>3、<a href="https://markdown.com.cn/cheat-sheet.html">https://markdown.com.cn/cheat-sheet.html</a></p>
]]></content>
      <tags>
        <tag>Markdown笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown笔记2</title>
    <url>/2022/04/14/%E5%B0%8F%E6%8A%80%E5%B7%A7/Markdown%E7%AC%94%E8%AE%B02/</url>
    <content><![CDATA[<h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><pre><code>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。
Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。
</code></pre><h2 id="段落换行示例"><a href="#段落换行示例" class="headerlink" title="段落换行示例"></a>段落换行示例</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这是第一段的第一行  </span><br><span class="line"></span><br><span class="line">这是第一段的第二行  </span><br><span class="line"></span><br><span class="line">这是第二段的第一行  </span><br><span class="line"></span><br><span class="line">这是第二段的第二行  </span><br></pre></td></tr></table></figure>
<p>最终效果如下：  </p>
<p>这是第一段的第一行<br>这是第一段的第二行  </p>
<p>这是第二段的第一行<br>这是第二段的第二行  </p>
<h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><pre><code>可以使用以下字体
</code></pre><h2 id="字体示例"><a href="#字体示例" class="headerlink" title="字体示例"></a>字体示例</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*斜体文本*</span><br><span class="line">_斜体文本_</span><br><span class="line">**粗体文本**</span><br><span class="line">__粗体文本__</span><br><span class="line">***粗斜体文本***</span><br><span class="line">___粗斜体文本___</span><br></pre></td></tr></table></figure>
<p>效果如下：<br><em>斜体文本</em><br>_斜体文本_<br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong><br><strong>_粗斜体文本_</strong></p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><pre><code>Markdown 应用程序在如何处理单词或短语中间的下划线上并不一致。为兼容考虑，在单词或短语中间部分加粗的话，请使用星号（asterisks）。
Markdown 应用程序在处理单词或短语中间添加的下划线上并不一致。为了实现兼容性，请使用星号将单词或短语的中间部分加粗并以斜体显示，以示重要。
要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。
</code></pre><p>例如：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Love**is**bold √    Love__is__bold ×  </span><br><span class="line">A*cat*meow √    A_cat_meow ×</span><br><span class="line">This is really***very***important text. √    This is really___very___important text. ×</span><br></pre></td></tr></table></figure></p>
<p>实际效果<br>Love<strong>is</strong>bold √    Love<strong>is</strong>bold ×<br>A<em>cat</em>meow √    A_cat_meow ×<br>This is really<strong><em>very</em></strong>important text. √    This is really<strong>_very_</strong>important text. ×</p>
]]></content>
      <tags>
        <tag>Markdown笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>lower_bound的小技巧</title>
    <url>/2022/05/21/%E5%B0%8F%E6%8A%80%E5%B7%A7/lower-bound%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h2 id="契机"><a href="#契机" class="headerlink" title="契机"></a>契机</h2><p>在做导弹拦截这题的时候发现自己不太会用lower_bound和upper_bound,所以写一篇文章备忘。  </p>
<h2 id="常规用法"><a href="#常规用法" class="headerlink" title="常规用法"></a>常规用法</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//以下都需要在不下降序列中用</span></span><br><span class="line"><span class="built_in">lower_bound</span>(f,f+n,a[i]); <span class="comment">//返回f中大于等于a[i]的第一个数</span></span><br><span class="line"><span class="built_in">upper_bound</span>(f,f+n,a[i]); <span class="comment">//返回f中大于a[i]的第一个数</span></span><br></pre></td></tr></table></figure>
<h2 id="在不上升序列中用"><a href="#在不上升序列中用" class="headerlink" title="在不上升序列中用"></a>在不上升序列中用</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">lower_bound</span>(f,f+n,a[i],<span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;()); <span class="comment">//返回f中大于等于a[i]的第一个数</span></span><br><span class="line"><span class="built_in">upper_bound</span>(f,f+n,a[i]，<span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;()); <span class="comment">//返回f中大于a[i]的第一个数</span></span><br><span class="line"><span class="comment">//当然greater也可以换成自己写的比较函数</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>第一章</title>
    <url>/2022/04/23/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AE%97%E6%B3%95%E4%B8%8E%E5%BA%94%E7%94%A8%E4%B9%A0%E9%A2%98/%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
    <content><![CDATA[<h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><p>　　没啥好说的，直接用linprog干就完事。只要注意把maxz取负求最小值即可。大于等于的条件也要记得加负号。<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">c=[<span class="number">3</span> <span class="number">-1</span> <span class="number">-1</span>]&#x27;;</span><br><span class="line">a=[<span class="number">1</span> <span class="number">-2</span> <span class="number">1</span>;<span class="number">4</span> <span class="number">-1</span> <span class="number">-2</span>];</span><br><span class="line">b=[<span class="number">11</span>;<span class="number">-3</span>];</span><br><span class="line">aeq=[<span class="number">-2</span> <span class="number">0</span> <span class="number">1</span>];beq=<span class="number">1</span>;</span><br><span class="line">[x,fval]=linprog(-c,a,b,aeq,beq,<span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">1</span>));</span><br><span class="line">fval=-fval</span><br></pre></td></tr></table></figure><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">col/1..3/:c,x;</span><br><span class="line">row/1..2/:b;</span><br><span class="line">link(row,col):a;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">c=3 -1 1;</span><br><span class="line">a=1 -2 1 4 -1 -2;</span><br><span class="line">b=11 -3;</span><br><span class="line">enddata</span><br><span class="line">max=@sum(col:c*x);</span><br><span class="line">@for(row(i):@sum(col(j):a(i,j)*x(j))&lt;b(i));</span><br><span class="line">-2*x(1)+x(3)=1;</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
<h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p>　　只要注意把$\vert x \vert$变换为$u_i+v_i$，把$x$变换为$u_i-v_i$进行建模即可。<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">c=<span class="number">1</span>:<span class="number">4</span>;</span><br><span class="line">c=[c,c]&#x27;;</span><br><span class="line">aeq=[<span class="number">1</span> <span class="number">-1</span> <span class="number">-1</span> <span class="number">1</span>;<span class="number">1</span> <span class="number">-2</span> <span class="number">1</span> <span class="number">-3</span>;<span class="number">1</span> <span class="number">-1</span> <span class="number">-2</span> <span class="number">3</span>];</span><br><span class="line">beq=[<span class="number">0</span>;<span class="number">1</span>;<span class="number">-0.5</span>];</span><br><span class="line">aeq=[aeq,-aeq];</span><br><span class="line">[uv,fval]=linprog(c,[],[],aeq,beq,<span class="built_in">zeros</span>(<span class="number">8</span>,<span class="number">1</span>));</span><br><span class="line">x=uv(<span class="number">1</span>:<span class="number">4</span>)-uv(<span class="number">5</span>:<span class="number">8</span>)</span><br><span class="line">fval</span><br></pre></td></tr></table></figure><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">col/1..4/:c,x;</span><br><span class="line">row/1..3/:b;</span><br><span class="line">links(row,col):a;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">c=1 2 3 4;</span><br><span class="line">a=1 -1 -1 1 1 -1 1 -3 1 -1 -2 3;</span><br><span class="line">b=0 1 -0.5;</span><br><span class="line">enddata</span><br><span class="line">min=@sum(col:c*@abs(x));</span><br><span class="line">@for(row(i):@sum(col(j):a(i,j)*x(j))=b(i));</span><br><span class="line">@for(col:@free(x)); !x的值可正可负</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
<h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><p>　　这里我是用的非线性的优化函数fmincon，但是用线性优化函数再加上整数限制算可能更好。<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">f=@(x) -(x(<span class="number">1</span>)+x(<span class="number">2</span>)+<span class="number">1.65</span>*x(<span class="number">8</span>)+<span class="number">2.3</span>*x(<span class="number">9</span>)-(<span class="number">300</span>/<span class="number">6000</span>)*(<span class="number">5</span>*x(<span class="number">1</span>)+<span class="number">10</span>*x(<span class="number">6</span>))-(<span class="number">321</span>/<span class="number">10000</span>)*(<span class="number">7</span>*x(<span class="number">2</span>)+<span class="number">9</span>*x(<span class="number">7</span>)+<span class="number">12</span>*x(<span class="number">9</span>))-(<span class="number">250</span>/<span class="number">4000</span>)*(<span class="number">6</span>*x(<span class="number">3</span>)+<span class="number">8</span>*x(<span class="number">8</span>))-(<span class="number">783</span>/<span class="number">7000</span>)*(<span class="number">4</span>*x(<span class="number">4</span>)+<span class="number">11</span>*x(<span class="number">9</span>))-(<span class="number">200</span>/<span class="number">4000</span>)*x(<span class="number">5</span>));</span><br><span class="line">a=<span class="built_in">zeros</span>(<span class="number">5</span>,<span class="number">9</span>);</span><br><span class="line">a(<span class="number">1</span>,<span class="number">1</span>)=<span class="number">5</span>;a(<span class="number">1</span>,<span class="number">6</span>)=<span class="number">10</span>;</span><br><span class="line">a(<span class="number">2</span>,<span class="number">2</span>)=<span class="number">7</span>;a(<span class="number">2</span>,<span class="number">7</span>)=<span class="number">9</span>;a(<span class="number">2</span>,<span class="number">9</span>)=<span class="number">12</span>;</span><br><span class="line">a(<span class="number">3</span>,<span class="number">3</span>)=<span class="number">6</span>;a(<span class="number">3</span>,<span class="number">8</span>)=<span class="number">8</span>;</span><br><span class="line">a(<span class="number">4</span>,<span class="number">4</span>)=<span class="number">4</span>;a(<span class="number">4</span>,<span class="number">9</span>)=<span class="number">11</span>;</span><br><span class="line">a(<span class="number">5</span>,<span class="number">5</span>)=<span class="number">7</span>;</span><br><span class="line">b=[<span class="number">6000</span>;<span class="number">10000</span>;<span class="number">4000</span>;<span class="number">7000</span>;<span class="number">4000</span>];</span><br><span class="line">aeq=[<span class="number">1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">-1</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">0</span>];</span><br><span class="line">beq=[<span class="number">0</span>;<span class="number">0</span>];</span><br><span class="line">[x,fval]=fmincon(f,<span class="built_in">randn</span>(<span class="number">9</span>,<span class="number">1</span>),a,b,aeq,beq,<span class="built_in">zeros</span>(<span class="number">9</span>,<span class="number">1</span>));</span><br><span class="line">fval=-fval</span><br></pre></td></tr></table></figure></p>
<h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><p>　　本题使用matlab求解很不方便，这里只提供lingo代码。<br>　　这道题关键在于对三个仓载货量和最大容许量成比例的建模。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">wu/1..4/:a,b,c,y;</span><br><span class="line">cang/1..3/:w,v;</span><br><span class="line">links(wu,cang):x;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">c=3100 3800 3500 2850;</span><br><span class="line">b=480 650 580 390;</span><br><span class="line">a=18 15 23 12;</span><br><span class="line">w=10 16 8;</span><br><span class="line">v=6800 8700 5300;</span><br><span class="line">enddata</span><br><span class="line">max=@sum(wu(i):c(i)*@sum(cang(j):x(i,j)));</span><br><span class="line">@for(wu(i):@sum(cang(j):x(i,j))&lt;a(i));</span><br><span class="line">@for(cang(j):@sum(wu(i):x(i,j))&lt;w(j));</span><br><span class="line">@for(cang(j):@sum(wu(i):b(i)*x(i,j))&lt;v(j));</span><br><span class="line">@for(cang(j):@sum(wu(i):x(i,j))/w(j)=(@sum(wu(i):x(i,1))/w(1)));</span><br><span class="line">@for(wu(i):y(i)=@sum(cang(j):x(i,j)));</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">!a(i)为运输货物i的重量</span><br><span class="line">!b(i)为单位货物所占的空间</span><br><span class="line">!c(i)为单位货物的利润</span><br><span class="line">!y(i)为四种物资的量</span><br><span class="line">!w,v分别是空间和体积限制</span><br></pre></td></tr></table></figure></p>
<h2 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h2><p>　　这题和上一题一样，由于决策变量是二维变量使用lingo求解更为方便<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">row/1..3/;</span><br><span class="line">col/1..4/:b;</span><br><span class="line">link(row,col):c,x;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">b=62 83 39 91;</span><br><span class="line">c=132 0 100 103</span><br><span class="line">  0 91 100 100</span><br><span class="line">  106 89 100 98;</span><br><span class="line">@text(&#x27;ex.txt&#x27;)=@table(x); !存到文本文件中;</span><br><span class="line">enddata</span><br><span class="line">min=@sum(link:c*x);</span><br><span class="line">@for(col(j):@sum(row(i):x(i,j))=b(j));</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>数学建模算法与应用习题</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2022/04/23/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AE%97%E6%B3%95%E4%B8%8E%E5%BA%94%E7%94%A8%E4%B9%A0%E9%A2%98/%E7%AC%AC%E4%B8%89%E7%AB%A0/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>第二章</title>
    <url>/2022/04/23/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AE%97%E6%B3%95%E4%B8%8E%E5%BA%94%E7%94%A8%E4%B9%A0%E9%A2%98/%E7%AC%AC%E4%BA%8C%E7%AB%A0/</url>
    <content><![CDATA[<h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><p>　　只需要把$x_1x_2$换成y在利用0-1规划的性质对条件进行变形即可。</p>
<h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p>　　很明显决策变量是小区，要达到全部覆盖只需要满足每个小区能选的小学数量大于1即可。<br>　　这题连数据都不需要。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">col/1..6/:x;</span><br><span class="line">endsets</span><br><span class="line">min=@sum(col:x);</span><br><span class="line">x(1)+x(2)+x(3)&gt;1;</span><br><span class="line">x(2)+x(4)&gt;1;</span><br><span class="line">x(3)+x(5)&gt;1;</span><br><span class="line">x(4)+x(6)&gt;1;</span><br><span class="line">x(5)+x(6)&gt;1;</span><br><span class="line">x(1)&gt;1;</span><br><span class="line">x(2)+x(4)+x(6)&gt;1;</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
<h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><p>　　没啥好说的引入0-1的限制就行。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">she/1..6/;</span><br><span class="line">com/1..4/;</span><br><span class="line">link(she,com):c,x;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">c=4 2 3 4</span><br><span class="line">6 4 5 5</span><br><span class="line">7 6 7 6</span><br><span class="line">7 8 8 6</span><br><span class="line">7 9 8 6</span><br><span class="line">7 10 8 6;</span><br><span class="line">enddata</span><br><span class="line">max=@sum(link:c*x);</span><br><span class="line">@for(she(i):@sum(com(j):x(i,j))=1);</span><br><span class="line">@for(com(j):@sum(she(i):x(i,j))&gt;1);</span><br><span class="line">@for(link:@bin(x));</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
<h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><p>　　待更新</p>
<h2 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h2><p>　　首先考虑到比较小的数据范围，可以搜索出料头小于1米的切割方案（大于1米则可以切出一根1米的棍子）。<br>　　对于这七种切割方案进行规划，即可得到最小使用根数（注意材料根数要是整数）。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">row/1..3/;</span><br><span class="line">col/1..7/:x;</span><br><span class="line">link(row,col):a;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">a=1 2 0 0 0 0 1</span><br><span class="line">0 0 3 2 1 0 1</span><br><span class="line">4 1 0 2 4 6 1;</span><br><span class="line">enddata</span><br><span class="line">min=@sum(col:x);</span><br><span class="line">@for(row(i):@sum(col(j):a(i,j)*x(j))&gt;100);</span><br><span class="line">@for(col:@gin(x));</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
<h2 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h2><p>　　和第三题很像<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">car/1..8/;</span><br><span class="line">pos/1..5/;</span><br><span class="line">link(pos,car):c,x;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">c=30 25 18 32 27 19 22 26</span><br><span class="line">29 31 19 18 21 20 30 19</span><br><span class="line">28 29 30 19 19 22 23 26</span><br><span class="line">29 30 19 24 25 19 18 21</span><br><span class="line">21 20 18 17 16 14 16 18;</span><br><span class="line">enddata</span><br><span class="line">min=@sum(link:c*x);</span><br><span class="line">@for(pos(i):@sum(car(j):x(i,j))=1);</span><br><span class="line">@for(car(j):@sum(pos(i):x(i,j))&lt;1);</span><br><span class="line">@for(link:@bin(x));</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>数学建模算法与应用习题</tag>
      </tags>
  </entry>
  <entry>
    <title>粗糙度定标公式整理</title>
    <url>/2023/02/19/%E7%A7%91%E7%A0%94%E9%A1%B9%E7%9B%AE%E7%B3%BB%E5%88%97/%E7%B2%97%E7%B3%99%E5%BA%A6%E5%AE%9A%E6%A0%87%E5%85%AC%E5%BC%8F%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<h2 id="1-L-opt-公式形式"><a href="#1-L-opt-公式形式" class="headerlink" title="1 L_{opt}公式形式"></a>1 <script type="math/tex">L_{opt}</script>公式形式</h2><script type="math/tex; mode=display">L_{opt1}$$在低粗糙度时表现为常数，在高粗糙度时表现为指数形式：</script><p>\begin{equation}\tag{1}<br>L_{opt1}(rms,\theta,pp) = \alpha rms^{\beta}<br>\end{equation}</p>
<script type="math/tex; mode=display">

$$L_{opt2}$$在指数粗糙面和分形粗糙面时表现为$$\eqref{1}$$这类幂函数形式，
在高斯粗糙面表现为：$$L_{opt2} = \alpha rms + \beta</script><h2 id="2-L-opt1-公式"><a href="#2-L-opt1-公式" class="headerlink" title="2 L_{opt1}公式"></a>2 <script type="math/tex">L_{opt1}</script>公式</h2><h4 id="2-1-在HH极化下35-circ-的公式"><a href="#2-1-在HH极化下35-circ-的公式" class="headerlink" title="2.1 在HH极化下35^{\circ}的公式"></a>2.1 在HH极化下<script type="math/tex">35^{\circ}</script>的公式</h4><script type="math/tex; mode=display">
\begin{array}
\begin{equation}

\end{equation}</script>]]></content>
      <tags>
        <tag>科研项目系列</tag>
      </tags>
  </entry>
  <entry>
    <title>chap2 感知机模型简洁总结</title>
    <url>/2023/05/12/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/chap2%20%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A8%A1%E5%9E%8B%E7%AE%80%E6%B4%81%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="1、感知机模型"><a href="#1、感知机模型" class="headerlink" title="1、感知机模型"></a>1、感知机模型</h2><p>输入空间：$\mathcal{X} \in \mathbb{R}^n$</p>
<p>输出空间：$\mathcal{Y} = \{+1,-1\}$</p>
<p>特征空间：$\{f|f(\vec{x}) = sign(\vec{w} \cdot \vec{x} + b)\}$<br>($sign$ 为符号函数)</p>
<h2 id="2、学习策略"><a href="#2、学习策略" class="headerlink" title="2、学习策略"></a>2、学习策略</h2><p>$x_0$到超平面的距离：$\frac{1}{\Vert \vec{w} \Vert} \lvert \vec{w} \cdot \vec{x_0} + b \rvert$<br>($\Vert \vec{w} \Vert$ 是 $\vec{w}$ 的 $L_2$ 范数)</p>
<p>由于误分类点实际类别$y_i$与预测类别$f(\vec{x_i}) = sign(\vec{w} \cdot \vec{x_i} + b)$正负相反</p>
<p>因此误分类点到超平面的距离是：$-\frac{1}{\Vert \vec{w} \Vert} y_i (\vec{w} \cdot \vec{x_i} + b)$</p>
<p>为了便于求导，损失函数可以定义为：$L(\vec{w},b) = -\sum\limits_{x_i \in M} y_i (\vec{w} \cdot \vec{x_i} + b)$</p>
<h2 id="3、学习算法"><a href="#3、学习算法" class="headerlink" title="3、学习算法"></a>3、学习算法</h2><p>随机梯度下降：一次随机选取一个误分类点进行梯度下降</p>
<p>损失函数$L$ 分别对 $\vec{w}$ 和 $b$ 求梯度得：<br>$\nabla_{\vec{w}} L(\vec{w},b) = -\sum\limits_{x_i \in M} y_i \vec{x_i}$、<br>$\nabla_{b} L(\vec{w},b) = -\sum\limits_{x_i \in M} y_i$</p>
<p>参数更新方式：$\vec{w} = \vec{w} + \eta y_i x_i$、$b = b + \eta y_i$<br>($\eta \in (0,1]$ 为学习率)</p>
<p>参数一直更新，直到样本点中没有误分类点为止。</p>
<h2 id="4、对偶问题"><a href="#4、对偶问题" class="headerlink" title="4、对偶问题"></a>4、对偶问题</h2><p>由上文的学习算法可得，$\vec{w}$ 和 $b$ 是通过逐次随机选取一个误分类点更新而来</p>
<p>因此可以设 $\vec{w}$ 的每个元素和 $b$ 都为0，参数总共更新 $n$ 次；</p>
<p>最终学习到的 $\vec{w}$ 和 $b$ 可以表示为：<br>$\vec{w} = \sum\limits_{i=1}\limits^{N} \alpha_i y_i x_i$、<br>$b = \sum\limits_{i=1}\limits^{N} \alpha_i y_i$<br>($\alpha_i = n_i \eta$，其中 $n_i$ 为点i被选中用于更新的次数)</p>
<p>由第三节中提到的 $\vec{w}$ 和 $b$ 的更新方式，可以反推出 $\alpha$ 和 $b$ 的更新方式：</p>
<p>$\alpha_i = \alpha_i + \eta$、$b = b + \eta y_i$</p>
]]></content>
      <tags>
        <tag>统计学习方法</tag>
      </tags>
  </entry>
  <entry>
    <title>chap3 KNN模型简洁总结</title>
    <url>/2023/05/12/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/chap3%20KNN%E6%A8%A1%E5%9E%8B%E7%AE%80%E6%B4%81%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>由于KNN是一种基于实例学习的算法，不需要训练过程。</p>
<p>只需要确定了数据集、距离度量、k值以及分类规则，某个样本的类别就能被唯一确定。</p>
<p>因此下文不介绍学习策略和学习算法。</p>
<h2 id="1、KNN模型"><a href="#1、KNN模型" class="headerlink" title="1、KNN模型"></a>1、KNN模型</h2><p>输入空间：$\mathcal{X} \in \mathbb{R}^n$ </p>
<p>输出空间：$\mathcal{y} \in \{c_1,c_2,…,c_K\}$</p>
<p>特征空间：不显式学习</p>
<h2 id="2、距离度量"><a href="#2、距离度量" class="headerlink" title="2、距离度量"></a>2、距离度量</h2><p>一般采用 $L_p$ 距离(闵可夫斯基距离，Minkowski distance). </p>
<p>$L_p$ 的表达式：$L_p(\vec{x_i},\vec{x_j}) = (\sum\limits_{l=1}^n \lvert x_i^{(l)} - x_j^{(l)} \rvert ^p)^{\frac{1}{p}}$ $\quad$ ($p \geq 1$)</p>
<p>$p = 2$ 时就是欧氏距离：$L_2(\vec{x_i},\vec{x_j}) = \sqrt{\sum\limits_{l=1}^n (x_i^{(l)} - x_j^{(l)})^2}$</p>
<p>$p = 1$ 时称为曼哈顿距离：$L_1(\vec{x_i},\vec{x_j}) =  \sum\limits_{l=1}^n \lvert x_i^{(l)} - x_j^{(l)} \rvert$</p>
<p>$p = \infty$ 时，它是各个维度坐标距离的最大值：$L_{\infty} = \max\limits_{l} \lvert x_i^{(l)} - x_j^{(l)} \rvert$</p>
<h2 id="3、k值选择"><a href="#3、k值选择" class="headerlink" title="3、k值选择"></a>3、k值选择</h2><p>k值过小，模型容易受到噪声点影响导致过拟合；k值过大则容易欠拟合. </p>
<p>k值一般通过交叉验证选取。</p>
<h2 id="4、分类决策规则"><a href="#4、分类决策规则" class="headerlink" title="4、分类决策规则"></a>4、分类决策规则</h2><p>一般考虑让经验风险最小，也就是误分类率 $\frac{1}{K} \sum\limits_{\vec{x_i} \in N_K(\vec{x})} \mathbb{I}(y_i \neq c_k)$ 最小</p>
<p>也就是要让 $\frac{1}{K} \sum\limits_{\vec{x_i} \in N_K(\vec{x})}\mathbb{I}(y_i = c_j) = 1 - \frac{1}{K} \sum\limits_{\vec{x_i} \in N_K(\vec{x})} \mathbb{I}(y_i \neq c_k)$ 最大</p>
<p>当损失函数为0-1损失很熟时，多数表决规则分类函数为：$y = \mathop{\arg\max}\limits_{c_j} \sum\limits_{\vec{x_i} \in N_K(\vec{x})}\mathbb{I}(y_i = c_j)$</p>
<p>所以多数表决规则等价于经验风险最小</p>
]]></content>
      <tags>
        <tag>统计学习方法</tag>
      </tags>
  </entry>
  <entry>
    <title>chap4 朴素贝叶斯模型简洁总结</title>
    <url>/2023/05/13/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/chap4%20%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E6%A8%A1%E5%9E%8B%E7%AE%80%E6%B4%81%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>统计学习方法</tag>
      </tags>
  </entry>
  <entry>
    <title>林轩田机器学习每章要点</title>
    <url>/2023/05/14/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/%E6%9E%97%E8%BD%A9%E7%94%B0%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%AF%8F%E7%AB%A0%E8%A6%81%E7%82%B9/</url>
    <content><![CDATA[<h1 id="0-符号假设"><a href="#0-符号假设" class="headerlink" title="0. 符号假设"></a>0. 符号假设</h1><h1 id="1-When-Can-Machine-Learn"><a href="#1-When-Can-Machine-Learn" class="headerlink" title="1. When Can Machine Learn?"></a>1. When Can Machine Learn?</h1><h2 id="1-1"><a href="#1-1" class="headerlink" title="1.1"></a>1.1</h2><h2 id="1-2-Learning-to-Answer-Yes-­No"><a href="#1-2-Learning-to-Answer-Yes-­No" class="headerlink" title="1.2 Learning to Answer Yes-­No"></a>1.2 Learning to Answer Yes-­No</h2><p>本节主要介绍了感知机算法，它在一定条件下可以使得 $\textbf{E}_{in} \approx 0$ (在数据集上的误差近似为0)。</p>
<p>感知机学习算法 $\mathcal{A}$ 通过线性可分的数据 $\mathcal{D}$ 以及感知机 $\mathcal{H}$ 获得假设 $g$ </p>
<ul>
<li>感知机的假设空间：定义在 $\mathbb{R}^d$ 上的一条直线或超平面</li>
<li>感知机算法可以不断纠正错误并改进</li>
<li>感知机的分类正确性保证：数据是线性可分的</li>
<li>无法分类的数据：存储效果最好的直线</li>
</ul>
<h2 id="1-3-Types-of-Learning"><a href="#1-3-Types-of-Learning" class="headerlink" title="1.3 Types of Learning"></a>1.3 Types of Learning</h2><p>本节主要介绍机器学习的分类</p>
<ul>
<li>按输出空间 $\mathcal{Y}$ 分类：分类、回归、结构化学习</li>
<li>按数据标签 $y_n$ 分类：监督学习、半监督学习、无监督学习、强化学习</li>
<li>按不同的学习方式分类：批量学习、在线学习、主动学习</li>
<li>按输入空间 $\mathcal{X}$ 分类：具体意义的数据、原始数据、抽象数据</li>
</ul>
<h2 id="1-4-Feasibility-of-Learning"><a href="#1-4-Feasibility-of-Learning" class="headerlink" title="1.4 Feasibility of Learning"></a>1.4 Feasibility of Learning</h2><p>本节主要介绍机器学习的可能性 </p>
<ul>
<li>NFL定理：面对所有的问题，没有一种算法能说比另一种算法更好</li>
<li><p>验证一个固定假设 $h$ 的 $E_{in}$ 和 $E_{out}$ 是否PAC</p>
<ul>
<li><p>机器能够学习的必要条件：样本满足独立同分布假设 (每次抽样之间相互独立，样本服从同一分布)</p>
</li>
<li><p>$E_{in}$ 为抽样样本（数据集）内所有数据中 $h(\vec{x}) = f(\vec{x})$ 的概率，<br>$E_{out}$ 为抽样样本外所有数据中 $h(\vec{x}) = f(\vec{x})$ 的概率</p>
<p> ($E_{in}(h) = \frac{1}{N} \sum\limits_{n=1}^{N} \mathbb{I}[h(\vec{x}) \neq y_n]$、<br> $E_{out} = \mathop{\varepsilon}\limits_{\vec{x} \sim{P}} \mathbb{I}[h(\vec{x}) \neq f(\vec{x})]$)</p>
</li>
<li><p>Hoeffding 不等式：$P[\lvert E_{in} - E_{out} \rvert &gt; \epsilon] \leq 2exp(-2 \epsilon^2 N)$</p>
<p> (说明了只要样本数 $N$ 够大，$E_{in}$ 和 $E_{out}$ 相差的很大概率会很小，也就可以用 $E_{in}$ 来估计 $E_{out}$)</p>
</li>
<li>上述 Hoeffding 不等式说明了 $E_{in}$ 和 $E_{out}$ 是 PAC(概率近似相等) 的</li>
</ul>
</li>
<li><p>在 $E_{in}(h)$ 足够小且 $\lvert \mathcal{H} \rvert$ 有限的情况下，学习有可能能实现了</p>
<ul>
<li>坏数据集 (BAD $\mathcal{D}$)：使得假设 $h$ 的 $E_{in}$ 和 $E_{out}$ 相差很大的数据集</li>
<li><p>$P_{\mathcal{D}}(BAD \; \mathcal{D}) \leq P(BAD \; \mathcal{D} \; for \; h_1) + … + P(BAD \; \mathcal{D} \; for \; h_M)$</p>
<p> $P_{\mathcal{D}}(BAD \; \mathcal{D}) \leq 2exp(-2 \epsilon^2 N) + … + 2exp(-2 \epsilon^2 N)$</p>
<p> $P_{\mathcal{D}}(BAD \; \mathcal{D}) \leq 2Mexp(-2 \epsilon^2 N)$ </p>
<p> 也就是说只要 $N$ 足够大，$\lvert \mathcal{H} \rvert$ 有限的情况下。<br> 不管使用什么算法 $\mathcal{A}$ 都能够使得 $E_{in}$ 和 $E_{out}$ PAC，</p>
<p> 如果 $\mathcal{A}$ 可以找到 $g$ 使 $E_{in}(g) \approx 0$ 那么PAC可以保证 $E_{out}(g) \approx 0$</p>
</li>
</ul>
</li>
</ul>
<h1 id="2-Why-Can-Machines-Learn"><a href="#2-Why-Can-Machines-Learn" class="headerlink" title="2. Why Can Machines Learn?"></a>2. Why Can Machines Learn?</h1><h2 id="2-1-Training-VS-Testing"><a href="#2-1-Training-VS-Testing" class="headerlink" title="2.1 Training VS Testing"></a>2.1 Training VS Testing</h2><p>本节主要介绍假设数量 $M = \infty$ 时，机器学习是否有可能性</p>
<ul>
<li>$M$ 过小 $E_{in}(g) \approx 0$ 难以实现(选择过少)，$M$ 过大出现坏样本的概率又显著增加，<br>导致 $E_{in}(g)$ 和 $E_{out}(g)$ 无法PAC</li>
<li>按照对数据集中样本点的分类结果可以将无穷种假设分成 $effective(N)$ 种，<br>如果 $effective(N) &lt;&lt; 2^N$ ，机器学习是有可能的</li>
<li>成长函数 $m_{\mathcal{H}}(N)$ 是含N个数据点的数据集最多的假设种类数<br>($m_{\mathcal{H}}(N) = \mathop{max}\limits_{\vec{x_1},…,\vec{x_N} \in \mathcal{X}} \lvert \mathcal{H}(x_1,…,x_N) \rvert$)</li>
<li>$m_{\mathcal{H}}(N) = O(N^{k-1})$ ($k$ 是break point，也就是 $k$ 个样本点类别的 $2^k$ 种情况<br>都能被 $\mathcal{H}$ 中其中一个假设全部正确分类)   </li>
</ul>
<h2 id="2-2-Theory-of-Generalization"><a href="#2-2-Theory-of-Generalization" class="headerlink" title="2.2 Theory of Generalization"></a>2.2 Theory of Generalization</h2><ul>
<li>$N &gt; k$ 时，$m_{\mathcal{H}}(N)$ 会比 $2^N$ 小的多</li>
<li><p>Bounding Function $B(N,k)$ 是 $m_{\mathcal{H}}(N)$ 的上限，以下是它的一些性质:</p>
<ul>
<li><p>$k = 1$ 时，$B(N,1) = 1$</p>
</li>
<li><p>$N &lt; k$ 时，$B(N,k) = 2^N$ (相当于没有限制)</p>
</li>
<li><p>$N = k$ 时，$B(N,k) = 2^k - 1$ (刚出现不能被覆盖的分类情况)</p>
</li>
</ul>
</li>
<li><p>通过递推得到 $B(N,k)$ 其他情况下的一些性质:</p>
<ul>
<li><p>把 $N$ 个样本可以被覆盖的二分情况再分为两类：第一类每两种情况的 $x_1$ 到 $x_{k-1}$ 的类别完全相同，$x_k$ 的类别不同且成对，其他为第二类</p>
</li>
<li><p>第一类情况个数记为 $\alpha$，第二类为 $\beta$，存在以下关系：$B(N,k) = 2\alpha + \beta$、<br>$\alpha + \beta \leq B(N-1,k)$、$\alpha \leq B(N-1,k-1)$</p>
</li>
<li><p>因此可以得到 $B(N,k) = B(N-1,k) + B(N-1,k-1)$ (取等证明略)</p>
</li>
<li><p>因此 $B(N,k) = \sum\limits_{i=0}^{k-1} C_i^N$，最高次项为 $N^{k-1}$，所以成长函数 $m_{\mathcal{H}}(N)$ 是 $poly(N)$ 的</p>
</li>
</ul>
</li>
<li><p>用成长函数 $m_{\mathcal{H}}(N)$ 替代 $M$ 证明 $E_{in}$ 和 $E_{out}$ 是PAC的</p>
<ul>
<li><p>证明略</p>
</li>
<li><p>VC bound：$P_{\mathcal{D}}(\lvert E_{in} - E_{out} \rvert &gt; \epsilon) \leq 4m_{\mathcal{H}}(N)exp(-\frac{1}{8} \epsilon^2 N)$</p>
</li>
</ul>
</li>
</ul>
<h2 id="2-3-The-VC-Dimension"><a href="#2-3-The-VC-Dimension" class="headerlink" title="2.3 The VC Dimension"></a>2.3 The VC Dimension</h2><p>本节介绍VC维的意义及其与泛化能力的关系</p>
<ul>
<li><p>VC维的定义：使得 $m_{\mathcal{H}}(N) = 2^N$ 成立的最大N，记为 $d_{VC}$</p>
<ul>
<li><p>机器学习的条件：1、$m_{\mathcal{H}}(N)$ 有间断点k；2、样本数N足够大(这两点保证 $E_{out}$ 和 $E_{in}$ PAC)；<br>3、合适的算法 $\mathcal{A}$ (保证 $E_{in} \approx 0$)</p>
</li>
<li><p>$d_{VC}$ 有限时，$E_{out}$ 和 $E_{in}$ 是PAC的</p>
</li>
</ul>
</li>
<li><p>$d_{VC} = d+1$ </p>
<ul>
<li><p>先证明 $d_{VC} \geq d+1$，由于 $X\vec{w}_{d+1} = \vec{y}_{d+1}$ 可得 $\vec{w} = X^{-1}\vec{y}$<br> (X有 $d+1$ 个维度和 $d+1$ 个样本).</p>
<p> 因此对每一种 $\vec{y}$，$\vec{w}$ 唯一确定. $\vec{w}$ 的所有情况也就可以覆盖 $\vec{y}$ 的所有情况</p>
</li>
<li><p>再证明 $d_{VC} \leq d+1$，也就是对 $d+2$ 个样本 $\vec{w}$ 的所有情况不可以覆盖 $\vec{y}$ 的所有情况</p>
<p> 由于 $\vec{x}_{d+2}$ (第 $d+2$ 个样本) 能被表示成前 $d+1$ 个样本的线性组合. </p>
<p> 也就是：$\vec{x}_{d+2} = a_1\vec{x}_{1} + … + a_{d+1}\vec{x}_{d+1}$ </p>
<p> 因此存在 $\vec{w}$ 使得 $\vec{x}_{d+2}<em>\vec{w} = a_1\vec{x}_{1}</em>\vec{w} + … + a_{d+1}\vec{x}_{d+1}*\vec{w}&gt;0$</p>
<p> 这种情况下 $\vec{x}_{d+2}$ 一定是正类. $\vec{w}$ 的所有情况不能覆盖 $\vec{y}$ 的所有情况</p>
</li>
</ul>
</li>
<li>$d_{VC}$ 的物理意义：假设空间的自由度。所以 $M$ 和 $d_{VC}$ 是成正比的</li>
<li><p>$d_{VC}$ 和泛化能力、样本复杂度以及模型复杂度的关系</p>
<ul>
<li><p>$E_{out}(g) \leq E_{in}(g) + \sqrt{\dfrac{8}{N} \ln{\dfrac{4(2N)^{d_{VC}}}{\delta}}}$</p>
</li>
<li><p>$\Omega(N,\mathcal{H},\delta) = \sqrt{\dfrac{8}{N} \ln{\dfrac{4(2N)^{d_{VC}}}{\delta}}}$ 称为模型复杂度的惩罚项</p>
</li>
<li><p>随着 $d_{VC}$ 增加，$E_{in}$ 下降，但是 $\Omega$ 上升。所以 $E_{out}$ 随 $d_{VC}$ 先下降后上升</p>
</li>
<li><p>样本复杂度：$d_{VC}$ 固定的情况下，$N$ 的合理取值(理论上 $N \approx 10000d_{VC}$ 实际上只需要 $N \approx 10d_{VC}$)</p>
</li>
</ul>
</li>
</ul>
<h2 id="2-4-Noise-and-Error"><a href="#2-4-Noise-and-Error" class="headerlink" title="2.4  Noise and Error"></a>2.4  Noise and Error</h2><p>本节主要说了在数据集有噪声的情况下，VC维依然是成立的，机器学习依然是可能的</p>
<ul>
<li>样本由 $P(y|\vec{x})$ (也就是 $f(\vec{x}) + noise$ ) 产生<ul>
<li>只要 $\vec{x} \stackrel{\text{i.i.d}}{\sim}{P(\vec{x})}$ 和 $y \stackrel{\text{i.i.d}}{\sim}{P(y)}$，VC维理论依然成立</li>
</ul>
</li>
<li><p>误差的度量方式</p>
<ul>
<li><p>误差度量的特点：1、只考虑样本外的未知数据，2、分别考虑每个数据点的误差(不一定满足，但本课程只考虑这个)</p>
</li>
<li><p>常用误差有：0-1误差和平均平方误差(MSE)，前者用于分类，后者用于回归</p>
</li>
<li><p>0-1误差下的 $f(\vec{x}) = \mathop{\arg\max}\limits_{y \in \mathcal{Y}} P(y|\vec{x})$，使得翻转噪声最小</p>
</li>
<li><p>MSE下的 $f(\vec{x}) = \sum\limits_{y \in \mathcal{Y}} yP(y|\vec{x})$，使得高斯噪声最小</p>
</li>
</ul>
</li>
<li>错误衡量设计的两种方式：有意义的或者易于设计算法</li>
<li>通过”虚拟复制”某类错误对应的标签的样本w次的方法，可以计算 $E_{in}^w$ (w为某类错误的权重)</li>
</ul>
<h1 id="3-How-Can-Machines-Learn"><a href="#3-How-Can-Machines-Learn" class="headerlink" title="3. How Can Machines Learn?"></a>3. How Can Machines Learn?</h1><h2 id="3-1-Linear-Regression"><a href="#3-1-Linear-Regression" class="headerlink" title="3.1 Linear Regression"></a>3.1 Linear Regression</h2><ul>
<li>线性回归使用超平面 $h(\vec{x}) = \vec{w}^T\vec{x}$ 估计真实值</li>
<li><p>线性回归存在用伪逆表示的解析解 $\vec{w}_{LIN} = X^{\dagger}\vec{y}$</p>
<ul>
<li><p>MSE误差最小等价于：$\min\limits_{\vec{w}} E_{in}(\vec{w}) = \frac{1}{N} \Vert X\vec{w} - \vec{y} \Vert^2$</p>
</li>
<li><p>因为MSE损失函数为凸函数，所以 $\nabla E_{in}(\vec{w}) = 0$ 处即为最小值点</p>
</li>
</ul>
</li>
<li><p>线性回归相当于使 $\vec{y}$ 投影到由 $X$ 的特征张成的平面内，其中 $y - \hat{y}$ 是误差</p>
<ul>
<li><p>$trace(I - H) = N-(d+1)$ 表示$\vec{y}$ 投影到由 $X$ 的特征张成的平面内损失的自由度</p>
</li>
<li><p>如果有真实值来自于$f(X) \in span{X}$，那么对 <strong>noise</strong> 进行投影即 $I-H$ 操作可得：</p>
<p>  $\overline{E_{in}} = \frac{1}{N}\Vert y - \hat{y} \Vert^2 = \frac{1}{N}\Vert (I-H)\textbf{noise} \Vert^2 =<br>  \textbf{noise} (1-\frac{d+1}{N})$</p>
</li>
<li><p>$\overline{E_{out}} = \textbf{noise} (1+\frac{d+1}{N})$，随着 $N$ 逐渐增大 $\overline{E_{in}} \approx \overline{E_{out}}$</p>
</li>
</ul>
</li>
<li>用回归器进行分类的代价是更松的上界，因为 $err_{0/1} \leq err_{sqr}$，所以 $E_{out} \leq 分类E_{in} + 复杂度 \leq 回归E_{in} + 复杂度$</li>
</ul>
<h2 id="3-2-Logistic-Regression"><a href="#3-2-Logistic-Regression" class="headerlink" title="3.2  Logistic Regression"></a>3.2  Logistic Regression</h2><ul>
<li>Logistic 回归的目标函数是 $P(+1|x)$，其假设为 $h(x) = \theta(\vec{w}^T x)$(其中 $\theta = \dfrac{1}{1+e^{-s}}$)</li>
<li>Logistic 回归的损失函数是交叉熵函数(似然函数的负对数 $L(\vec{w}) = \frac{1}{N}\sum\limits_{n=1}^{N} -\ln \theta(y_n \vec{w}^T \vec{x}_n)$)</li>
<li>Logistic 回归的损失函数是凸函数，因此其最小值在<br>$\nabla E_{in}(\vec{w}) = \frac{1}{N} \sum\limits_{n=1}^{N} \theta(-y_n \vec{w}^T \vec{x}_n) (-y_n \vec{x}_n) = 0$ 处取得</li>
<li>Logistic 回归可以用梯度下降法求得 $L(\vec{w})$ 最小值<ul>
<li>$\vec{w}$ 更新方式：$\vec{w}_{t+1} = \vec{w}_{t} + \eta \vec{v}$</li>
<li>$\eta$ 很小的时候可以泰勒展开近似，$E_{in}(\vec{w}_{t+1}) \approx E_{in}(\vec{w}_{t} + \eta \vec{v}^T \nabla E_{in}(\vec{w}_t))$</li>
<li>当 $\vec{v}$ 与 $\nabla E_{in}(\vec{w}_t)$ 方向相反时(即 $\vec{v} = -\dfrac{\nabla E_{in}(\vec{w}_t)}{\Vert \nabla E_{in}(\vec{w}_t) \Vert}$)<br>$E_{in}$ 下降最快</li>
<li>我们希望 $\eta$ 与 $\Vert \nabla E_{in}(\vec{w}_t) \Vert$ 正相关，因此更新的式子可以改为:<br>$\vec{w}_{t+1} = \vec{w}_{t} - \eta \nabla E_{in}(\vec{w}_t)$</li>
</ul>
</li>
</ul>
<h2 id="3-3-Linear-Models-for-Classification"><a href="#3-3-Linear-Models-for-Classification" class="headerlink" title="3.3 Linear Models for Classification"></a>3.3 Linear Models for Classification</h2><ul>
<li>线性回归和Logistic 回归都可以解决线性分类问题</li>
<li>随机梯度下降(SGD)可以简化更新操作到 $\mathcal{O}(1)$ 复杂度<br>简化后的更新操作：$\vec{w}_{t+1} = \vec{w}_{t} - \eta \theta(-y_n \vec{w}_t^T \vec{x}_n) (-y_n \vec{x}_n)$</li>
<li>多分类问题<ul>
<li>OVA：对每一类和所有其他类别数据做二分类，分别计算 $P(k|\vec{x})$<ul>
<li>优点：高效，可以和所有类似Logistic 回归的算法结合</li>
<li>缺点：K较大时容易类别不平衡</li>
</ul>
</li>
<li>OVO：对每一类和每种其他类别数据做二分类<ul>
<li>优点：可以和所有二分类算法结合</li>
<li>缺点：时空复杂度高，预测速度慢</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="3-4-Nonlinear-Transformation"><a href="#3-4-Nonlinear-Transformation" class="headerlink" title="3.4 Nonlinear Transformation"></a>3.4 Nonlinear Transformation</h2><ul>
<li>可以用一非线性函数 $\Phi$ 将非线性函数映射到线性空间中，实现x域到z域特征转换</li>
<li>z域特征维度 $\tilde{d} = C_{Q+d}^{Q} = C_{Q+d}^{d} = \mathcal{O}(Q^d)$ 较大，<br>会导致模型泛化能力差，时空复杂度高</li>
<li>优先选择 $Q$ 较小的假设，如果 $E_{in}$ 太高在考虑复杂假设</li>
</ul>
<h1 id="4-How-Can-Machines-Learn-Better"><a href="#4-How-Can-Machines-Learn-Better" class="headerlink" title="4. How Can Machines Learn Better?"></a>4. How Can Machines Learn Better?</h1><h2 id="4-1-Hazard-of-Overfitting"><a href="#4-1-Hazard-of-Overfitting" class="headerlink" title="4.1  Hazard of Overfitting"></a>4.1  Hazard of Overfitting</h2><ul>
<li>过拟合：$E_{in}$ 变小但是 $E_{out}$ 变大的过程。以下是过拟合常见原因：<ul>
<li>VC Dimension太大</li>
<li>随机噪声或系统性噪声过强</li>
<li>训练样本数 $N$ 不够</li>
</ul>
</li>
<li>避免过拟合的措施:<ul>
<li>从简单的模型开始</li>
<li>数据清理(修正明显错误的label或者删除错误样本点)</li>
<li>数据增强(注意新增的数据可能和原来数据不是 $i.i.d.$ 的，尽量保证新数据内的样本是 $i.i.d.$ 的)</li>
<li>正则化</li>
<li>验证</li>
</ul>
</li>
</ul>
<h2 id="4-2-Regularization"><a href="#4-2-Regularization" class="headerlink" title="4.2 Regularization"></a>4.2 Regularization</h2><ul>
<li>正则化约束条件：$\Vert \vec{w} \Vert^2 \leq C$，$H_n \subset H(C) \subset H_m$ ($n&lt;m$)</li>
<li>最优解需要满足 $-\nabla E_{in}(w_{reg})$ 与 $w^Tw = C$ 的法向量平行，<br>即 $\nabla E_{in}(w_{reg}) + \frac{2\lambda}{N}w_{reg}=0$<ul>
<li>求解 $w_{reg}$ 等价于最小化 $E_{aug} = E_{in} + \frac{\lambda}{N} w_{reg}^Tw_{reg}$</li>
<li>多项式变换除了可以用朴素的 $x^n$，也可以用勒让德多项式</li>
</ul>
</li>
<li>$E_{aug}$ 可以看成 $E_{out}$ 的代理<ul>
<li>$E_{aug} = E_{in} + \frac{\lambda}{N} w^Tw$ 中的 $w^Tw$ 是单个假设的复杂度，记为 $\Omega(w)$。<br>整个 $H$ 的复杂度为 $\Omega(H)$，$\Omega(w)$ 包含在 $\Omega(H)$ 中</li>
<li>整个 $H$ 的VC维是 $d_{VC} = \tilde{d} + 1$，引入正则化限定条件 $H(C)$ 后的VC维记为 $d_{EFF}(H,A)$.<br>则有 $d_{EFF}(H,A) \leq d_{VC}$</li>
</ul>
</li>
<li>正则化项选择方法<ul>
<li>基于目标特性，比如目标具有对称性则考虑用 $\sum\mathbb{I}(q \% 2==0)w^2_q$ 作为正则化项</li>
<li>接近真实(曲线平滑、简单)，如L1正则化 $\sum \vert w_q \vert$</li>
<li>易于实现，如L2正则化 $\sum w^2_q$</li>
<li>噪音越大，$\lambda$ 也要越大</li>
</ul>
</li>
</ul>
<h2 id="4-3-Validation"><a href="#4-3-Validation" class="headerlink" title="4.3 Validation"></a>4.3 Validation</h2><p>模型选择指的是在 $M$ 个假设空间 $H_m$ 对应 $M$ 种算法 $A_m$ 中选择最优假设空间 $H_{m^*}$ </p>
<p>使得 $g_{m^<em>} = A_{m^</em>}(D)$，$E_{out}(g_{m^*})$ 最小</p>
<ul>
<li>用验证集选择模型<ul>
<li>用 $E_{in}$ 选择模型是危险的(因为即用 $D$ 训练模型又用它选择模型)</li>
<li>用 $E_{test}$ 选择模型是作弊且无法实现的(难以获得测试数据)</li>
</ul>
</li>
<li>验证集模型选择原理：$E_{out}(g) \mathop{\approx}\limits_{small K} E_{out}(g^-) \mathop{\approx}\limits_{large K} E_{val}(g^-)$<ul>
<li>验证集大小 $K$ 越大，$g^-$ 越不如 $g$，但是 $E_{val}$ 越接近 $E_{out}$ (学习曲线)</li>
<li>验证集大小 $K$ 越小，$g^-$ 越接近 $g$，但是 $E_{val}$ 越不如 $E_{out}$ (学习曲线)</li>
</ul>
</li>
<li>留一法交叉验证(LOOCV) 的期望 $\mathop{\varepsilon}\limits_{D} E_{LOOCV}(H,A) = \overline{E_{out}}(N-1)$<br>是对 $\overline{E_{out}}$的近似无偏估计<ul>
<li>$E_{LOOCV} = \frac{1}{N} \sum\limits_{n=1}^{N} err(g_m^-(\vec{x}_n),y_n)$ ($K = 1$ 的特殊情况)</li>
<li>LOOCV的缺点：计算量大、结果不稳定</li>
</ul>
</li>
<li>V折交叉验证公式：$E_{CV} = \frac{1}{V} \sum\limits_{v=1}^{V} E_{val}^{(v)}(g_v^-)$</li>
</ul>
<h2 id="4-4-Three-Learning-Principles"><a href="#4-4-Three-Learning-Principles" class="headerlink" title="4.4 Three Learning Principles"></a>4.4 Three Learning Principles</h2><ul>
<li>奥卡姆剃刀原则：适合数据的最简单的模型是最合适的</li>
<li>抽样误差：数据要匹配测试环境</li>
<li>偷窥数据：容易造成过拟合。应当避免通过数据进行决策，并且对别人的研究成果保持警惕</li>
<li>power of three<ul>
<li>机器学习相关的三个领域：数据挖掘、机器学习、统计</li>
<li>三个理论保证：霍夫丁不等式、多假设霍夫丁不等式、VC维</li>
<li>三种线性模型：感知机、线性回归、Logistic回归</li>
<li>三种重要的工具：特征转换、正则化、验证</li>
<li>三个锦囊妙计：奥卡姆剃刀、防止抽样误差、谨慎偷窥数据</li>
<li>机器学习未来方向：更多转换、更多正则化、更少标签</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>统计学习方法</tag>
      </tags>
  </entry>
  <entry>
    <title>ICESat-2 ATL07 数据说明</title>
    <url>/2023/08/03/%E7%A7%91%E7%A0%94%E9%A1%B9%E7%9B%AE%E7%B3%BB%E5%88%97/%E6%95%B0%E6%8D%AE%E8%AF%B4%E6%98%8E%E6%95%B4%E7%90%86/ICESat-2-ATL07-%E6%95%B0%E6%8D%AE%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<h1 id="1-数据描述"><a href="#1-数据描述" class="headerlink" title="1 数据描述"></a>1 数据描述</h1><h2 id="1-1-参数"><a href="#1-1-参数" class="headerlink" title="1.1 参数"></a>1.1 参数</h2><p>沿轨道的海冰和海面高度。其中海冰高度是相对于时变海面（包括海洋潮汐、逆气压计效应和其他因素）而言的。</p>
<h2 id="1-2-文件信息"><a href="#1-2-文件信息" class="headerlink" title="1.2 文件信息"></a>1.2 文件信息</h2><h3 id="1-2-1-格式"><a href="#1-2-1-格式" class="headerlink" title="1.2.1 格式"></a>1.2.1 格式</h3><p>HDF格式。</p>
<h3 id="1-2-2-ICESat-2描述"><a href="#1-2-2-ICESat-2描述" class="headerlink" title="1.2.2 ICESat-2描述"></a>1.2.2 ICESat-2描述</h3><p>每个地面轨道根据产生它的激光点号进行编号，最左边为地面轨道1L（GT1L），最右边为地面轨道3R（GT3R）。每对位点中的左右位点在跨轨道方向相距约90米，在沿轨道方向相距约2.5公里。</p>
]]></content>
      <tags>
        <tag>数据说明</tag>
      </tags>
  </entry>
  <entry>
    <title>辐射基础1</title>
    <url>/2023/05/21/%E9%81%A5%E6%84%9F%E5%9F%BA%E7%A1%80/%E8%BE%90%E5%B0%84%E5%9F%BA%E7%A1%80/%E8%BE%90%E5%B0%84%E5%9F%BA%E7%A1%801/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>遥感基础</tag>
      </tags>
  </entry>
</search>
